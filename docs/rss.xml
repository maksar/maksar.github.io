<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Shestakov Alex - All articles</title>
        <link>https://maksar.github.io</link>
        <description><![CDATA[Personal blog of Shestakov Alex]]></description>
        <atom:link href="https://maksar.github.io/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Tue, 27 Jul 2021 00:00:00 UT</lastBuildDate>
        <item>
    <title>Parsing environment variables in kotlin with konfig</title>
    <link>https://maksar.github.io/posts/code/2021-07-27-konfig.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Parsing environment variables in kotlin with konfig</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Parsing environment variables in kotlin with konfig</h1>
    <article>
  <span class="header">
    July 27, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/kotlin.html">kotlin</a> #<a href="../../tags/konfig.html">konfig</a>
  </span>
  <section>
    <p>There is a wonderful kotlin library for reading configuration from various sources (environment variables, files, etc.) – <a href="https://github.com/npryce/konfig">konfig</a>. It allows to define your application configuration in a declarative way and even perform some data transformations along the way.</p>
<!--more-->
<p><img src="../../previews/konfig/logo.png" class="center" /></p>
<p>Konfig was used in <a href="../../posts/projects/2021-03-09-milestones.html">milestones</a> project to read some values from a predefined <code>.env</code> file and, if absent, from environment variables.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">MILESTONES_JIRA_URL</span>      <span class="kw">by</span> stringType</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">MILESTONES_JIRA_USERNAME</span> <span class="kw">by</span> stringType</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">MILESTONES_JIRA_PASSWORD</span> <span class="kw">by</span> stringType</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">MILESTONES_JIRA_PROJECT</span>  <span class="kw">by</span> stringType</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">MILESTONES_PAGE_SIZE</span>     <span class="kw">by</span> intType</span></code></pre></div>
<p>Fallback order can be explicitly specified by <code>overriding</code> combinator.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">env</span> <span class="op">=</span> EnvironmentVariables<span class="op">()</span> overriding ConfigurationProperties<span class="op">.</span>fromOptionalFile<span class="op">(</span>File<span class="op">(</span><span class="st">&quot;.env&quot;</span><span class="op">))</span></span></code></pre></div>
<p>Usage is pretty straightforward too.</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">jiraClient</span> <span class="op">=</span> AsynchronousJiraRestClientFactory<span class="op">().</span>createWithBasicHttpAuthentication<span class="op">(</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  URI<span class="op">(</span>env<span class="op">[</span>MILESTONES_JIRA_URL<span class="op">]),</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>  env<span class="op">[</span>MILESTONES_JIRA_USERNAME<span class="op">],</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>  env<span class="op">[</span>MILESTONES_JIRA_PASSWORD<span class="op">]</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="op">)</span></span></code></pre></div>
<p>But today, there was a slight requirements change and I decided to factor out explicitly hardcoded mapping (finally) to become actual configuration. So I did transition from this:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">team</span><span class="op">(</span><span class="va">c</span><span class="op">:</span> <span class="dt">String</span><span class="op">)</span> <span class="op">=</span> <span class="st">&quot;Team </span><span class="ss">$c</span><span class="st">&quot;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">teamHeads</span> <span class="op">=</span> mapOf<span class="op">(</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>  team<span class="op">(</span><span class="st">&quot;Salesforce&quot;</span><span class="op">)</span> to <span class="st">&quot;a.person&quot;</span><span class="op">,</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>  team<span class="op">(</span><span class="st">&quot;Internal Automation&quot;</span><span class="op">)</span> to <span class="st">&quot;a.human&quot;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>  <span class="op">...</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="op">)</span></span></code></pre></div>
<p>To the nested definition of “how to parse a value”. Configuration values itself are just comma separated string <code>MILESTONES_DEPARTMENTS_MAPPING="Salesforce:a.person,Internal Automation:a.human"</code>. So, inner layer gets converted into <code>Pair</code>s after splitting by <code>":"</code>. Outer layer (after splitting by comma) converts inner list of <code>Pair</code>s to a <code>Map</code>.</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">MILESTONES_DEPARTMENTS_MAPPING</span> <span class="kw">by</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  listType<span class="op">(</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    listType<span class="op">(</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>      stringType<span class="op">,</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>      <span class="st">&quot;:&quot;</span><span class="op">.</span>toRegex<span class="op">()</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">).</span>wrappedAs <span class="op">{</span> Pair<span class="op">(</span><span class="st">&quot;Team </span><span class="ss">${</span>it<span class="op">.</span>first<span class="op">()</span><span class="ss">}</span><span class="st">&quot;</span><span class="op">,</span> it<span class="op">.</span>last<span class="op">())</span> <span class="op">},</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;,&quot;</span><span class="op">.</span>toRegex<span class="op">()</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>  <span class="op">).</span>wrappedAs <span class="op">{</span> it<span class="op">.</span>toMap<span class="op">()</span> <span class="op">}</span></span></code></pre></div>
<p>At the time of usage, <code>env[MILESTONES_DEPARTMENTS_MAPPING]</code> value is already a <code>Map&lt;String, String&gt;</code>. So there is no need to worry about conversions, mapping or any other transformation of the input configuration string, neat! I very much like such declarative approach, it reminds me <a href="https://hackage.haskell.org/package/optparse-applicative">optparse-applicative</a> library from <a href="../../tags/haskell.html">Haskell</a> ecosystem.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 27 Jul 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2021-07-27-konfig.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Optional or null</title>
    <link>https://maksar.github.io/posts/WAT/2021-07-27.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Optional or null</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Optional or null</h1>
    <article>
  <span class="header">
    July 27, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="why-bother">Why bother…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>ApplicationUser applicationUser <span class="op">=</span> Optional<span class="op">.</span><span class="fu">ofNullable</span><span class="op">(</span>ComponentAccessor<span class="op">.</span><span class="fu">getUserManager</span><span class="op">().</span><span class="fu">getUserByName</span><span class="op">(</span>userName<span class="op">)).</span><span class="fu">orElse</span><span class="op">(</span><span class="kw">null</span><span class="op">);</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 27 Jul 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-07-27.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Union types</title>
    <link>https://maksar.github.io/posts/WAT/2021-06-29.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Union types</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Union types</h1>
    <article>
  <span class="header">
    June 29, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="hardcore">Hardcore…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode typescript"><code class="sourceCode typescript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>date<span class="op">?:</span> <span class="dt">string</span> <span class="op">|</span> Date <span class="op">|</span> [Date<span class="op">,</span> Date]<span class="op">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 29 Jun 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-06-29.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>URL validation</title>
    <link>https://maksar.github.io/posts/WAT/2021-06-24.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - URL validation</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>URL validation</h1>
    <article>
  <span class="header">
    June 24, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/url.jpg" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/url.jpg" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 24 Jun 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-06-24.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Week formatting</title>
    <link>https://maksar.github.io/posts/WAT/2021-06-21.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Week formatting</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Week formatting</h1>
    <article>
  <span class="header">
    June 21, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="is-it-friday-yet">Is it Friday yet?</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">const</span> daysOfTheWeekNames <span class="op">=</span> {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">monday</span><span class="op">:</span> <span class="st">'Monday'</span><span class="op">,</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">tuesday</span><span class="op">:</span> <span class="st">'Tuesday'</span><span class="op">,</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">wednesday</span><span class="op">:</span> <span class="st">'Wednesday'</span><span class="op">,</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="dt">thursday</span><span class="op">:</span> <span class="st">'Thursday'</span><span class="op">,</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="dt">friday</span><span class="op">:</span> <span class="st">'Friday'</span><span class="op">,</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="dt">saturday</span><span class="op">:</span> <span class="st">'Saturday'</span><span class="op">,</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="dt">sunday</span><span class="op">:</span> <span class="st">'Sunday'</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>}<span class="op">;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">function</span> <span class="fu">getDayOfTheWeekName</span>(date) {</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    <span class="cf">switch</span> (<span class="kw">new</span> <span class="bu">Date</span>(date)<span class="op">.</span><span class="fu">getDay</span>()) {</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="dv">0</span><span class="op">:</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> daysOfTheWeekNames<span class="op">.</span><span class="at">sunday</span><span class="op">;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="dv">1</span><span class="op">:</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> daysOfTheWeekNames<span class="op">.</span><span class="at">monday</span><span class="op">;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="dv">2</span><span class="op">:</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> daysOfTheWeekNames<span class="op">.</span><span class="at">tuesday</span><span class="op">;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="dv">3</span><span class="op">:</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> daysOfTheWeekNames<span class="op">.</span><span class="at">wednesday</span><span class="op">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="dv">4</span><span class="op">:</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> daysOfTheWeekNames<span class="op">.</span><span class="at">thursday</span><span class="op">;</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="dv">5</span><span class="op">:</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> daysOfTheWeekNames<span class="op">.</span><span class="at">friday</span><span class="op">;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>        <span class="cf">case</span> <span class="dv">6</span><span class="op">:</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> daysOfTheWeekNames<span class="op">.</span><span class="at">saturday</span><span class="op">;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>        <span class="cf">default</span><span class="op">:</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<h2 id="still-not-friday">Still not Friday?</h2>
<div class="sourceCode" id="cb2"><pre class="sourceCode c#"><code class="sourceCode cs"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> mondayOpenTime<span class="op">;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> mondayCloseTime<span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> mondayFirstOrderTime<span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> mondayLastOrderTime<span class="op">;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> tuesdayOpenTime<span class="op">;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> tuesdayCloseTime<span class="op">;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> tuesdayFirstOrderTime<span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> tuesdayLastOrderTime<span class="op">;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> wednesdayOpenTime<span class="op">;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> wednesdayCloseTime<span class="op">;</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> wednesdayFirstOrderTime<span class="op">;</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> wednesdayLastOrderTime<span class="op">;</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> thursdayOpenTime<span class="op">;</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> thursdayCloseTime<span class="op">;</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> thursdayFirstOrderTime<span class="op">;</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> thursdayLastOrderTime<span class="op">;</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> fridayOpenTime<span class="op">;</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> fridayCloseTime<span class="op">;</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> fridayFirstOrderTime<span class="op">;</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> fridayLastOrderTime<span class="op">;</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> saturdayOpenTime<span class="op">;</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> saturdayCloseTime<span class="op">;</span></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> saturdayFirstOrderTime<span class="op">;</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> saturdayLastOrderTime<span class="op">;</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> sundayOpenTime<span class="op">;</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> sundayCloseTime<span class="op">;</span></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> sundayFirstOrderTime<span class="op">;</span></span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">int</span><span class="op">?</span> sundayLastOrderTime<span class="op">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 21 Jun 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-06-21.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>People membership validation in JIRA fields against Active Directory</title>
    <link>https://maksar.github.io/posts/projects/2021-06-11-coorish.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - People membership validation in JIRA fields against Active Directory</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>People membership validation in JIRA fields against Active Directory</h1>
    <article>
  <span class="header">
    June 11, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/projects.html">projects</a> #<a href="../../tags/haskell.html">haskell</a> #<a href="../../tags/aeson.html">aeson</a> #<a href="../../tags/servant.html">servant</a>
  </span>
  <section>
    <p>Current version of JIRA inside Itransition does not allow to validate “whether a person belongs to a certain group” for multi-people fields, only for single-user fields. <a href="https://github.com/maksar/Coorish">Coorish</a> – is a small utility to determine ineligible people being specified in JIRA tickets.</p>
<!--more-->
<p><a href="../../images/coorish/1.png" class="center fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/coorish/1.png" /></a></p>
<h2 id="history">History</h2>
<p>Project card – is a custom JIRA ticket, containing a bunch of fields about the project (I do work in an outsource company, so…) – technologies used, people involved, plans and troubles, etc. Since migration plans are far away, I decided to write a small utility to ensure that there are no “misuses” – only people from <code>Project.Management.All</code> AD group are specified in “Project Manager” fields in project cards.</p>
<h2 id="internals">Internals</h2>
<p>So it is a small terminal application, which “talks” to JIRA asking about project cards, “talks” to AD via LDAP to get members of the groups and spills the results to the terminal.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ot">main ::</span> <span class="dt">IO</span> ()</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>main <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">Config</span> {<span class="op">..</span>} <span class="ot">&lt;-</span> readConfig <span class="op">@</span><span class="dt">Config</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  ldapConfig <span class="ot">&lt;-</span> readConfig <span class="op">@</span><span class="dt">Ldap.LdapConfig</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  jiraConfig <span class="ot">&lt;-</span> readConfig <span class="op">@</span><span class="dt">Jira.JiraConfig</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  activeDirectoryPeople <span class="ot">&lt;-</span> Ldap.groupMembers ldapGroups ldapConfig</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  projectCards <span class="ot">&lt;-</span> Jira.projectCards jiraField jiraConfig</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>  forM_ projectCards <span class="op">$</span> \card <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> people <span class="ot">=</span> Jira.people card</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    when (<span class="fu">null</span> people) <span class="op">$</span> <span class="fu">pure</span> ()</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> (validPeople, invalidPeople) <span class="ot">=</span> partition (\person <span class="ot">-&gt;</span> Jira.displayName person <span class="ot">`elem`</span> activeDirectoryPeople) people</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    unless (<span class="fu">null</span> invalidPeople) <span class="op">$</span> <span class="kw">do</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>      putTextLn <span class="op">$</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;Card '&quot;</span> <span class="op">&lt;&gt;</span> Jira.projectName card <span class="op">&lt;&gt;</span> <span class="st">&quot;' (&quot;</span> <span class="op">&lt;&gt;</span> Jira.key card <span class="op">&lt;&gt;</span> <span class="st">&quot;) &quot;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>          <span class="op">&lt;&gt;</span> <span class="st">&quot;has some people in '&quot;</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>          <span class="op">&lt;&gt;</span> jiraField</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>          <span class="op">&lt;&gt;</span> <span class="st">&quot;' field not from '&quot;</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>          <span class="op">&lt;&gt;</span> <span class="fu">mconcat</span> (intersperse <span class="st">&quot;; &quot;</span> ldapGroups)</span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>          <span class="op">&lt;&gt;</span> <span class="st">&quot;' AD group: '&quot;</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>          <span class="op">&lt;&gt;</span> <span class="fu">mconcat</span> (intersperse <span class="st">&quot;; &quot;</span> (<span class="fu">map</span> Jira.displayName invalidPeople))</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>          <span class="op">&lt;&gt;</span> <span class="st">&quot;'&quot;</span></span></code></pre></div>
<p>I used the <a href="../../posts/projects/2020-02-07-ldap-bot.html">same</a> ldap-client library for LDAP communication, but this time utilized text-ldap for parsing DNs from ldap into proper data structures instead of treating results like strings. Envy library with some sprinkles of template-haskell magic allowed me to read configuration properties from environment variables. Servant-client again proved to be very handy to “talk” to the external HTTP API. Template haskell was <a href="https://github.com/maksar/coorish/commit/d961d01763ad66c113abf9551315b5f1b5a4f2dd#diff-31b2976c7d81ff33a9d0115c0b39c980023862d7bad0cef4e20fda15fa2bb863R91-R97">used</a> for one more thing – embedding configuration values into <code>FromJSON</code> instances – I didn’t know how to parametrize them in an elegant way.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">Config</span> <span class="ot">=</span> <span class="dt">Config</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>   {<span class="ot"> jiraField ::</span> <span class="dt">Text</span>,</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="ot">     ldapGroups ::</span> [<span class="dt">Text</span>]</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>   }</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>   <span class="kw">deriving</span> (<span class="dt">Generic</span>, <span class="dt">Show</span>)</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="ot">configValue ::</span> <span class="dt">Lift</span> t <span class="ot">=&gt;</span> (<span class="dt">Config</span> <span class="ot">-&gt;</span> t) <span class="ot">-&gt;</span> <span class="dt">Q</span> <span class="dt">Exp</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a> configValue f <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>   groups <span class="ot">&lt;-</span> runIO (f <span class="op">&lt;$&gt;</span> readConfig <span class="op">@</span><span class="dt">Config</span>)</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>   [e|groups|]</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a><span class="kw">instance</span> <span class="dt">FromJSON</span> <span class="dt">ProjectCard</span> <span class="kw">where</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>   parseJSON <span class="ot">=</span> withObject <span class="st">&quot;card&quot;</span> <span class="op">$</span> \card <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>     key <span class="ot">&lt;-</span> card <span class="op">.:</span> <span class="st">&quot;key&quot;</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>     fields <span class="ot">&lt;-</span> card <span class="op">.:</span> <span class="st">&quot;fields&quot;</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>     projectName <span class="ot">&lt;-</span> fields <span class="op">.:</span> <span class="st">&quot;summary&quot;</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>     peopleMaybe <span class="ot">&lt;-</span> fields <span class="op">.:?</span> <span class="op">$</span>(configValue jiraField) <span class="op">&lt;|&gt;</span> <span class="fu">fmap</span> (<span class="fu">replicate</span> <span class="dv">1</span>) <span class="op">&lt;$&gt;</span> fields <span class="op">.:?</span> <span class="op">$</span>(configValue jiraField)</span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>     <span class="fu">pure</span> <span class="op">$</span> <span class="dt">ProjectCard</span> key projectName <span class="op">$</span> fromMaybe [] peopleMaybe</span></code></pre></div>
<p>Well, now I <a href="https://github.com/maksar/coorish/blob/35fbc99a57c57fae5a8232f9105ed81e6f61e06d/app/Jira.hs#L88-L94">know</a>, the trick is to make <code>FromJSON</code> instance for a function).</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">instance</span> <span class="dt">FromJSON</span> (<span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">ProjectCard</span>) <span class="kw">where</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  parseJSON <span class="ot">=</span> withObject <span class="st">&quot;card&quot;</span> <span class="op">$</span> \card <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    key <span class="ot">&lt;-</span> card <span class="op">.:</span> <span class="st">&quot;key&quot;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    fields <span class="ot">&lt;-</span> card <span class="op">.:</span> <span class="st">&quot;fields&quot;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    projectName <span class="ot">&lt;-</span> fields <span class="op">.:</span> <span class="st">&quot;summary&quot;</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    allPossiblePeople <span class="ot">&lt;-</span> M.fromList <span class="op">&lt;$&gt;</span> <span class="fu">mapM</span> parser (HM.toList fields)</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="fu">pure</span> <span class="op">$</span> \feild <span class="ot">-&gt;</span> <span class="dt">ProjectCard</span> key projectName <span class="op">$</span> fromMaybe [] <span class="op">$</span> join <span class="op">$</span> <span class="fu">lookup</span> feild allPossiblePeople</span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a><span class="ot">parser ::</span> <span class="dt">FromJSON</span> a <span class="ot">=&gt;</span> (<span class="dt">Text</span>, <span class="dt">Value</span>) <span class="ot">-&gt;</span> <span class="dt">Parser</span> (<span class="dt">Text</span>, <span class="dt">Maybe</span> [a])</span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>parser (x, field) <span class="ot">=</span> (x,) <span class="op">&lt;$&gt;</span> (parseJSON field <span class="op">&lt;|&gt;</span> <span class="fu">fmap</span> (<span class="fu">replicate</span> <span class="dv">1</span>) <span class="op">&lt;$&gt;</span> parseJSON field) <span class="op">&lt;|&gt;</span> <span class="fu">pure</span> (x, <span class="dt">Nothing</span>)</span></code></pre></div>
<p>That (and NIX <a href="https://github.com/maksar/coorish/blob/master/flake.nix#L23-L46">flakes</a> of course) allowed me to create several binaries for each JIRA field to test against (instead of configuring it with terminal flags or environment variables). Being tired of typing <code>T.pack</code> and <code>T.unpack</code>, I decided to give a <a href="https://github.com/kowainik/relude">relude</a> a try – a custom prelude, which is quite nice to use (but I haven’t yet tried <a href="https://hackage.haskell.org/package/rio">rio</a> or <a href="https://github.com/serokell/universum">universum</a>).</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode nix"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="ex">configs</span> = {</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;technical-cordinator&quot;</span> = p:</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="ex">p</span> <span class="st">&quot;Technical Coordinator&quot;</span> <span class="st">&quot;Tech Coordinators&quot;</span><span class="kw">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;cto-office-representative&quot;</span> = p:</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    <span class="ex">p</span> <span class="st">&quot;CTO Office Representative&quot;</span> <span class="st">&quot;CTO Office&quot;</span><span class="kw">;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;project-manager&quot;</span> = p: p <span class="st">&quot;Project manager&quot;</span> <span class="st">&quot;Managers All&quot;</span><span class="kw">;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>  <span class="ex">...</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="er">}</span><span class="kw">;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="ex">basePackage</span> = haskellPackages.callCabal2nix <span class="st">&quot;coorish&quot;</span> ./. { }<span class="kw">;</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="ex">package</span> = <span class="er">(</span><span class="ex">name:</span> field: groups:</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>  <span class="ex">basePackage.overrideDerivation</span> <span class="er">(</span><span class="ex">drv:</span> {</span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>    <span class="ex">pname</span> = <span class="st">&quot;coorish-</span><span class="va">${name}</span><span class="st">&quot;</span><span class="kw">;</span></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>    <span class="ex">buildInputs</span> = drv.buildInputs or [ ] ++ [ pkgs.makeWrapper ]<span class="kw">;</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>    <span class="ex">postInstall</span> = <span class="st">''</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>      <span class="fu">mv</span> <span class="va">$out</span>/bin/coorish-console <span class="va">$out</span>/bin/coorish-<span class="va">${name}</span></span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>      <span class="fu">rm</span> <span class="va">$out</span>/bin/coorish-server</span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>      <span class="ex">wrapProgram</span> <span class="va">$out</span>/bin/coorish-<span class="va">${name}</span> <span class="at">--set</span> COORISH_JIRA_FIELD <span class="st">&quot;</span><span class="va">${field}</span><span class="st">&quot;</span> <span class="at">--set</span> COORISH_LDAP_GROUPS <span class="st">&quot;</span><span class="va">${groups}</span><span class="st">&quot;</span></span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>    <span class="st">''</span><span class="kw">;</span></span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>  <span class="er">}</span><span class="kw">));</span></span></code></pre></div>
<h2 id="server">Server</h2>
<p>But having only console utilities are not useful for other people. Sometimes non-technical personnel wants to know “what is wrong” with project cards. So I decided to split the code into three parts:</p>
<ul>
<li>Library code, which does all the heavy lifting, but free of any presentation logic</li>
<li>Console application to display results in terminal (nix will build multiple binaries per config value)</li>
<li>Web server which executes all queries to JIRA and AD in concurrently and serves result on a single page</li>
</ul>
<p>Since web server needs all configs at once, I am concatenating everything together into <code>flatConfig</code> variable to pass it into <code>coorish-server</code> wrapper.</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode nix"><code class="sourceCode bash"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="ex">basePackage</span> = haskellPackages.callCabal2nix <span class="st">&quot;coorish&quot;</span> ./coorish { }<span class="kw">;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="ex">basePackageConsole</span> = haskellPackages.callCabal2nix <span class="st">&quot;console&quot;</span> ./console { coorish = basePackage<span class="kw">;</span> <span class="er">}</span><span class="kw">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="ex">basePackageServer</span> = haskellPackages.callCabal2nix <span class="st">&quot;server&quot;</span> ./server { coorish = basePackage<span class="kw">;</span> <span class="er">}</span><span class="kw">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="ex">flatConfig</span> = <span class="er">(</span><span class="ex">builtins.concatStringsSep</span> <span class="st">&quot;;&quot;</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>  <span class="kw">(</span><span class="ex">map</span> <span class="er">(</span><span class="ex">f:</span> f <span class="er">(</span><span class="ex">a:</span> b: <span class="st">&quot;</span><span class="va">${a}</span><span class="st">=</span><span class="va">${b}</span><span class="st">&quot;</span><span class="kw">))</span> <span class="kw">(</span><span class="ex">lib.attrValues</span> configs<span class="kw">)));</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="ex">server</span> = basePackageServer.overrideDerivation <span class="er">(</span><span class="ex">drv:</span> {</span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>  <span class="ex">pname</span> = <span class="st">&quot;coorish-server&quot;</span><span class="kw">;</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>  <span class="ex">buildInputs</span> = drv.buildInputs or [ ] ++ [ pkgs.makeWrapper ]<span class="kw">;</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>  <span class="ex">postInstall</span> = <span class="st">''</span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>    <span class="ex">wrapProgram</span> <span class="va">$out</span>/bin/coorish-server <span class="at">--set</span> COORISH_SERVER_CONFIG <span class="st">&quot;</span><span class="va">${flatConfig}</span><span class="st">&quot;</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>  <span class="st">''</span><span class="kw">;</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a><span class="er">}</span><span class="kw">);</span></span></code></pre></div>
<h2 id="plans">Plans</h2>
<p>I am also experimenting with generating a haskell data structure (with template-haskell) with fields, which would correspond to a JIRA project card on compile time.</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="ot">createConstant ::</span> <span class="dt">Q</span> [<span class="dt">Dec</span>]</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>createConstant <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>  cardTypeName <span class="ot">&lt;-</span> newName <span class="st">&quot;ProjectCard&quot;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>  cardConsName <span class="ot">&lt;-</span> newName <span class="st">&quot;ProjectCard&quot;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>  declare cardTypeName cardConsName <span class="op">=&lt;&lt;</span> <span class="fu">mapM</span> process <span class="op">=&lt;&lt;</span> runIO fields</span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>  <span class="kw">where</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a><span class="ot">    process ::</span> <span class="dt">JiraField</span> <span class="ot">-&gt;</span> <span class="dt">Q</span> <span class="dt">VarBangType</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>    process jf <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>      jName <span class="ot">&lt;-</span> newName <span class="op">$</span> T.unpack <span class="op">$</span> T.replace <span class="st">&quot; &quot;</span> <span class="st">&quot;&quot;</span> <span class="op">$</span> T.toLower <span class="op">$</span> jiraFieldName jf</span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>      jType <span class="ot">&lt;-</span> fromJust <span class="op">&lt;$&gt;</span> lookupTypeName (T.unpack <span class="op">$</span> T.replace <span class="st">&quot;Value&quot;</span> <span class="st">&quot;&quot;</span> <span class="op">$</span> T.replace <span class="st">&quot;Multiple &quot;</span> <span class="st">&quot;&quot;</span> <span class="op">$</span> T.replace <span class="st">&quot;Single &quot;</span> <span class="st">&quot;&quot;</span> <span class="op">$</span> T.pack <span class="op">$</span> <span class="fu">show</span> <span class="op">$</span> jiraFieldType jf)</span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>      <span class="fu">pure</span> (jName, <span class="dt">Bang</span> <span class="dt">NoSourceUnpackedness</span> <span class="dt">NoSourceStrictness</span>, <span class="dt">AppT</span> <span class="dt">ListT</span> (<span class="dt">ConT</span> jType))</span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a><span class="ot">    declare ::</span> <span class="dt">Name</span> <span class="ot">-&gt;</span> <span class="dt">Name</span> <span class="ot">-&gt;</span> [<span class="dt">VarBangType</span>] <span class="ot">-&gt;</span> <span class="dt">Q</span> [<span class="dt">Dec</span>]</span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>    declare cardTypeName cardConsName z <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a>      <span class="fu">pure</span> [<span class="dt">DataD</span> [] cardTypeName [] <span class="dt">Nothing</span> [<span class="dt">RecC</span> cardConsName z] [<span class="dt">DerivClause</span> <span class="dt">Nothing</span> [<span class="dt">ConT</span> '<span class="dt">'Show</span>, <span class="dt">ConT</span> '<span class="dt">'Generic</span>, <span class="dt">ConT</span> '<span class="dt">'FromJSON</span>]]]</span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">FieldTypePlurality</span> <span class="ot">=</span> <span class="dt">IssueKey</span></span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a>                        <span class="op">|</span> <span class="dt">Single</span> <span class="dt">FieldTypeKind</span></span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a>                        <span class="op">|</span> <span class="dt">Multiple</span> <span class="dt">FieldTypeKind</span></span>
<span id="cb6-20"><a href="#cb6-20" aria-hidden="true" tabindex="-1"></a>                        <span class="op">|</span> <span class="dt">UnknownField</span> <span class="kw">deriving</span></span>
<span id="cb6-21"><a href="#cb6-21" aria-hidden="true" tabindex="-1"></a>                        (<span class="dt">Generic</span>, <span class="dt">FromJSON</span>, <span class="dt">Show</span>, <span class="dt">Eq</span>)</span>
<span id="cb6-22"><a href="#cb6-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-23"><a href="#cb6-23" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">FieldTypeKind</span> <span class="ot">=</span> <span class="dt">UserValue</span></span>
<span id="cb6-24"><a href="#cb6-24" aria-hidden="true" tabindex="-1"></a>                   <span class="op">|</span> <span class="dt">GroupValue</span></span>
<span id="cb6-25"><a href="#cb6-25" aria-hidden="true" tabindex="-1"></a>                   <span class="op">|</span> <span class="dt">StringValue</span></span>
<span id="cb6-26"><a href="#cb6-26" aria-hidden="true" tabindex="-1"></a>                   <span class="op">|</span> <span class="dt">DateValue</span></span>
<span id="cb6-27"><a href="#cb6-27" aria-hidden="true" tabindex="-1"></a>                   <span class="op">|</span> <span class="dt">DateTimeValue</span></span>
<span id="cb6-28"><a href="#cb6-28" aria-hidden="true" tabindex="-1"></a>                   <span class="op">|</span> <span class="dt">OptionValue</span></span>
<span id="cb6-29"><a href="#cb6-29" aria-hidden="true" tabindex="-1"></a>                   <span class="op">|</span> <span class="dt">NumberValue</span></span>
<span id="cb6-30"><a href="#cb6-30" aria-hidden="true" tabindex="-1"></a>                   <span class="op">|</span> <span class="dt">AutocompleteValue</span></span>
<span id="cb6-31"><a href="#cb6-31" aria-hidden="true" tabindex="-1"></a>                   <span class="kw">deriving</span> (<span class="dt">Generic</span>, <span class="dt">FromJSON</span>, <span class="dt">Show</span>, <span class="dt">Eq</span>)</span>
<span id="cb6-32"><a href="#cb6-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-33"><a href="#cb6-33" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">JiraField</span> <span class="ot">=</span> <span class="dt">JiraField</span></span>
<span id="cb6-34"><a href="#cb6-34" aria-hidden="true" tabindex="-1"></a>  {<span class="ot"> jiraFieldId ::</span> <span class="dt">Text</span></span>
<span id="cb6-35"><a href="#cb6-35" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> jiraFieldName ::</span> <span class="dt">Text</span></span>
<span id="cb6-36"><a href="#cb6-36" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> jiraFieldType ::</span> <span class="dt">FieldTypePlurality</span></span>
<span id="cb6-37"><a href="#cb6-37" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb6-38"><a href="#cb6-38" aria-hidden="true" tabindex="-1"></a>  <span class="kw">deriving</span> (<span class="dt">Generic</span>, <span class="dt">Show</span>)</span>
<span id="cb6-39"><a href="#cb6-39" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-40"><a href="#cb6-40" aria-hidden="true" tabindex="-1"></a><span class="kw">instance</span> <span class="dt">FromJSON</span> <span class="dt">JiraField</span> <span class="kw">where</span></span>
<span id="cb6-41"><a href="#cb6-41" aria-hidden="true" tabindex="-1"></a>  parseJSON <span class="ot">=</span> withObject <span class="st">&quot;field&quot;</span> <span class="op">$</span> \field <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb6-42"><a href="#cb6-42" aria-hidden="true" tabindex="-1"></a>    <span class="fu">id</span> <span class="ot">&lt;-</span> field <span class="op">.:</span> <span class="st">&quot;id&quot;</span></span>
<span id="cb6-43"><a href="#cb6-43" aria-hidden="true" tabindex="-1"></a>    name <span class="ot">&lt;-</span> field <span class="op">.:</span> <span class="st">&quot;name&quot;</span></span>
<span id="cb6-44"><a href="#cb6-44" aria-hidden="true" tabindex="-1"></a>    config <span class="ot">&lt;-</span></span>
<span id="cb6-45"><a href="#cb6-45" aria-hidden="true" tabindex="-1"></a>      <span class="kw">if</span> <span class="fu">id</span> <span class="op">==</span> <span class="st">&quot;issuekey&quot;</span></span>
<span id="cb6-46"><a href="#cb6-46" aria-hidden="true" tabindex="-1"></a>        <span class="kw">then</span> <span class="fu">pure</span> <span class="dt">IssueKey</span></span>
<span id="cb6-47"><a href="#cb6-47" aria-hidden="true" tabindex="-1"></a>        <span class="kw">else</span> parseSchema <span class="op">=&lt;&lt;</span> field <span class="op">.:?</span> <span class="st">&quot;schema&quot;</span></span>
<span id="cb6-48"><a href="#cb6-48" aria-hidden="true" tabindex="-1"></a>    <span class="fu">pure</span> <span class="op">$</span> <span class="dt">JiraField</span> <span class="fu">id</span> name config</span>
<span id="cb6-49"><a href="#cb6-49" aria-hidden="true" tabindex="-1"></a>   <span class="kw">where</span></span>
<span id="cb6-50"><a href="#cb6-50" aria-hidden="true" tabindex="-1"></a><span class="ot">    parseSchema ::</span> <span class="dt">Maybe</span> <span class="dt">Object</span> <span class="ot">-&gt;</span> <span class="dt">Parser</span> <span class="dt">FieldTypePlurality</span></span>
<span id="cb6-51"><a href="#cb6-51" aria-hidden="true" tabindex="-1"></a>    parseSchema <span class="dt">Nothing</span> <span class="ot">=</span> <span class="fu">pure</span> <span class="dt">UnknownField</span></span>
<span id="cb6-52"><a href="#cb6-52" aria-hidden="true" tabindex="-1"></a>    parseSchema (<span class="dt">Just</span> schema) <span class="ot">=</span> parseType schema <span class="op">=&lt;&lt;</span> schema <span class="op">.:</span> <span class="st">&quot;type&quot;</span></span>
<span id="cb6-53"><a href="#cb6-53" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-54"><a href="#cb6-54" aria-hidden="true" tabindex="-1"></a><span class="ot">    parseType ::</span> <span class="dt">Object</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Parser</span> <span class="dt">FieldTypePlurality</span></span>
<span id="cb6-55"><a href="#cb6-55" aria-hidden="true" tabindex="-1"></a>    parseType _ <span class="st">&quot;user&quot;</span> <span class="ot">=</span> <span class="fu">pure</span> <span class="op">$</span> <span class="dt">Single</span> <span class="dt">UserValue</span></span>
<span id="cb6-56"><a href="#cb6-56" aria-hidden="true" tabindex="-1"></a>    parseType _ <span class="st">&quot;number&quot;</span> <span class="ot">=</span> <span class="fu">pure</span> <span class="op">$</span> <span class="dt">Single</span> <span class="dt">NumberValue</span></span>
<span id="cb6-57"><a href="#cb6-57" aria-hidden="true" tabindex="-1"></a>    parseType _ <span class="st">&quot;date&quot;</span> <span class="ot">=</span> <span class="fu">pure</span> <span class="op">$</span> <span class="dt">Single</span> <span class="dt">DateValue</span></span>
<span id="cb6-58"><a href="#cb6-58" aria-hidden="true" tabindex="-1"></a>    parseType _ <span class="st">&quot;datetime&quot;</span> <span class="ot">=</span> <span class="fu">pure</span> <span class="op">$</span> <span class="dt">Single</span> <span class="dt">DateTimeValue</span></span>
<span id="cb6-59"><a href="#cb6-59" aria-hidden="true" tabindex="-1"></a>    parseType _ <span class="st">&quot;option&quot;</span> <span class="ot">=</span> <span class="fu">pure</span> <span class="op">$</span> <span class="dt">Single</span> <span class="dt">OptionValue</span></span>
<span id="cb6-60"><a href="#cb6-60" aria-hidden="true" tabindex="-1"></a>    parseType _ <span class="st">&quot;string&quot;</span> <span class="ot">=</span> <span class="fu">pure</span> <span class="op">$</span> <span class="dt">Single</span> <span class="dt">StringValue</span></span>
<span id="cb6-61"><a href="#cb6-61" aria-hidden="true" tabindex="-1"></a>    parseType schema <span class="st">&quot;array&quot;</span> <span class="ot">=</span> parseArray <span class="op">&lt;$&gt;</span> schema <span class="op">.:</span> <span class="st">&quot;items&quot;</span></span>
<span id="cb6-62"><a href="#cb6-62" aria-hidden="true" tabindex="-1"></a>    parseType schema <span class="st">&quot;any&quot;</span> <span class="ot">=</span> parseCustom <span class="op">&lt;$&gt;</span> schema <span class="op">.:</span> <span class="st">&quot;custom&quot;</span></span>
<span id="cb6-63"><a href="#cb6-63" aria-hidden="true" tabindex="-1"></a>    parseType _ _ <span class="ot">=</span> <span class="fu">pure</span> <span class="dt">UnknownField</span></span>
<span id="cb6-64"><a href="#cb6-64" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-65"><a href="#cb6-65" aria-hidden="true" tabindex="-1"></a><span class="ot">    parseArray ::</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">FieldTypePlurality</span></span>
<span id="cb6-66"><a href="#cb6-66" aria-hidden="true" tabindex="-1"></a>    parseArray <span class="st">&quot;user&quot;</span> <span class="ot">=</span> <span class="dt">Multiple</span> <span class="dt">UserValue</span></span>
<span id="cb6-67"><a href="#cb6-67" aria-hidden="true" tabindex="-1"></a>    parseArray <span class="st">&quot;group&quot;</span> <span class="ot">=</span> <span class="dt">Multiple</span> <span class="dt">GroupValue</span></span>
<span id="cb6-68"><a href="#cb6-68" aria-hidden="true" tabindex="-1"></a>    parseArray <span class="st">&quot;option&quot;</span> <span class="ot">=</span> <span class="dt">Multiple</span> <span class="dt">OptionValue</span></span>
<span id="cb6-69"><a href="#cb6-69" aria-hidden="true" tabindex="-1"></a>    parseArray <span class="st">&quot;string&quot;</span> <span class="ot">=</span> <span class="dt">Multiple</span> <span class="dt">StringValue</span></span>
<span id="cb6-70"><a href="#cb6-70" aria-hidden="true" tabindex="-1"></a>    parseArray _ <span class="ot">=</span> <span class="dt">UnknownField</span></span>
<span id="cb6-71"><a href="#cb6-71" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-72"><a href="#cb6-72" aria-hidden="true" tabindex="-1"></a><span class="ot">    parseCustom ::</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">FieldTypePlurality</span></span>
<span id="cb6-73"><a href="#cb6-73" aria-hidden="true" tabindex="-1"></a>    parseCustom <span class="st">&quot;com.itransition.jira.plugin.customfields.jira-custom-fields:singlecomplete&quot;</span> <span class="ot">=</span> <span class="dt">Single</span> <span class="dt">AutocompleteValue</span></span>
<span id="cb6-74"><a href="#cb6-74" aria-hidden="true" tabindex="-1"></a>    parseCustom <span class="st">&quot;com.itransition.jira.plugin.customfields.jira-custom-fields:typeaheadfield&quot;</span> <span class="ot">=</span> <span class="dt">Multiple</span> <span class="dt">AutocompleteValue</span></span>
<span id="cb6-75"><a href="#cb6-75" aria-hidden="true" tabindex="-1"></a>    parseCustom _ <span class="ot">=</span> <span class="dt">UnknownField</span></span></code></pre></div>
<p>That would allow to express programs “around” project cards in “their” language and not hardcode field names or IDs into NIX build configs. But the experiment is far from end…</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 11 Jun 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/projects/2021-06-11-coorish.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Date formatting</title>
    <link>https://maksar.github.io/posts/WAT/2021-05-25.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Date formatting</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Date formatting</h1>
    <article>
  <span class="header">
    May 25, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="masterpiece">Masterpiece</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">const</span> getCurrentDate <span class="op">=</span> () <span class="kw">=&gt;</span> {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> <span class="bu">String</span>(<span class="kw">new</span> <span class="bu">Date</span>()<span class="op">.</span><span class="fu">getFullYear</span>()<span class="op">+</span><span class="st">'-'</span><span class="op">+</span>(<span class="st">&quot;0&quot;</span><span class="op">+</span>(<span class="kw">new</span> <span class="bu">Date</span>()<span class="op">.</span><span class="fu">getMonth</span>()<span class="op">+</span><span class="dv">1</span>))<span class="op">.</span><span class="fu">slice</span>(<span class="op">-</span><span class="dv">2</span>)<span class="op">+</span><span class="st">'-'</span><span class="op">+</span>(<span class="st">&quot;0&quot;</span><span class="op">+</span><span class="kw">new</span> <span class="bu">Date</span>()<span class="op">.</span><span class="fu">getDate</span>())<span class="op">.</span><span class="fu">slice</span>(<span class="op">-</span><span class="dv">2</span>))<span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 25 May 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-05-25.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Enums</title>
    <link>https://maksar.github.io/posts/WAT/2021-05-24.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Enums</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Enums</h1>
    <article>
  <span class="header">
    May 24, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="hi-there">HI there</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">enum</span> LO <span class="op">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    L<span class="op">,</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    O</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 24 May 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-05-24.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Chanel number 5</title>
    <link>https://maksar.github.io/posts/WAT/2021-05-05.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Chanel number 5</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Chanel number 5</h1>
    <article>
  <span class="header">
    May  5, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="where-is-5">Where is 5?</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cn">COUNT_NUMBER_ZERO</span> <span class="op">=</span> <span class="dv">0</span> <span class="co"># Value to be used in checks</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="cn">COUNT_NUMBER_ONE</span> <span class="op">=</span> <span class="dv">1</span> <span class="co"># Value to be used in checks</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="cn">COUNT_NUMBER_TWO</span> <span class="op">=</span> <span class="dv">2</span> <span class="co"># Value to be used in checks</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="cn">COUNT_NUMBER_THREE</span> <span class="op">=</span> <span class="dv">3</span> <span class="co"># Value to be used in checks</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="cn">COUNT_NUMBER_FOUR</span> <span class="op">=</span> <span class="dv">4</span> <span class="co"># Value to be used in checks</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="cn">COUNT_NUMBER_SIX</span> <span class="op">=</span> <span class="dv">6</span> <span class="co"># Value to be used in checks</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 05 May 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-05-05.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>TODOs</title>
    <link>https://maksar.github.io/posts/WAT/2021-04-22.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - TODOs</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>TODOs</h1>
    <article>
  <span class="header">
    April 22, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="famous-last-words">Famous last words</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">// todo: improve</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="fu">setcookie</span>(<span class="st">'twitter_access_token'</span><span class="ot">,</span> <span class="kw">null</span><span class="ot">,</span> <span class="fu">time</span>()<span class="ot">,</span> <span class="st">''</span><span class="ot">,</span> <span class="st">''</span><span class="ot">,</span> <span class="kw">true</span><span class="ot">,</span> <span class="kw">true</span>)<span class="ot">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="fu">setcookie</span>(<span class="st">'twitter_oauth_token'</span><span class="ot">,</span> <span class="kw">null</span><span class="ot">,</span> <span class="fu">time</span>()<span class="ot">,</span> <span class="st">''</span><span class="ot">,</span> <span class="st">''</span><span class="ot">,</span> <span class="kw">true</span><span class="ot">,</span> <span class="kw">true</span>)<span class="ot">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="fu">setcookie</span>(<span class="st">'twitter_oauth_token_secret'</span><span class="ot">,</span> <span class="kw">null</span><span class="ot">,</span> <span class="fu">time</span>()<span class="ot">,</span> <span class="st">''</span><span class="ot">,</span> <span class="st">''</span><span class="ot">,</span> <span class="kw">true</span><span class="ot">,</span> <span class="kw">true</span>)<span class="ot">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 22 Apr 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-04-22.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Explicit vs implicit</title>
    <link>https://maksar.github.io/posts/WAT/2021-04-07.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Explicit vs implicit</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Explicit vs implicit</h1>
    <article>
  <span class="header">
    April  7, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/explicit.jpg" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/explicit.jpg" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 07 Apr 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-04-07.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Refactoring</title>
    <link>https://maksar.github.io/posts/WAT/2021-04-06.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Refactoring</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Refactoring</h1>
    <article>
  <span class="header">
    April  6, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/refactoring.jpg" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/refactoring.jpg" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 06 Apr 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-04-06.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Telegram bot for managing Bitbucket repositories</title>
    <link>https://maksar.github.io/posts/projects/2021-03-17-gitman.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Telegram bot for managing Bitbucket repositories</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Telegram bot for managing Bitbucket repositories</h1>
    <article>
  <span class="header">
    March 17, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/projects.html">projects</a> #<a href="../../tags/ruby.html">ruby</a> #<a href="../../tags/fibers.html">fibers</a> #<a href="../../tags/rspec.html">rspec</a>
  </span>
  <section>
    <p>Gitman is a Telegram chat bot. It helps to manage source code repositories in Itransition Bitbucket server. Instead of creating repositories manually, our HelpDesk operators are using this bot. It sets up all merge hooks, commit message checks, default reviewers policy, other things which is tedious to do by hands.</p>
<!--more-->
<p>Here are some examples of <em>how it looks</em>:</p>
<p><a href="../../images/gitman/1.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/gitman/1.jpg" /></a> <a href="../../images/gitman/2.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/gitman/2.jpg" /></a> <a href="../../images/gitman/3.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/gitman/3.jpg" /></a> <a href="../../images/gitman/4.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/gitman/4.jpg" /></a></p>
<p>There are number of technical decisions, which makes this piece of software interesting to mention as a ‘ruby pearl’:</p>
<ul>
<li>usage of ruby Fibers feature</li>
<li>usage of pattern matching feature</li>
<li>non standard approach on integration testing</li>
</ul>
<p>It also features a <a href="https://github.com/maksar/gitman/blob/master/flake.nix#L46-L49">trick</a> (one of the first things I did with nix) with making some environment variables visible for a nix shell in order for the bundler (ruby build tool) to be able to build gems (ruby libraries) with native extensions. It even has a <a href="https://github.com/maksar/gitman/blob/master/flake.nix#L68">check phase</a> enabled ;)</p>
<p>Under the hood it uses my fork of <a href="https://github.com/nix-community/bundix/pull/75/files">bundix</a> (allows to nixify ruby dependencies) because the official version is forgotten by maintainers and no longer supports modern bundler.</p>
<p>Being a <a href="https://telegram.org">telegram</a> bot, gitman need to maintain a conversation with a user. Bot is not a stateless command processor, but rather a context-aware conversion member. In order to execute a particular command, it can ask additional question from the user and react to user’s responses.</p>
<p>Doing stateful operations is not an easy task in ruby. Majority of the frameworks only support stateless requests processing, when each new request doesn’t share any information with a previous one. Having a <em>conversation</em>, would require some kind of storage, <code>session</code> object maybe to store current state of a dialog. That complicates the code, forcing developer to save/restore conversation state of each request.</p>
<p>Gitman uses ruby Fibers feature to seamlessly suspend and continue code execution flow whenever user posts his/her response in a chat. Code of such dialog can be expressed as a single continuous method, which makes it easy to every aspect of the particular dialog.</p>
<p>Lets review an example – dialog to create a project inside Itransition’s Bitbucket server:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> project</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  project <span class="kw">=</span> request(<span class="st">&quot;What is Bitbucket PROJECT key?&quot;</span>)</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> (info <span class="kw">=</span> bitbucket<span class="at">.project_info</span>)</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    reply(<span class="st">&quot;Ok, </span><span class="sc">#{</span>project<span class="sc">}</span><span class="st"> project already exist.&quot;</span>)</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    print_info(info)</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="ot">@create_repository</span><span class="at">.call</span>(project)</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  <span class="cf">else</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    reply(<span class="st">&quot;There is no such project.&quot;</span>)</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    ask(<span class="st">&quot;Do you want to create it?&quot;</span>, <span class="kw">&amp;</span>method(<span class="wa">:create</span>))</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> create</span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>  name <span class="kw">=</span> request(<span class="st">&quot;Specify project name (human readable):&quot;</span>)</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>  description <span class="kw">=</span> request(<span class="st">&quot;Specify project description:&quot;</span>)</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>  ask(<span class="st">&quot;We are about to create project with name '</span><span class="sc">#{</span>name<span class="sc">}</span><span class="st">', description '</span><span class="sc">#{</span>description<span class="sc">}</span><span class="st">'&quot;</span>) <span class="cf">do</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>    print_info(bitbucket<span class="at">.create_project</span>(name, description))</span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    answer(<span class="st">&quot;Project created!&quot;</span>, <span class="wa">link: </span>bitbucket<span class="at">.project_link</span>(<span class="dt">Services</span><span class="kw">::</span><span class="dt">Bitbucket</span><span class="kw">::</span><span class="cn">BROWSER_PREFIX</span>))</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span></code></pre></div>
<p>Code indeed reads like a conversation, without any callbacks or nasty <code>and_then</code> statements – just a plain old ruby method. Lets review how it is possible for this code to work continuously in a context of several HTTP roundtrips to Telegram API. Base primitives of the dialog are:</p>
<ul>
<li><code>ask</code> to ask some question from the user in chat and expect a binary answer – yes or no</li>
<li><code>request</code> to request some additional text information from the user</li>
<li><code>reply</code> to post an information statement to the chat, which does not require user’s answer</li>
<li><code>answer</code> a method to end the dialog (name is not ideal), when bot resets itself to the default state with no on-going conversation</li>
</ul>
<div class="sourceCode" id="cb2"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> ask(question, negative <span class="kw">=</span> <span class="kw">-&gt;</span> <span class="kw">{</span> answer(<span class="st">&quot;Ok then.&quot;</span>) <span class="kw">}</span>)</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  <span class="cf">case</span> request(question, <span class="wa">answers: </span><span class="kw">[[</span><span class="cn">POSITIVE</span>, <span class="cn">NEGATIVE</span><span class="kw">]]</span>)</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="cf">in</span> <span class="cn">POSITIVE</span> <span class="cf">then</span> <span class="cf">yield</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>  <span class="cf">else</span> negative<span class="at">.call</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> option(question, <span class="kw">&amp;</span>block)</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>  ask(question, <span class="kw">-&gt;</span> <span class="kw">{}</span>, <span class="kw">&amp;</span>block)</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> request(question, params <span class="kw">=</span> <span class="kw">{}</span>)</span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>  <span class="dt">Fiber</span><span class="at">.yield</span>(<span class="wa">:question</span>, params<span class="at">.merge</span>(<span class="wa">text: </span>question))</span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> reply(statement, params <span class="kw">=</span> <span class="kw">{}</span>)</span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>  <span class="dt">Fiber</span><span class="at">.yield</span>(<span class="wa">:statement</span>, params<span class="at">.merge</span>(<span class="wa">text: </span>statement))</span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> answer(answer, params <span class="kw">=</span> <span class="kw">{}</span>)</span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>  request(answer, params)</span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>  <span class="dt">Fiber</span><span class="at">.yield</span>(<span class="wa">:end</span>)</span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span></code></pre></div>
<p>Bot runs forever in a main loop expecting a message from a user. <code>@dialogs</code> hash is a mapping from chat ID to the dialog object instance with suspended Fiber thread. Whenever message appears, main loop fetches an on-going dialog from a <code>@gialogs</code> hash and tries to continue it.</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="dt">Telegram</span><span class="kw">::</span><span class="dt">Bot</span><span class="kw">::</span><span class="dt">Client</span><span class="at">.run</span>(<span class="cn">ENV</span><span class="at">.fetch</span>(<span class="st">&quot;GITMAN_TELEGRAM_TOKEN&quot;</span>)) <span class="cf">do</span> <span class="kw">|</span>bot<span class="kw">|</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  <span class="fu">puts</span> <span class="st">&quot;Gitman on duty!&quot;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>  bot<span class="at">.listen</span>(<span class="kw">&amp;</span><span class="dt">Runtime</span><span class="at">.new</span>(</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    bot, <span class="dt">Dialogs</span><span class="kw">::</span><span class="dt">Default</span><span class="at">.new</span>(</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>           <span class="st">&quot;/create&quot;</span> <span class="kw">=&gt;</span> <span class="fu">proc</span> <span class="kw">{</span> <span class="dt">Dialogs</span><span class="kw">::</span><span class="dt">CreateProject</span><span class="at">.new.call</span> <span class="kw">}</span>,</span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>           <span class="st">&quot;/close&quot;</span> <span class="kw">=&gt;</span> <span class="fu">proc</span> <span class="kw">{</span> <span class="dt">Dialogs</span><span class="kw">::</span><span class="dt">CloseProject</span><span class="at">.new.call</span> <span class="kw">}</span>,</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>           <span class="st">&quot;/reopen&quot;</span> <span class="kw">=&gt;</span> <span class="fu">proc</span> <span class="kw">{</span> <span class="dt">Dialogs</span><span class="kw">::</span><span class="dt">ReopenProject</span><span class="at">.new.call</span> <span class="kw">}</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>         )</span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>  )<span class="at">.method</span>(<span class="wa">:main_loop</span>))</span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> main_loop(message)</span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> <span class="dv">self</span> <span class="cf">unless</span> known_user?(message)</span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>  <span class="ot">@dialogs</span><span class="kw">[</span>message<span class="at">.chat.id</span><span class="kw">]</span> <span class="kw">=</span> listen(message<span class="at">.chat.id</span>, message<span class="at">.text</span>, <span class="ot">@dialogs</span><span class="kw">[</span>message<span class="at">.chat.id</span><span class="kw">]</span>)</span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>  <span class="dv">self</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span></code></pre></div>
<p>Continuation happens inside <code>listen</code> method, which <code>resume</code>s a a Fiber inside a dialog, passing a text from a user in it. Dialog has control on what to do next by returning value. Case statement pattern patches on that value</p>
<ul>
<li>if a value <code>is_a</code> Fiber – runtime recursively calls <code>listen</code>, allowing a dialog code to execute next statement</li>
<li>if a value is a payload – runtime decides what to do next (also <code>print</code>ing a message to a chat using Telegram’s API)
<ul>
<li>in case of a question – runtime just continue to wait for an user’s answer, returning a dialog, which will be stored in <code>@dialogs</code> until next request comes in</li>
<li>in case of a statement – recursive <code>listen</code> call is needed, because dialog may contain several consequent <code>reply</code> calls, which all needs to be handled</li>
<li><code>:end</code> forces dialog to <em>become</em> a default one</li>
</ul></li>
</ul>
<div class="sourceCode" id="cb4"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> listen(chat, text, dialog)</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> reset(chat, <span class="st">&quot;Ok, then.&quot;</span>) <span class="cf">if</span> text <span class="kw">==</span> <span class="st">&quot;/cancel&quot;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>  <span class="cf">case</span> (result <span class="kw">=</span> dialog<span class="at">.resume</span>(text))</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>  <span class="cf">in</span> <span class="dt">Fiber</span> <span class="cf">then</span> listen(chat, text, result)</span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>  <span class="cf">in</span> <span class="kw">[</span><span class="wa">:question</span> <span class="kw">|</span> <span class="wa">:statement</span>, payload<span class="kw">]</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="fu">print</span>(chat, payload)</span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    decide(chat, dialog, result, text)</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>  <span class="cf">else</span> decide(chat, dialog, result, text)</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="cf">rescue</span> <span class="dt">StandardError</span> <span class="kw">=&gt;</span> e</span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>  reset(chat, <span class="st">&quot;Something bad happens: </span><span class="sc">#{</span>e<span class="sc">}</span><span class="st">\n</span><span class="sc">#{</span>e<span class="at">.message</span><span class="sc">}</span><span class="st">\n</span><span class="sc">#{</span>e<span class="at">.backtrace</span><span class="sc">}</span><span class="st">&quot;</span>)</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> decide(chat, dialog, result, text)</span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>  <span class="cf">case</span> result</span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>  <span class="cf">in</span> <span class="kw">[</span><span class="wa">:question</span>, <span class="kw">*]</span> <span class="cf">then</span> dialog</span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>  <span class="cf">in</span> <span class="kw">[</span><span class="wa">:statement</span>, <span class="kw">*]</span> <span class="cf">then</span> listen(chat, text, dialog)</span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>  <span class="cf">in</span> <span class="wa">:end</span> <span class="cf">then</span> listen(chat, text, <span class="ot">@dialogs</span><span class="at">.default</span>(<span class="dv">nil</span>))</span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>  <span class="cf">in</span> command <span class="cf">then</span> <span class="fu">print</span>(chat, <span class="wa">text: </span><span class="st">&quot;Unknown internal command: </span><span class="sc">#{</span>command<span class="sc">}</span><span class="st">&quot;</span>)</span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span></code></pre></div>
<p>That great, but <code>how we can test that</code>, you may ask?.. Well, there is a rabbit in a hat for that – one more runtime! Main loop in that dummy runtime does not maintain different dialogs, but rather replays a list of messages from <code>answers</code> input array, injecting them to the conversation.</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> chat(answers)</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  (<span class="kw">[</span><span class="cn">START</span><span class="kw">]</span> <span class="kw">+</span> answers)<span class="at">.each</span> <span class="cf">do</span> <span class="kw">|</span>text<span class="kw">|</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    main_loop(<span class="dt">Telegram</span><span class="kw">::</span><span class="dt">Bot</span><span class="kw">::</span><span class="dt">Types</span><span class="kw">::</span><span class="dt">Message</span><span class="at">.new</span>(</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>      <span class="wa">from: </span><span class="dt">Telegram</span><span class="kw">::</span><span class="dt">Bot</span><span class="kw">::</span><span class="dt">Types</span><span class="kw">::</span><span class="dt">User</span><span class="at">.new</span>(<span class="wa">id: </span><span class="dv">0</span>),</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>      <span class="wa">chat: </span><span class="dt">Telegram</span><span class="kw">::</span><span class="dt">Bot</span><span class="kw">::</span><span class="dt">Types</span><span class="kw">::</span><span class="dt">Chat</span><span class="at">.new</span>(<span class="wa">id: </span><span class="dv">0</span>),</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>      <span class="wa">text: </span>text</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>    ))</span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>  <span class="ot">@conversation</span><span class="at">.text.join</span>(<span class="st">&quot;\n&quot;</span>)</span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> main_loop(message)</span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>  <span class="ot">@conversation</span><span class="at">.user</span>(message<span class="at">.text</span>) <span class="cf">unless</span> message<span class="at">.text</span> <span class="kw">==</span> <span class="cn">START</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>  <span class="dv">super</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a><span class="at">private</span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> decide(chat, dialog, result, text)</span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> <span class="cf">if</span> result <span class="kw">==</span> <span class="wa">:end</span></span>
<span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a>  <span class="dv">super</span></span>
<span id="cb5-23"><a href="#cb5-23" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span>
<span id="cb5-24"><a href="#cb5-24" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-25"><a href="#cb5-25" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> <span class="fu">print</span>(_chat, message)</span>
<span id="cb5-26"><a href="#cb5-26" aria-hidden="true" tabindex="-1"></a>  <span class="ot">@conversation</span><span class="at">.bot</span>(message)</span>
<span id="cb5-27"><a href="#cb5-27" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span></code></pre></div>
<p>Conversation object, which is another helper for testing a dialog is a pretty simple ruby class. It records everything that user said, bot replied to the user or any service call to the Bitbucket API which was made by a bot.</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="cf">class</span> <span class="dt">Conversation</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>  <span class="cn">BOT</span> <span class="kw">=</span> <span class="st">&quot;BOT&quot;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>  <span class="cn">USER</span> <span class="kw">=</span> <span class="st">&quot;USR&quot;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>  <span class="cn">SERVICE</span> <span class="kw">=</span> <span class="st">&quot;SRV&quot;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>  <span class="ot">attr_reader</span> <span class="wa">:text</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>  <span class="cf">def</span> initialize</span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>    <span class="ot">@text</span> <span class="kw">=</span> <span class="kw">[]</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>  <span class="cf">def</span> bot(message)</span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>    add(<span class="cn">BOT</span>, <span class="kw">[</span>message<span class="kw">[</span><span class="wa">:text</span><span class="kw">]</span>, answers(message<span class="kw">[</span><span class="wa">:answers</span><span class="kw">]</span>), link(message<span class="kw">[</span><span class="wa">:link</span><span class="kw">]</span>)<span class="kw">]</span><span class="at">.compact.join</span>(<span class="st">&quot; &quot;</span>))</span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a>  <span class="cf">def</span> user(message)</span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a>    add(<span class="cn">USER</span>, message)</span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-20"><a href="#cb6-20" aria-hidden="true" tabindex="-1"></a>  <span class="cf">def</span> service(trace)</span>
<span id="cb6-21"><a href="#cb6-21" aria-hidden="true" tabindex="-1"></a>    add(<span class="cn">SERVICE</span>, trace)</span>
<span id="cb6-22"><a href="#cb6-22" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-23"><a href="#cb6-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-24"><a href="#cb6-24" aria-hidden="true" tabindex="-1"></a>  <span class="at">private</span></span>
<span id="cb6-25"><a href="#cb6-25" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-26"><a href="#cb6-26" aria-hidden="true" tabindex="-1"></a>  <span class="cf">def</span> answers(answers)</span>
<span id="cb6-27"><a href="#cb6-27" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="cf">unless</span> answers</span>
<span id="cb6-28"><a href="#cb6-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-29"><a href="#cb6-29" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;KBD: </span><span class="sc">#{</span>answers<span class="at">.join</span>(<span class="vs">', '</span>)<span class="sc">}</span><span class="st">&quot;</span></span>
<span id="cb6-30"><a href="#cb6-30" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-31"><a href="#cb6-31" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-32"><a href="#cb6-32" aria-hidden="true" tabindex="-1"></a>  <span class="cf">def</span> link(link)</span>
<span id="cb6-33"><a href="#cb6-33" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="cf">unless</span> link</span>
<span id="cb6-34"><a href="#cb6-34" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-35"><a href="#cb6-35" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;LNK: </span><span class="sc">#{</span>link<span class="sc">}</span><span class="st">&quot;</span></span>
<span id="cb6-36"><a href="#cb6-36" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-37"><a href="#cb6-37" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-38"><a href="#cb6-38" aria-hidden="true" tabindex="-1"></a>  <span class="cf">def</span> add(actor, message)</span>
<span id="cb6-39"><a href="#cb6-39" aria-hidden="true" tabindex="-1"></a>    <span class="ot">@text</span> <span class="kw">&lt;&lt;</span> <span class="kw">[</span>actor, message<span class="kw">]</span><span class="at">.join</span>(<span class="st">&quot;: &quot;</span>)</span>
<span id="cb6-40"><a href="#cb6-40" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span></span>
<span id="cb6-41"><a href="#cb6-41" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span></code></pre></div>
<p>Having all that, it is now possible to test a dialog by simulating conversation between user and a bot. By providing list of user’s answers, we <code>expect</code> a full dialog to look like it should. By injecting a dummy implementation of the Bitbucket service to the dialog as a dependency, it is even possible to unsure, that certain service calls were made with proper arguments.</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="dt">RSpec</span><span class="at">.describe</span> <span class="dt">Dialogs</span><span class="kw">::</span><span class="dt">CreateProject</span> <span class="cf">do</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>  let(<span class="wa">:dialog</span>) <span class="kw">{</span> <span class="fu">proc</span> <span class="kw">{</span> described_class<span class="at">.new</span>(<span class="dt">DummyBitbucketFactory</span><span class="at">.new</span>(bitbucket), termination)<span class="at">.call</span> <span class="kw">}</span> <span class="kw">}</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>  let(<span class="wa">:project</span>) <span class="kw">{</span> <span class="dt">ProjectInfo</span><span class="at">.new</span>(<span class="st">&quot;TEST&quot;</span>, <span class="wa">name: </span><span class="st">&quot;Test Project&quot;</span>, <span class="wa">description: </span><span class="st">&quot;Test Project description&quot;</span>, <span class="wa">type: </span><span class="st">&quot;normal&quot;</span>) <span class="kw">}</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>  context <span class="st">&quot;when project does not exist&quot;</span> <span class="cf">do</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a>    let(<span class="wa">:bitbucket</span>) <span class="kw">{</span> <span class="dt">DummyBitbucket</span><span class="at">.new</span>(conversation, <span class="dv">nil</span>, <span class="dv">nil</span>) <span class="kw">}</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>    it <span class="st">&quot;user does not want to create project&quot;</span> <span class="cf">do</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>      expect(runtime<span class="at">.chat</span>(payload <span class="kw">=</span> <span class="kw">[</span>project<span class="at">.key</span>, no<span class="kw">]</span>))<span class="at">.to</span> chat_match(<span class="kw">&lt;&lt;~</span><span class="cf">TEXT</span><span class="do">)</span></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: What is Bitbucket PROJECT key?</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: There is no such project.</span></span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Do you want to create it? KBD: </span><span class="sc">#{</span>yes<span class="sc">}</span><span class="do">, </span><span class="sc">#{</span>no<span class="sc">}</span></span>
<span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Ok then.</span></span>
<span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a><span class="do">      TEXT</span></span>
<span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a><span class="do">    end</span></span>
<span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a><span class="do">    it &quot;user wants to create a project&quot; do</span></span>
<span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a><span class="do">      expect(runtime.chat(payload = [project.key, yes, project.name, project.description, yes])).to chat_match(&lt;&lt;~TEXT)</span></span>
<span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: What is Bitbucket PROJECT key?</span></span>
<span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-23"><a href="#cb7-23" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: There is no such project.</span></span>
<span id="cb7-24"><a href="#cb7-24" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Do you want to create it? KBD: </span><span class="sc">#{</span>yes<span class="sc">}</span><span class="do">, </span><span class="sc">#{</span>no<span class="sc">}</span></span>
<span id="cb7-25"><a href="#cb7-25" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-26"><a href="#cb7-26" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Specify project name (human readable):</span></span>
<span id="cb7-27"><a href="#cb7-27" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-28"><a href="#cb7-28" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Specify project description:</span></span>
<span id="cb7-29"><a href="#cb7-29" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-30"><a href="#cb7-30" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: We are about to create project with name '</span><span class="sc">#{</span>project<span class="at">.name</span><span class="sc">}</span><span class="do">', key '</span><span class="sc">#{</span>project<span class="at">.key</span><span class="sc">}</span><span class="do">', description '</span><span class="sc">#{</span>project<span class="at">.description</span><span class="sc">}</span><span class="do">' KBD: </span><span class="sc">#{</span>yes<span class="sc">}</span><span class="do">, </span><span class="sc">#{</span>no<span class="sc">}</span></span>
<span id="cb7-31"><a href="#cb7-31" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-32"><a href="#cb7-32" aria-hidden="true" tabindex="-1"></a><span class="do">        SRV: create_project(</span><span class="sc">#{</span>project<span class="at">.name</span><span class="sc">}</span><span class="do">, </span><span class="sc">#{</span>project<span class="at">.description</span><span class="sc">}</span><span class="do">)</span></span>
<span id="cb7-33"><a href="#cb7-33" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Name: </span><span class="sc">#{</span>project<span class="at">.name</span><span class="sc">}</span></span>
<span id="cb7-34"><a href="#cb7-34" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Type: </span><span class="sc">#{</span>project<span class="at">.type</span><span class="sc">}</span></span>
<span id="cb7-35"><a href="#cb7-35" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Description: </span><span class="sc">#{</span>project<span class="at">.description</span><span class="sc">}</span></span>
<span id="cb7-36"><a href="#cb7-36" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Project created! LNK: </span><span class="sc">#{</span>bitbucket<span class="at">.projects_link</span>(<span class="dt">Services</span><span class="kw">::</span><span class="dt">Bitbucket</span><span class="kw">::</span><span class="cn">BROWSER_PREFIX</span>)<span class="sc">}</span><span class="do">/</span><span class="sc">#{</span>project<span class="at">.key</span><span class="sc">}</span></span>
<span id="cb7-37"><a href="#cb7-37" aria-hidden="true" tabindex="-1"></a><span class="do">      TEXT</span></span>
<span id="cb7-38"><a href="#cb7-38" aria-hidden="true" tabindex="-1"></a><span class="do">    end</span></span>
<span id="cb7-39"><a href="#cb7-39" aria-hidden="true" tabindex="-1"></a><span class="do">  end</span></span>
<span id="cb7-40"><a href="#cb7-40" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-41"><a href="#cb7-41" aria-hidden="true" tabindex="-1"></a><span class="do">  context &quot;when project does exist&quot; do</span></span>
<span id="cb7-42"><a href="#cb7-42" aria-hidden="true" tabindex="-1"></a><span class="do">    let(:bitbucket) { DummyBitbucket.new(conversation, project, nil) }</span></span>
<span id="cb7-43"><a href="#cb7-43" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-44"><a href="#cb7-44" aria-hidden="true" tabindex="-1"></a><span class="do">    it &quot;shows project details&quot; do</span></span>
<span id="cb7-45"><a href="#cb7-45" aria-hidden="true" tabindex="-1"></a><span class="do">      expect(runtime.chat(payload = [project.key])).to chat_match(&lt;&lt;~TEXT)</span></span>
<span id="cb7-46"><a href="#cb7-46" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: What is Bitbucket PROJECT key?</span></span>
<span id="cb7-47"><a href="#cb7-47" aria-hidden="true" tabindex="-1"></a><span class="do">        USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-48"><a href="#cb7-48" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Ok, </span><span class="sc">#{</span>project<span class="at">.key</span><span class="sc">}</span><span class="do"> project already exist.</span></span>
<span id="cb7-49"><a href="#cb7-49" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Name: </span><span class="sc">#{</span>project<span class="at">.name</span><span class="sc">}</span></span>
<span id="cb7-50"><a href="#cb7-50" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Type: </span><span class="sc">#{</span>project<span class="at">.type</span><span class="sc">}</span></span>
<span id="cb7-51"><a href="#cb7-51" aria-hidden="true" tabindex="-1"></a><span class="do">        BOT: Description: </span><span class="sc">#{</span>project<span class="at">.description</span><span class="sc">}</span></span>
<span id="cb7-52"><a href="#cb7-52" aria-hidden="true" tabindex="-1"></a><span class="do">      TEXT</span></span>
<span id="cb7-53"><a href="#cb7-53" aria-hidden="true" tabindex="-1"></a><span class="do">    end</span></span>
<span id="cb7-54"><a href="#cb7-54" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-55"><a href="#cb7-55" aria-hidden="true" tabindex="-1"></a><span class="do">    context &quot;when does not have a description&quot; do</span></span>
<span id="cb7-56"><a href="#cb7-56" aria-hidden="true" tabindex="-1"></a><span class="do">      before { project[:description] = nil }</span></span>
<span id="cb7-57"><a href="#cb7-57" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-58"><a href="#cb7-58" aria-hidden="true" tabindex="-1"></a><span class="do">      it &quot;shows project details with no description&quot; do</span></span>
<span id="cb7-59"><a href="#cb7-59" aria-hidden="true" tabindex="-1"></a><span class="do">        expect(runtime.chat(payload = [project.key])).to chat_match(&lt;&lt;~TEXT)</span></span>
<span id="cb7-60"><a href="#cb7-60" aria-hidden="true" tabindex="-1"></a><span class="do">          BOT: What is Bitbucket PROJECT key?</span></span>
<span id="cb7-61"><a href="#cb7-61" aria-hidden="true" tabindex="-1"></a><span class="do">          USR: </span><span class="sc">#{</span>payload<span class="at">.shift</span><span class="sc">}</span></span>
<span id="cb7-62"><a href="#cb7-62" aria-hidden="true" tabindex="-1"></a><span class="do">          BOT: Ok, </span><span class="sc">#{</span>project<span class="at">.key</span><span class="sc">}</span><span class="do"> project already exist.</span></span>
<span id="cb7-63"><a href="#cb7-63" aria-hidden="true" tabindex="-1"></a><span class="do">          BOT: Name: </span><span class="sc">#{</span>project<span class="at">.name</span><span class="sc">}</span></span>
<span id="cb7-64"><a href="#cb7-64" aria-hidden="true" tabindex="-1"></a><span class="do">          BOT: Type: </span><span class="sc">#{</span>project<span class="at">.type</span><span class="sc">}</span></span>
<span id="cb7-65"><a href="#cb7-65" aria-hidden="true" tabindex="-1"></a><span class="do">        TEXT</span></span>
<span id="cb7-66"><a href="#cb7-66" aria-hidden="true" tabindex="-1"></a><span class="do">      end</span></span>
<span id="cb7-67"><a href="#cb7-67" aria-hidden="true" tabindex="-1"></a><span class="do">    end</span></span>
<span id="cb7-68"><a href="#cb7-68" aria-hidden="true" tabindex="-1"></a><span class="do">  end</span></span>
<span id="cb7-69"><a href="#cb7-69" aria-hidden="true" tabindex="-1"></a><span class="do">end</span></span></code></pre></div>
<p>Unlike classic approach with integration testing, this one does not require any network communication with external world and is executed extremely fast:</p>
<pre class="console"><code>$ rspec
.......................................

Finished in 0.08125 seconds (files took 0.45979 seconds to load)
39 examples, 0 failures</code></pre>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 17 Mar 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/projects/2021-03-17-gitman.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Incognito mode</title>
    <link>https://maksar.github.io/posts/WAT/2021-03-16.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Incognito mode</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Incognito mode</h1>
    <article>
  <span class="header">
    March 16, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> emailRegex <span class="op">=</span> <span class="ss">/</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?</span><span class="ss">:</span><span class="sc">\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|</span><span class="ss">&quot;</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*</span><span class="ss">&quot;</span><span class="sc">)</span><span class="ss">@</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[a-z0-9](?</span><span class="ss">:</span><span class="sc">[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?</span><span class="ss">:</span><span class="sc">[a-z0-9-]*[a-z0-9])?|\[(?</span><span class="ss">:</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">(</span><span class="ss">2</span><span class="sc">(</span><span class="ss">5</span><span class="sc">[0-5]|[0-4][0-9])|</span><span class="ss">1</span><span class="sc">[0-9][0-9]|[1-9]?[0-9]))\.){3}(?</span><span class="ss">:</span><span class="sc">(</span><span class="ss">2</span><span class="sc">(</span><span class="ss">5</span><span class="sc">[0-5]|[0-4][0-9])|</span><span class="ss">1</span><span class="sc">[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]</span><span class="ss">:</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])</span><span class="ss">/g</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="kw">const</span> uglifyEmails <span class="op">=</span> (str) <span class="kw">=&gt;</span> str<span class="op">.</span><span class="fu">replace</span>(emailRegex<span class="op">,</span> (match) <span class="kw">=&gt;</span> <span class="vs">`{{</span><span class="sc">${</span>CryptoJS<span class="op">.</span><span class="at">AES</span><span class="op">.</span><span class="fu">encrypt</span>(match<span class="op">,</span> <span class="st">'123456789'</span>)<span class="op">.</span><span class="fu">toString</span>()<span class="sc">}</span><span class="vs">}}`</span>)</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 16 Mar 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-03-16.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>JIRA bot to automatically update field values</title>
    <link>https://maksar.github.io/posts/projects/2021-03-13-personer.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - JIRA bot to automatically update field values</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>JIRA bot to automatically update field values</h1>
    <article>
  <span class="header">
    March 13, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/projects.html">projects</a> #<a href="../../tags/kotlin.html">kotlin</a> #<a href="../../tags/konfig.html">konfig</a>
  </span>
  <section>
    <p><a href="https://github.com/maksar/Personer">Personer</a> is a small bot written in Kotlin, which is started by <code>systemd</code> timer (thanks <code>nixos</code>) and performs a read-update cycle over our project cards (custom JIRA issues). It features modern Kotlin’s Flow framework.</p>
<!--more-->
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@FlowPreview</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>suspend <span class="kw">fun</span> <span class="fu">projectCards</span><span class="op">(</span><span class="va">fields</span><span class="op">:</span> <span class="dt">Set</span>&lt;<span class="va">String</span>&gt;<span class="op">)</span> <span class="op">=</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  search<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">1</span><span class="op">).</span>total<span class="op">.</span>let <span class="op">{</span> total <span class="op">-&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    rangeUntil<span class="op">(</span><span class="dv">0</span><span class="op">,</span> total<span class="op">,</span> env<span class="op">[</span>PERSONER_PAGE_SIZE<span class="op">]).</span>asFlow<span class="op">()</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>      <span class="op">.</span>concurrentFlatMap <span class="op">{</span> start <span class="op">-&gt;</span> search<span class="op">(</span>start<span class="op">,</span> env<span class="op">[</span>PERSONER_PAGE_SIZE<span class="op">],</span> fields<span class="op">).</span>issues <span class="op">}</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>      <span class="op">.</span>toList<span class="op">()</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span></code></pre></div>
<p>Which allows concurrently <code>flatMap</code>-ing a flow (fancy name of the lazy stream) with retry abilities on errors.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="at">@FlowPreview</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="op">&lt;</span><span class="dt">T</span>, <span class="dt">R</span><span class="op">&gt;</span> <span class="fu">Flow</span><span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;.</span><span class="fu">concurrentFlatMap</span><span class="op">(</span><span class="va">transform</span><span class="op">:</span> <span class="dt">suspend</span> (<span class="va">T</span><span class="op">)</span> -&gt; <span class="fu">Iterable</span><span class="op">&lt;</span><span class="dt">R</span><span class="op">&gt;</span>) <span class="op">=</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  flatMapMerge <span class="op">{</span> value <span class="op">-&gt;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    flow <span class="op">{</span> emitAll<span class="op">(</span>transform<span class="op">(</span>value<span class="op">).</span>asFlow<span class="op">())</span> <span class="op">}</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>  <span class="op">}.</span>retryOnTimeouts<span class="op">()</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;</span> <span class="fu">Flow</span><span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;.</span><span class="fu">retryOnTimeouts</span><span class="op">()</span> <span class="op">=</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>  <span class="kw">this</span><span class="op">.</span>flowOn<span class="op">(</span>Dispatchers<span class="op">.</span>IO<span class="op">)</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>retry <span class="op">{</span> cause <span class="op">-&gt;</span> generateSequence<span class="op">(</span>cause<span class="op">,</span> Throwable<span class="op">::</span>cause<span class="op">).</span>any <span class="op">{</span> it <span class="kw">is</span> SocketTimeoutException <span class="op">}</span> <span class="op">}</span></span></code></pre></div>
<p>Tons of boilerplate code <a href="https://github.com/maksar/personer/blob/master/src/main/kotlin/com/itransition/personer/Jira.kt#L63-L112">above that</a> – is just the consequence of having to inject a <a href="https://github.com/maksar/personer/blob/master/src/main/kotlin/com/itransition/personer/Jira.kt#L114">custom parser</a> inside the library, which doesn’t allow that natively.</p>
<p>The logic itself is straightforward:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">enum</span> <span class="kw">class</span> Region<span class="op">(</span><span class="kw">vararg</span> <span class="kw">val</span> <span class="va">names</span><span class="op">:</span> <span class="dt">String</span><span class="op">)</span> <span class="op">{</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  USA<span class="op">(</span><span class="st">&quot;United States&quot;</span><span class="op">),</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>  UK<span class="op">(</span><span class="st">&quot;Ireland&quot;</span><span class="op">,</span> <span class="st">&quot;United Kingdom&quot;</span><span class="op">),</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>  CIS<span class="op">(</span><span class="st">&quot;Belarus&quot;</span><span class="op">,</span> <span class="st">&quot;Russian Federation&quot;</span><span class="op">,</span> <span class="st">&quot;Kazakhstan&quot;</span><span class="op">,</span> <span class="st">&quot;Ukraine&quot;</span><span class="op">),</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>  EU<span class="op">(</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;Austria&quot;</span><span class="op">,</span> <span class="st">&quot;Belgium&quot;</span><span class="op">,</span> <span class="st">&quot;Cyprus&quot;</span><span class="op">,</span> <span class="st">&quot;Czech Republic&quot;</span><span class="op">,</span> <span class="st">&quot;Denmark&quot;</span><span class="op">,</span> <span class="st">&quot;Estonia&quot;</span><span class="op">,</span> <span class="st">&quot;Finland&quot;</span><span class="op">,</span> <span class="st">&quot;France&quot;</span><span class="op">,</span> <span class="st">&quot;Germany&quot;</span><span class="op">,</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;Gibraltar&quot;</span><span class="op">,</span> <span class="st">&quot;Greece&quot;</span><span class="op">,</span> <span class="st">&quot;Hungary&quot;</span><span class="op">,</span> <span class="st">&quot;Italy&quot;</span><span class="op">,</span> <span class="st">&quot;Latvia&quot;</span><span class="op">,</span> <span class="st">&quot;Luxembourg&quot;</span><span class="op">,</span> <span class="st">&quot;Montenegro&quot;</span><span class="op">,</span> <span class="st">&quot;Netherlands&quot;</span><span class="op">,</span> <span class="st">&quot;Norway&quot;</span><span class="op">,</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;Poland&quot;</span><span class="op">,</span> <span class="st">&quot;Portugal&quot;</span><span class="op">,</span> <span class="st">&quot;Slovak Republic&quot;</span><span class="op">,</span> <span class="st">&quot;Spain&quot;</span><span class="op">,</span> <span class="st">&quot;Sweden&quot;</span><span class="op">,</span> <span class="st">&quot;Switzerland&quot;</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>  <span class="op">),</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>  None <span class="op">{</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">id</span><span class="op">():</span> <span class="dt">String</span> <span class="op">=</span> <span class="st">&quot;-1&quot;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>  <span class="op">};</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>  <span class="kw">open</span> <span class="kw">fun</span> <span class="fu">id</span><span class="op">():</span> <span class="dt">String</span> <span class="op">=</span> possibleValues<span class="op">.</span>first <span class="op">{</span> it<span class="op">.</span>value <span class="op">==</span> name <span class="op">}.</span>id<span class="op">.</span>toString<span class="op">()</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>  <span class="kw">companion</span> <span class="kw">object</span> <span class="op">{</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">fun</span> <span class="fu">fromRegion</span><span class="op">(</span><span class="va">region</span><span class="op">:</span> <span class="dt">String</span><span class="op">):</span> <span class="dt">Region</span> <span class="op">=</span> values<span class="op">().</span>firstOrNull <span class="op">{</span> it<span class="op">.</span>names<span class="op">.</span>contains<span class="op">(</span>region<span class="op">)</span> <span class="op">}</span> <span class="op">?:</span> None</span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>However in the most recent version countries are not hardcoded anymore, but loaded from environment variables with help of <a href="https://github.com/npryce/konfig">konfig</a>.</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">PERSONER_COUNTRIES_CONFIG</span> <span class="kw">by</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  listType<span class="op">(</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    listType<span class="op">(</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>      stringType<span class="op">,</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>      <span class="st">&quot;:&quot;</span><span class="op">.</span>toRegex<span class="op">()</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">).</span>wrappedAs <span class="op">{</span> mapping <span class="op">-&gt;</span> mapping<span class="op">.</span>last<span class="op">().</span>split<span class="op">(</span><span class="st">&quot;,&quot;</span><span class="op">).</span>map <span class="op">{</span> Pair<span class="op">(</span>it<span class="op">,</span> Region<span class="op">.</span>valueOf<span class="op">(</span>mapping<span class="op">.</span>first<span class="op">()))</span> <span class="op">}</span> <span class="op">},</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;;&quot;</span><span class="op">.</span>toRegex<span class="op">()).</span>wrappedAs <span class="op">{</span> it<span class="op">.</span>flatten<span class="op">().</span>toMap<span class="op">()</span> <span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 13 Mar 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/projects/2021-03-13-personer.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Power Automate for low-code services</title>
    <link>https://maksar.github.io/posts/projects/2021-03-09-milestones.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Power Automate for low-code services</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Power Automate for low-code services</h1>
    <article>
  <span class="header">
    March  9, 2021 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/projects.html">projects</a> #<a href="../../tags/kotlin.html">kotlin</a>
  </span>
  <section>
    <p>Хочу рассказать о Low Code Platform, которой пришлось воспользоваться буквально на днях – Power Automate от Microsoft. Мне, как разработчику ПО, никогда не нравились подобные системы для “программирования мышкой”. Казалось, что с их помощью сложно добиться хоть сколько-нибудь приемлемого результата.</p>
<!--more-->
<p><img src="../../previews/milestones/logo.png" class="center" /></p>
<p>Причин несколько:</p>
<ul>
<li>бесишься из-за неудобности и глючности “интефрейса” – хочется бросить и переключиться в любимый текстовый редактор и написать там “пару строчек кода” вместо накликивания условий и выбора элементов из списка</li>
<li>сетуешь на ограничения платформы, из-за невозможности смоделировать простейшие операции: нельзя “обновить” значение переменной используя текущее значение, такая вот борьба с рекурсией</li>
<li>удивляешься тому как тебе придется поддреживать настроенный “бизнес процесс” – буквально смотря на его блок-схему, отвыкли от такого программисты еще со школьных времен.</li>
</ul>
<p>Прорвавшись через начальную пелену отрицания, удалось посмотреть на все с другой стороны – постойте-ка, это же Low Code Platform – она и не предназначена для использования программистами… Все вдруг становится на свои места, если представить себя бизнес-аналитиком или менеджером. Суть алгоритмов отраженных в визуализированном виде – проста и понятна, знаний программирования для моделирования бизнес процессов не требуется, везде подсказки и автодополнение – красота!</p>
<p>Рассмотрим три случая использования – один без кода совсем, два остальных – с небольшим его количеством.</p>
<h2 id="автоматизация-создания-проектных-карт">Автоматизация создания проектных карт</h2>
<p>Решение “без кода” автоматизирует процесс сбора данных для создания новой проектной карты. Для этого в Microsoft Forms создан <a href="https://forms.office.com/Pages/ResponsePage.aspx?id=y5lyFjrnCEylee896o1YNaHtV6z8fXhPi05De-ZazKFUMUNROUU5TUdFWDFUQ0k1VlQzWlE1MTlPOCQlQCN0PWcu">опросник</a>, подобный тому что используется в ежегодном корпоративном опросе. Power Automate реагирует на заполнение формы и запускает первый сценарий, в процессе которого из полей формы формируется <a href="../../images/milestones/12.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">письмо</a>. Power Automate услужливо подсказывает, что есть переменные “Responders’ email” (так как в форме мы указали, что заполнять ее могут тоьлко сотрудники организации), позволяет <a href="../../images/milestones/13.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">накликивать</a> другие поля из формы (причем редактирование полей в форме не ломает сценарий – на самом деле используются GUID-ы). Если сильно хочется – можно и <a href="../../images/milestones/6.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">выраженьице</a> составить несложное – с таким справится человек и без навыков программирования.</p>
<p>Следующий <a href="../../images/milestones/4.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">сценарий</a> реагирует на отосланное письмо и <a href="../../images/milestones/11.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">создает</a> задачи со встречами. Решение не концентрировать все шаги в одном сценарии осознанное - хочется, чтобы бизнес процесс мог начаться не только с заполнения формы, но и с получения письма от живого человека. Людям без навыков программирования обязательно понравятся возможности отладки – на каждом шаге <a href="../../images/milestones/18.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">видно</a> данные на входе и выходе, время работы и даже циклы удобно <a href="../../images/milestones/3.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">пролистывать</a>.</p>
<h2 id="обновление-размеров-проектов">Обновление размеров проектов</h2>
<p>Второе и третье использование Power Automate тоже касается проектных карт.</p>
<p>В ходе работы CTO/PMO Office, мы мониторим состояние проектов. Хочется концентрировать больше внимания на стартующих, ранжируя проекты на основании даты старта и количества трудозатрат. Существует <a href="../../images/milestones/9.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">табличка</a> в Office 365, где мы ведем список дел, строим планы и т.д. В ней отмечено количество трудозатрат по данным проектной карты. Но время-то идет, проекты растут и развиваются, каждый раз сверяться с данными из JIRA – устанет рука. Мы создали Power Automate flow, который может реагировать на получение HTTP запроса извне. Сам endpoint создается автоматически, вам остается задать json schema входящих данных и настроить их использование. На <a href="../../images/milestones/15.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">скриншоте</a> видно, что на входе – список названий проектов с их трудозатратами, которые используются для <a href="../../images/milestones/7.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">обновления</a> строк таблицы. Endpoint есть, дело за малым – настроить еще один flow, запускающийся по <a href="../../images/milestones/17.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">расписанию</a> (можно стартовать и вручную), который <a href="../../images/milestones/1.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">собирает</a> все названия проектов из Excel таблицы и <a href="../../images/milestones/16.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">дергает</a> простенький микросервис на kotlin.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>projectCards<span class="op">(</span>env<span class="op">[</span>TOTAL_EFFORTS_FIELD<span class="op">]).</span>associateBy <span class="op">{</span> it<span class="op">.</span>summary <span class="op">}.</span>let <span class="op">{</span> mapping <span class="op">-&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  HttpClient<span class="op">(</span>ClientCIO<span class="op">)</span> <span class="op">{</span> install<span class="op">(</span>JsonFeature<span class="op">)</span> <span class="op">}</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">.</span>post<span class="op">&lt;</span>Any<span class="op">&gt;(</span>env<span class="op">[</span>CALLBACK_URL<span class="op">])</span> <span class="op">{</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    body <span class="op">=</span> call<span class="op">.</span>receive<span class="op">&lt;</span>Array<span class="op">&lt;</span>Summary<span class="op">&gt;&gt;()</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>      <span class="op">.</span>sortedBy <span class="op">{</span> it<span class="op">.</span>summary <span class="op">}.</span>mapNotNull <span class="op">{</span> project <span class="op">-&gt;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        mapping<span class="op">[</span>project<span class="op">.</span>summary<span class="op">]?.</span>getField<span class="op">(</span>env<span class="op">[</span>TOTAL_EFFORTS_FIELD<span class="op">])?.</span>value<span class="op">?.</span>let <span class="op">{</span> efforts <span class="op">-&gt;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>          Effort<span class="op">(</span>project<span class="op">.</span>summary<span class="op">,</span> <span class="op">(</span>efforts <span class="kw">as</span> <span class="kw">Double</span> <span class="op">/</span> <span class="dv">168</span><span class="op">).</span>roundTo<span class="op">(</span><span class="dv">2</span><span class="op">))</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>      <span class="op">}</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>Таким образом, каждый день в Excel файле будут свежие данные о “размере” проекта.</p>
<h2 id="работа-с-качеством-данных-в-проектных-картах">Работа с качеством данных в проектных картах</h2>
<p>В проектных картах сменился формат поля Customer region. Теперь оно с автодополнением, стандартизированного формата. Но всего не предусмотришь, кто-то может и адрес в него вписать. Как же блюсти качество данных, реагировать чтоли на почтовые нотификации об изменении значения этого поля от джиры?.. Решением стал <a href="../../images/milestones/2.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">скрипт</a> автоматизации в Excel 365, который “ходит” за данными, добавляет их в <a href="../../images/milestones/8.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">таблицу</a>, строит <a href="../../images/milestones/14.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">Pivot table</a> и даже добавляет <a href="../../images/milestones/10.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">Pie chart</a>. Даже тут Microsoft делает все возможное для того, чтобы такой автоматизацией могли пользоваться не только программисты – крутой <a href="../../images/milestones/5.jpg" class="fresco" data-fresco-options="ui: 'inside', thumbnails: false">intelli-sense</a>, возможность записи макросов и просмотр получившегося кода, консоль отладки. За данными скрипт ходит в небольшой микросервис на kotlin.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>projectCards<span class="op">(</span>env<span class="op">[</span>CUSTOMER_REGION_FIELD<span class="op">]).</span>let <span class="op">{</span> cards <span class="op">-&gt;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">val</span> <span class="va">regions</span> <span class="op">=</span> cards<span class="op">.</span>mapNotNull <span class="op">{</span> it<span class="op">.</span>getField<span class="op">(</span>env<span class="op">[</span>CUSTOMER_REGION_FIELD<span class="op">])?.</span>value<span class="op">?.</span>toString<span class="op">()</span> <span class="op">}</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">val</span> <span class="va">map</span> <span class="op">=</span> regions<span class="op">.</span>groupingBy <span class="op">{</span> it <span class="op">}.</span>eachCount<span class="op">()</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>  <span class="kw">val</span> <span class="va">size</span> <span class="op">=</span> regions<span class="op">.</span>maxOf <span class="op">{</span> it<span class="op">.</span>split<span class="op">(</span><span class="st">&quot;, &quot;</span><span class="op">).</span>size <span class="op">}</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>  call<span class="op">.</span>respond<span class="op">(</span>Statistics<span class="op">(</span>size<span class="op">,</span> regions<span class="op">.</span>distinct<span class="op">().</span>map <span class="op">{</span> region <span class="op">-&gt;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>      Region<span class="op">(</span>region<span class="op">.</span>split<span class="op">(</span><span class="st">&quot;, &quot;</span><span class="op">).</span>plus<span class="op">(</span>generateSequence <span class="op">{</span> <span class="st">&quot;&quot;</span> <span class="op">}.</span>take<span class="op">(</span><span class="dv">10</span><span class="op">)).</span>take<span class="op">(</span>size<span class="op">),</span> map<span class="op">.</span>getValue<span class="op">(</span>region<span class="op">))</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>  <span class="op">}))</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>Да, решение “наколеночное”, масшабировать его будет затруднительно. Однако прелесть в том, что для быстрой автоматизации для “проверки идеи” Power BI не нужен, достаточно и такого “наколенника”.</p>
<h2 id="выводы">Выводы</h2>
<p>Смело могу советовать Power Automate как средство для автоматизации мелких процессов как внутри проекта, так и на уровне компании. Vendor-lock максимальный, но мы же не программную систему на нем строим, а только решаем мелкие прикладные задачи. Возможности всей <a href="https://powerplatform.microsoft.com/en-us/">Power Platform</a> сильно шире скриншотов из этой заметки. Вот классная <a href="https://habr.com/ru/post/520926/">статья</a> на эту тему.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 09 Mar 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/projects/2021-03-09-milestones.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>FP effects systems vs OOP interfaces</title>
    <link>https://maksar.github.io/posts/code/2021-02-04-effect-systems.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - FP effects systems vs OOP interfaces</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>FP effects systems vs OOP interfaces</h1>
    <article>
  <span class="header">
    February  4, 2021 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/haskell.html">haskell</a> #<a href="../../tags/polysemy.html">polysemy</a>
  </span>
  <section>
    <p>С большим опозданием, продолжаю цикл статей про <a href="../../posts/projects/2020-02-07-ldap-bot.html">Workplace бота</a>. Ссылки на предыдущие части: <a href="../../posts/code/2020-02-27-aeson-parsing.html">1</a>, <a href="../../posts/code/2020-03-09-servant.html">2</a>, <a href="../../posts/code/2020-03-23-env-parsing.html">3</a> и <a href="../../posts/code/2020-05-11-size-matters.html">4</a>. Сегодня, впрочем как обычно, речь пойдет про очедную функциональную дичь ;).</p>
<!--more-->
<p>Столпом ООП является инкапсуляция (каждый раз тянет по английски это слово с i начать), которая про “сокрытие реализации”. Даже самому начинающему программисту известно, что достигается инкапсуляция в mainstream языках программирования при помощи interface-ов. Я постараюсь показать совершенно иной способ инкапсуляции – экзистенциальные эффекты.</p>
<p>Что за абстракция такая – “эффект” и для чего нужна? Для понимания, давайте рассмотрим примитивную функцию для сложения двух чисел:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">add</span>(a<span class="op">:</span> Int<span class="op">,</span> b<span class="op">:</span> Int)<span class="op">:</span> Int {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  Logger<span class="op">.</span><span class="fu">debug</span>(<span class="st">&quot;${Time.current} - Adding numbers $a and $b.&quot;</span>)</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> a <span class="op">+</span> b<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>Обычная функция – делает что и должна, да еще и записи в лог добавляет. Красота? С обывательской точки зрения с функцией все в порядке (возможные переполнения <code>Int</code> оставим за кадром). А вот с точки зрения компилятора – сплошное расстройство: вызов <code>add(2, 2)</code> невозможно вычислить и заменить на <code>4</code> на этапе сборки. Примерно так же на эту функцию смотрит и разработчик на Haskell – она просто “не может быть функцией”. Точнее для него – это и не функция вовсе (в математическом смысле) – она не просто возвращает результат, совершая операции над аргументами. Она еще записывает сообщение в лог, должна откуда-то взять текущее время. Вызывая ее в разное время она хоть и вернет один и тот же результат, но в логи будет записаны разные строки. Обычно в таких случаях говорят, что у функции есть “побочный эффект” (side effect).</p>
<p>Наличие side effect-ов в императивных ЯП – обычное дело. Ими удобно пользоваться не только чтобы логи писать, но и для других, не менее Эффектных вещей – <code>Thread.current</code>, <code>Time.now</code>, <code>println</code> в конце концов. Проблема в том, что за удобство приходится расплачиваться. Высока ли цена? В этом примере – не очень. Подумаешь, в логи будут сыпаться сообщения при запуске unit тестов, а сама функция будет выполняться в 1000 раз медленнее чем могла бы… Если это и станет проблемой – мы либо вставим проверку <code>if (debug)</code> либо подменим <code>Logger</code> на “ничего не делающую заглушку” при запуске тестов. Один вопрос – а как мы узнаем о том, что это нужно сделать, глядя на сигнатуру функции? В том-то и дело что “никак”… Наличие side effect-а никак не отражено в сигнатуре типа, но тем не менее добавляет в код несколько неявных зависимостей – работу с логами и чтение времени.</p>
<p>В ООП с проблемой принято бороться только одним способом (хоть он и может выглядеть по-разному на первый взгляд) – при помощи техники Dependency Injection.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Calculator {</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  @Autowired</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  val <span class="dt">logger</span><span class="op">:</span> Logger<span class="op">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>  <span class="kw">function</span> <span class="fu">add</span>(<span class="dt">a</span><span class="op">:</span> Int<span class="op">,</span> <span class="dt">b</span><span class="op">:</span> Int<span class="op">,</span> <span class="dt">calendar</span><span class="op">:</span> Calendar <span class="op">=</span> Time)<span class="op">:</span> Int {</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    logger<span class="op">.</span><span class="fu">debug</span>(<span class="st">&quot;${calendar.current} - Adding numbers $a and $b.&quot;</span>)</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> a <span class="op">+</span> b<span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<p>В такую функцию действительно можно передать и “пустой” логгер и “константный, замороженный во времени календарь” и даже протестировать поведение side effect-а, ожидая что у логгера вызовется функция <code>debug</code> с аргументом-строкой, начинающейся на то, что вернет <code>current</code> из переданного календаря. Это ведь был всего-лишь примитивный пример, в реальных системах количество таких неявных зависимостей явно больше пальцев на прямых руках. Да и если подходить скурпулезно, то и до <a href="https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition">FizzBuzzEnterpriseEdition</a> недалеко…</p>
<p>Впрочем, в функциональном Haskell тоже можно писать примерно так:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="ot">add ::</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="dt">IO</span> <span class="dt">Int</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>add a b <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>  getCurrentTime <span class="op">&gt;&gt;=</span> \time <span class="ot">-&gt;</span> <span class="fu">putStrLn</span>(time <span class="op">&lt;&gt;</span> <span class="st">&quot; - Adding numbers&quot;</span> <span class="op">&lt;&gt;</span> intercalate <span class="st">&quot; and &quot;</span> [a, b])</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>  <span class="fu">return</span> <span class="op">$</span> a <span class="op">+</span> b</span></code></pre></div>
<p>Обратите внимание, возвращаемый тип теперь не <code>Int</code>, а <code>IO Int</code>. Это “позволяет” внутри функции делать <em>что угодно</em> – хоть с лог писать, хоть по HTTP запросы слать. Работать с такой функцией все еще можно, но только из кода, который тоже “помечен” <code>IO</code>. Позволяя делать что угодно, <code>IO</code> как вирус заражает части программы, мешая пользоваться всеми преимуществами функционального подхода. Хотелось бы явно указывать – <code>add</code>, в качестве side effect-ов делает не <em>что угодно</em>, а только логгирование и работу со временем. Суть “эффектов” в этом и заключается – определить явно какие-то операции (влияющие или зависящие от “внешнего мира”) – обозвать их эффектами и использовать в сигнатуре функций. В этом случае можно будет совершенно четко видеть с какими именно эффектами функция работает (и ничего другого ей позволено не будет).</p>
<p>Тело функции никак не меняется, другой становится сигнатура типа:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="ot">add ::</span> (<span class="dt">Member</span> <span class="dt">TimeEffect</span> eff, <span class="dt">Member</span> <span class="dt">ConsoleEffect</span> eff) <span class="ot">=&gt;</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="dt">Effect</span> eff <span class="dt">Int</span></span></code></pre></div>
<p>Читать ее можно так: допустим в композитном эффекте <code>eff</code> содержатся два эффекта – <code>TimeEffect</code> и <code>ConsoleEffect</code>, тогда функция <code>add</code> – принимая два <code>Int</code>-а возвращает <code>Int</code>, но при этом может выполнять “работу со временем” и “печатать на консоль”. Посылать HTTP запросы ей не позволено, так как ни <code>TimeEffect</code> ни <code>ConsoleEffect</code> этого не позволяют. Их тоже определяет сам программист, например так:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">TimeEffect</span> m a <span class="kw">where</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  С<span class="ot">urrentTime ::</span> <span class="dt">TimeEffect</span> m <span class="dt">String</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>makeEffect '<span class="dt">'TimeEffect</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">ConsoleEffect</span> m a <span class="kw">where</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>  <span class="dt">PrintLn</span><span class="ot"> ::</span> <span class="dt">String</span> <span class="ot">-&gt;</span> <span class="dt">ConsoleEffect</span> m ()</span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ReadLn</span><span class="ot"> ::</span> <span class="dt">ConsoleEffect</span> m <span class="dt">String</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>makeEffect '<span class="dt">'ConsoleEffect</span></span></code></pre></div>
<p>Ну хорошо, вместо всепозволяющего <code>Int -&gt; Int -&gt; IO Int</code> мы теперь имеем более конкретизированное <code>(Member TimeEffect eff, Member ConsoleEffect eff) =&gt; Int -&gt; Int -&gt; Effect eff Int</code> (обратите внимание на сходство с возможной математической нотацией: <code>add :: Int -&gt; Int -&gt; Effect eff Int</code>, где <code>eff</code> такое, что истинны оба утверждения: <code>Member TimeEffect eff</code> и <code>Member ConsoleEffect eff</code>).</p>
<p>Комбинируя функции с явно определенными эффектами в одной программе (функции) – эффекты тоже объединяются:</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="ot">greeting ::</span> <span class="dt">Member</span> <span class="dt">ConsoleEffect</span> eff <span class="ot">=&gt;</span> <span class="dt">Effect</span> eff ()</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>greeting <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>  printLn(<span class="st">&quot;What is your name?&quot;</span>)</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>  name <span class="ot">&lt;-</span> <span class="fu">readLn</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>  printLn(<span class="st">&quot;Hello&quot;</span> <span class="op">&lt;&gt;</span> name)</span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a><span class="ot">measure ::</span> (<span class="dt">Memeber</span> <span class="dt">ConsoleEffect</span> actionEff, <span class="dt">Memeber</span> <span class="dt">TimeEffect</span> measureEff) <span class="ot">=&gt;</span> <span class="dt">Effect</span> actionEff a <span class="ot">-&gt;</span> <span class="dt">Effect</span> (measureEff <span class="op">:</span> actionEff) a</span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>measure action <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>  startTime <span class="ot">&lt;-</span> currentTime</span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>  result <span class="ot">&lt;-</span> action</span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>  endTime <span class="ot">&lt;-</span> currentTime</span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>  printLn <span class="op">$</span> <span class="st">&quot;Action took: &quot;</span> <span class="op">&lt;&gt;</span> endTime <span class="op">-</span> startTime <span class="op">&lt;&gt;</span> <span class="st">&quot; seconds&quot;</span></span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>  <span class="fu">return</span> result</span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a>measure<span class="ot"> greeting ::</span> (<span class="dt">Memeber</span> <span class="dt">ConsoleEffect</span> eff, <span class="dt">Memeber</span> <span class="dt">TimeEffect</span> eff) <span class="ot">=&gt;</span> <span class="dt">Effect</span> eff ()</span></code></pre></div>
<p>По сути, мы создаем не последовательность инструкций, а сложную структуру данных – дерево последовательности вызовов и callback-ов. Дело за малым – интерпретировать (схлопнуть, вычислить) это дерево до получения единственного значения. Прелесть подхода с эффектами в том, что самостоятельно интерпретатор для дерева писать не приходится. Нужно всего-лишь “объяснить” что делать с тем или иным эффектом.</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="ot">runConsole ::</span> <span class="dt">Member</span> (<span class="dt">Embed</span> <span class="dt">IO</span>) r <span class="ot">=&gt;</span> <span class="dt">InterpreterFor</span> <span class="dt">ConsoleEffect</span> r</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>runConsole <span class="ot">=</span> interpret <span class="op">$</span> \<span class="kw">case</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">PrintLn</span> string <span class="ot">-&gt;</span> System.IO.putStrLn string</span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ReadLn</span> <span class="ot">-&gt;</span> System.IO.getLine</span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="ot">runTime ::</span> <span class="dt">Member</span> (<span class="dt">Embed</span> <span class="dt">IO</span>) r <span class="ot">=&gt;</span> <span class="dt">InterpreterFor</span> <span class="dt">TimeEffect</span> r</span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>runTime <span class="ot">=</span> interpret <span class="op">$</span> \<span class="kw">case</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>  СurrentTime <span class="ot">-&gt;</span> Data.Time.Clock.getCurrentTime</span></code></pre></div>
<p>Итоговый интерпретатор, которым можно выполнить всю программу (именно он будет использоваться в main), комбинируют из индивидуальных:</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a>interpreter <span class="ot">=</span> runIO <span class="op">.</span> runTime <span class="op">.</span> runConsole</span></code></pre></div>
<p>Применив получившийся интерпретатор <code>interpreter</code> к программе <code>measure greeting</code>, получим:</p>
<pre class="console"><code>=&gt; What is your name?
&lt;= Alex
=&gt; Hello Alex
=&gt; Action took: 5 seconds</code></pre>
<p>Для целей тестирования функции <code>greeting</code> можно написать специальный интерпретатор, который по <code>readLn</code> всегда возвращает нужную нам строку, а <code>printLn</code> постоянно добавляет к аккумулятору переданную ему строку. Но создавать такие интерпретаторы – на наш путь. Мы воспользуемся готовеньким и реализуем эффект <code>ConsoleEffect</code> в терминах двух других библиотечных эффектов – <code>Reader</code> и <code>Writer</code>. В этом случае можно будет воспользоваться уже готовыми интерпретаторами для них:</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="ot">fakeInterpreter ::</span> <span class="dt">Effect</span> <span class="dt">ConsoleEffect</span> a <span class="ot">-&gt;</span> <span class="dt">Effect</span> (<span class="dt">Writer</span> <span class="dt">String</span> <span class="op">:</span> <span class="dt">Reader</span> <span class="dt">String</span>) a</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>fakeInterpreter <span class="ot">=</span> reinterpret \<span class="kw">case</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">PrintLn</span> string <span class="ot">-&gt;</span> write string</span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ReadLn</span> <span class="ot">-&gt;</span> ask</span></code></pre></div>
<p>Была программа с side effect-ом <code>ConsoleEffect</code>, а стала программой для работы с эффектами <code>Reader String</code> и <code>Writer String</code> (про то почему reader и writer эффекты – можно и отдельную статью сделать). Выполнить ее можно получившимся “чистым” (без всяких <code>IO</code> и <code>Effect</code>) интерпретатором:</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="ot">pureGreeter ::</span> <span class="dt">String</span> <span class="ot">-&gt;</span> [<span class="dt">String</span>]</span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a>pureGreeter name <span class="ot">=</span> intepret greeter</span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">where</span></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>    intepret <span class="ot">=</span> run <span class="op">.</span> runWriter <span class="op">.</span> runReader name <span class="op">.</span> fakeInterpreter</span></code></pre></div>
<p>Тестировать такую функцию элементарно – передаешь имя на вход, получаешь массив строк на выходе – сравниваешь с ожидаемым.</p>
<p>Программирование “на эффектах” – во многом схоже с программированием “на интерфейсах” из объектно-ориентированного программирования. Выделяются абстракции, которые можно в последствии подменить (в целях тестирования или другого полиморфизма). В обоих случаях ядро программы представляет собой ответ на “что делать”, а на “как делать” отвечает самая внешняя часть – чем ближе к main, тем <a href="https://www.destroyallsoftware.com/screencasts/catalog/functional-core-imperative-shell">лучше</a>. В случае ООП этим занимается DI фреймворк – регистрирует при старте программы все реализации интерфейсов, внедряет зависимости туда, где они требуются и запускает исполнение основной программы.</p>
<p>Вроде все “так же”, зачем тогда весь этот функциональные приседания? Да, на первый взгляд отличий не так много. Но задумайтесь – ваша программа перестала быть просто программой, она стала данными, выстроенным в памяти деревом вызовов, сформулированным в терминах выбранных вами эффектов. Это ведь можно как-то использовать…</p>
<p>Например для интроспекции – можно пройтись по по этой структуре и чего-нибудь туда добавить – трассировку, скажем:</p>
<div class="sourceCode" id="cb12"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="ot">logConsole ::</span> <span class="dt">Member</span> <span class="dt">ConsoleEffect</span> eff <span class="ot">=&gt;</span> <span class="dt">Effect</span> eff a <span class="ot">-&gt;</span> <span class="dt">Effect</span> (eff <span class="op">:</span> <span class="dt">Trace</span>) a</span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>logConsole <span class="ot">=</span> intercept <span class="op">$</span> \<span class="kw">case</span></span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">PrintLn</span> string <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a>    trace <span class="op">$</span> <span class="fu">unwords</span> [<span class="st">&quot;Going to print&quot;</span>, <span class="fu">length</span> string, <span class="st">&quot;characters&quot;</span>]</span>
<span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a>    printLn string</span>
<span id="cb12-6"><a href="#cb12-6" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ReadLn</span> <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb12-7"><a href="#cb12-7" aria-hidden="true" tabindex="-1"></a>    trace <span class="op">$</span> <span class="fu">unwords</span> [<span class="st">&quot;Going to read from a console&quot;</span>]</span>
<span id="cb12-8"><a href="#cb12-8" aria-hidden="true" tabindex="-1"></a>    result <span class="ot">&lt;-</span> <span class="fu">readLn</span></span>
<span id="cb12-9"><a href="#cb12-9" aria-hidden="true" tabindex="-1"></a>    trace <span class="op">$</span> <span class="fu">unwords</span> [<span class="st">&quot;Successfully read&quot;</span>, <span class="fu">length</span> result, <span class="st">&quot;from a console&quot;</span>]</span>
<span id="cb12-10"><a href="#cb12-10" aria-hidden="true" tabindex="-1"></a>    <span class="fu">return</span> result</span></code></pre></div>
<p>Или время заморозить, как в мультике:</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="ot">fronzen ::</span> <span class="dt">Member</span> <span class="dt">TimeEffect</span> eff <span class="ot">=&gt;</span> <span class="dt">Time</span> <span class="ot">-&gt;</span> <span class="dt">Effect</span> eff a <span class="ot">-&gt;</span> <span class="dt">Effect</span> (eff <span class="op">:</span> <span class="dt">Trace</span>) a</span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a>fronzen instant <span class="ot">=</span> intercept <span class="op">$</span> <span class="fu">const</span> <span class="op">$</span> <span class="fu">pure</span> instant</span></code></pre></div>
<p>Кстати, а вы заметили в примерах множество полей с навешанными на них <code>Autowired</code> аннотациями или может быть десятки аргументов в конструкторах классов? Прелесть в том, что они оказываются не нужны – роль DI framework-а играет простая <a href="https://github.com/maksar/ldap-bot/blob/master/src/Server/Hook.hs#L33">композиция функций</a>. Чуть не забыл про тесты упомянуть – благодаря тому, что все тестовые интерпретаторы не работают с <code>IO</code> – <a href="https://asciinema.org/a/389000">выполняются</a> они довольно быстро:</p>
<p><a href="https://asciinema.org/a/389000" target="_blank"><img src="https://asciinema.org/a/389000.svg" class="center" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 04 Feb 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2021-02-04-effect-systems.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>No comments</title>
    <link>https://maksar.github.io/posts/WAT/2021-01-28.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - No comments</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>No comments</h1>
    <article>
  <span class="header">
    January 28, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">return</span> <span class="fu">sprintf</span>(<span class="st">'</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="st">    INSERT INTO %s (%s, %s, %s, %s, %s, %s, %s)</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="st">    SELECT %s.%s, %s.%s,  </span><span class="sc">\'</span><span class="st">%s</span><span class="sc">\'</span><span class="st">, </span><span class="sc">\'</span><span class="st">%s</span><span class="sc">\'</span><span class="st">, </span><span class="sc">\'</span><span class="st">%s</span><span class="sc">\'</span><span class="st">, NOW(), 0</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="st">    FROM %s</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="st">    INNER JOIN %s on %s.%s = %s.%s</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="st">    INNER JOIN %s on %s.%s = %s.%s</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="st">    INNER JOIN %s on %s.%s = %s.%s</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="st">    INNER JOIN %s on %s.%s = %s.%s</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="st">    LEFT JOIN  %s</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="st">        on %s.%s = %s.%s</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="st">        and %s.%s = %s.%s</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="st">        and %s.%s = </span><span class="sc">\'</span><span class="st">%s</span><span class="sc">\'</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="st">    WHERE %s.%s IS NULL</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="st">'</span><span class="ot">,</span> ...)</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 28 Jan 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-01-28.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Discussion facilitation</title>
    <link>https://maksar.github.io/posts/WAT/2021-01-26.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Discussion facilitation</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Discussion facilitation</h1>
    <article>
  <span class="header">
    January 26, 2021 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/pull-request.jpg" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/pull-request.jpg" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 26 Jan 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2021-01-26.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Developers&#39; complaints</title>
    <link>https://maksar.github.io/posts/code/2021-01-20-developers-complaints.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Developers' complaints</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Developers' complaints</h1>
    <article>
  <span class="header">
    January 20, 2021 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> 
  </span>
  <section>
    <p>Совсем недавно мы работали над списком улучшений для одного из проектов, которые собирались “предлагать” заказчику. В качестве предпосылки, имелся список замечаний от команды разработчиков. Есть мнение, что чистого “недовольства” проектом не бывает – это скорее кумулятивное понятие, которое либо озвучивают “только вслух” либо оформляют в виде “улучшений”. Попробуем разобраться в истинных причинах недовольства, рассмотрев список улучшений “от разработчиков”. Постараемся взглянуть на “недовольства” с двух сторон – со стороны разработчиков и со стороны менеджмента и/или заказчика. Ведь часто случается так, что одно и тоже выглядит совершенно по-разному.</p>
<!--more-->
<h2 id="первая-группа-замечаний">Первая группа замечаний:</h2>
<ul>
<li>ведут разработку на AWS dev серверах</li>
<li>нет локально настроенного окружения и не планируют его делать</li>
</ul>
<p>Касается “удобства” и “чувства продуктивности”. Инженерам критически важно иметь “быстрый отклик” или “короткий feedback cycle” в процессе работы. При необходимости “ждать” (либо из-за медленного соединения c сетью, либо из-за необходимости синхронизации файлов и/или данных) растет раздражение и формируется недовольство. Теряется чувство “я продуктивен”, нарастает недовольство собой как инженером, эффективно решающим задачу. Исходя из этого, разработчики часто отказываются работать на “удаленных” машинах, с подключением по RDP или TeamViewer. Хотя с точки зрения менеджмента – проблемы нет. Для управленца такой способ работы неотличим от “подумаешь, чуть более медленный компьютер, ничего страшного”. Постоянные задержки приводят к отвлечению/переключению внимания инженера, что влияет не только на скорость выполнения задач (исправления багов, доработки функционала), но и на количество допускаемых в процессе ошибок. Причем совершенно непропорционально: необходимость работы “через RDP”, который с точки зрения менеджмента медленнее локального окружения на 30% вполне может приводить к 3-х кратному увеличению сроков выполнения задач. Понимая это, менеджмент должен прилагать все возможные усилия к тому, чтобы снизить количество отвлечений инженеров, в том числе из-за отсутствия локального окружения, недостаточной производительности рабочего оборудования или скорости сетевого соединения.</p>
<h2 id="вторая-группа-замечаний">Вторая группа замечаний:</h2>
<ul>
<li>неподдерживаемая версия языка</li>
<li>неподдерживаемый/устаревший фрeймворк</li>
<li>дублирующийся, закоментированный код</li>
<li>отсутствие единого стиля кодирования</li>
</ul>
<p>Говорит о другом виде недовольства – необходимости работы с большим количеством legacy кода, устаревшими подходами и технологиями. Инженерам по разработке программного обеспечения свойственна тяга к постоянному обучению, обновлению собственных знаний и умений. И это отнюдь не следствие “склада ума”, а банальная необходимость. Если постоянно не стараться быть “на острие” технологий, версий компиляторов и языков – знания быстро устаревают и, как следствие, стоимость “на рынке” падает. Инженерам вовсе не хочется стать “неприменимым” на очередном собеседований из-за того, что последние несколько лет он/она трудились на проекте с не совсем современным технологическим стэком. С точки заказчика, несвоевременное обновление/поддержание с современном состоянии технологического стека может привести ко все более тяжелому и долгому поиску инженеров для работы над проектом. Более того, качество нанимаемых инженеров, согласных работать над таким проектом окажется ниже (количество предложений на рынке труда, пусть даже в рамках одной компании, велико). Таким образом, “модернизация” прежде всего выгодна заказчику и менеджменту, хоть на первый взгляд и кажется, что продиктована она лишь “недовольством” инженерного состава проекта.</p>
<h2 id="третья-группа-замечаний">Третья группа замечаний:</h2>
<ul>
<li>не используют менеджер пакетов</li>
<li>JS зависимости в репозитории</li>
<li>только часть стилей/изображений расположена в git-репозитории</li>
<li>другая часть подключается как mounted-раздел с другого серверах</li>
</ul>
<p>Относится к трудностям в области “управления зависимостями”. Эти трудности схожи как с недовольством legacy кодом (отсутствует очевидный и быстрый способ “обновить” зависимость) так и непредвиденными задержками в разработке (вместо того, чтобы “обновить”, приходится заниматься “IT археологией” и пытаться встроить fix в старую версию зависимости, тем самым еще более затрудняя ее будущее обновление). Постоянное ощущение “латания дыр” отрицательно сказывается на мотивации инженеров, не позволяет им сфокусироваться на важных задачах, спотыкаясь на “используемая у нас старая версия библиотеки этого не поддерживает”. Причина, по которой своевременное обновление версий библиотек (языков, фреймворком, движков баз данных) “нужно” менеджменту и владельцу продукта отнюдь не в том, чтобы инженеры “чувствовали новизну”. Причина в том, чтобы пользоваться возможностями новых версий, не тратя драгоценное время на back-port-инг функций или латание уязвимостей безопасности. Правильное управление зависимостями позволяет пользоваться наработками других, значительно сокращая время на разработку и поддержку продукта; снижать количество ошибок, возникающих из-за несовместимости версий и т.д.</p>
<h2 id="опасения">Опасения</h2>
<p>Логичной реакцией заказчика (владельца продукта/системы) на предложения вида “давайте обновим, модернизируем, поменяем” являются опасения. Опасения того, изменение сложившегося status quo приведет к ошибкам в ПО, частичной неработоспособности, необходимости менять устоявшиеся процессы. Бизнес стремится быть консервативным (для противодействия этому эффекту даже существует отдельная должность – “директор по развитию бизнеса”) – с точки зрения business continuity – совершенно логичное решение. Однако долгий период стабильности в IT сфере – отнюдь не тоже самое что в, скажем, мебельном бизнесе. Модернизация для сохранения темпа работ необходима на постоянной основе, а не в виде закупки нового деревообрабатывающего оборудования раз в 10 лет. К сожалению, скорость “устаревания” в IT много выше, необходимо отыскивать компромисс между стремлением инженерного состава к инновациям и требованиям бизнеса по сохранению стабильности.</p>
<p>Разумным считается выработка плана действий, который бы принимал во внимание опасения бизнеса, особенно в том случае, когда программный продукт уже является несколько устаревшим или разрабатывается при помощи/на базе устаревших технологий/библиотек/фреймворков. Ключевых рекомендаций для сохранения стабильности несколько:</p>
<ul>
<li>строгое отделение “улучшательств” от “поступательного развития”</li>
<li>наличие плана Б в любой ситуации</li>
<li>итеративный, эволюционный подход к изменениям</li>
</ul>
<p>К примеру, естественным желанием технического лидера проекта на “неконсистентность форматирования” является действие “а давайте все унифицируем”. Суть в том, чтобы не поддаваться соблазну “натравить linter на всю кодовую базу и вкомитить”, пусть даже и кажется что это наименее инвазивным подходом (других разработчиков такое резкое изменение затронет в меньшей степени, ввиду его однократности) – это затруднит поиск авторов и причин написания того или иного участка кода (при поиске и решении каких-либо проблем). Ошибкой будет и внедрение политики “каждый применяет <em>правильное</em> форматирование к файлам, которых касается” – это приведет к тому, что будет невозможно отличить изменения кода “по сути” задачи от изменений “из-за форматирования”. Разумным компромиссом будет как раз гибридный подход, когда в рамках работы над задачей инженер все же делает изменения по “унификации форматирования”, но намеренно отделяет их от основных изменений, связанных с решаемой в данный момент задачей. В дополнение к этому, стоит помечать коммиты с linting-ом особым образом, чтобы любому члену команды при просмотре истории было очевидно – этот коммит не содержит никаких изменений поведения.</p>
<p>Другим примером может служить обновление версии платформы (обновление версии языка и компилятора или платформы). Так как обычно проект не изобилует unit и интеграционными тестами, проверить работоспособность и корректность поведения после обновления – практически сложно. Ни программисты ни инженеры по контролю качества не способны дать гарантию того, что поведение системы не изменится. Соблюсти баланс между стремлением бизнеса к стабильности и необходимости модернизации в этом случае можно применив комбинацию эволюционного подхода и наличию запасного плана. Можно создать копию production окружения, провести обновление на нем и направить на него лишь небольшую часть траффика пользователей. Отслеживание возникающих ошибок (точнее их отсутсвие) за разумный промежуток времени послужит для бизнеса реальным свидетельством безопасности обновления. В случае же возникновения проблем, последствия окажутся во первых не велики (с новой версией работала небольшая часть пользователей), а во вторых – контролируемыми и предсказуемыми (инженеры могут заранее предопределить круг пользователей, направляемых на обновленную версию).</p>
<h2 id="решение">Решение</h2>
<p>Каждое конкретное изменение, предлагаемое инженерами, следует рассматривать через призму определенного “недовольства”, которая может находить (или не находить) отражение в потребностях бизнеса. Конкретный план по улучшению определенного аспекта системы всегда должен формироваться в том числе исходя из потребности бизнеса в стабильности. Именно исходя из некоторого противоречия в стремлениях инженеров и бизнесменов рождается “здоровые” программные системы, которые программистам приятно поддерживать и развивать, а бизнесу – прогнозировать развитие и быть уверенным в надежности. Однобокость в принятии решений как раз и приводит к перекосу: потакание желанию инженеров бездумно “использовать все новое и современное” легко может привести к тому, что продукт так и не выйдет на рынок и никогда не начнет приносить коммерческой выгоды. Равно как и стремление “оставить все как есть” неизбежно приведет к застою и устаревания, что, в свою очередь, сильно затруднит как talent aquisition так и технологичность продукта в целом.</p>
<p>Исходя из всего вышеизложенного, рекомендация заключается в том, чтобы по каждому из пунктов списка улучшений предлагаемых разработчиками иметь:</p>
<ul>
<li>формальную оценку важности (с точки зрения impact-а на систему)</li>
<li>оценку сложности внедрения изменения (не в виде часов, а в виде возможных рисков с их перечислением)</li>
<li>перечень “выгод” для системы, инженеров и бизнеса</li>
<li>разработанный план итеративного внедрения и возможностей по “тестированию” и откату изменений</li>
</ul>
<p>Оформленные в таком виде proposal-ы никогда не стоит отвергать полностью, а лишь приоритизировать на основании мнения владельцев продукта (сформированного не только на основании “суждения” инженера, но на базе измеримых критериев и рисков, описанных в proposal-е). Работу над внедрением изменений можно планировать в либо в периоды “малой активности” либо другим подходящим к темпу проекта способом (не больше одного изменения в sprint-е). Совокупность всех описанных шагов можно назвать работой с техническим долгом (который на самом деле является техническим кредитом или займом, сложные проценты дают о себе знать…), необходимость которой индустрия давно не подвергает сомнению.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 20 Jan 2021 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2021-01-20-developers-complaints.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>When comments are self-explanatory</title>
    <link>https://maksar.github.io/posts/WAT/2020-12-16.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - When comments are self-explanatory</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>When comments are self-explanatory</h1>
    <article>
  <span class="header">
    December 16, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">// This function makes a new password from a plaintext password.</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> encrypt_password(<span class="va">$plain</span>)</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>{</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  <span class="va">$password</span> <span class="op">=</span> <span class="st">''</span><span class="ot">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  <span class="cf">for</span> (<span class="va">$i</span> <span class="op">=</span> <span class="dv">0</span><span class="ot">;</span> <span class="va">$i</span> <span class="op">&lt;</span> <span class="dv">10</span><span class="ot">;</span> <span class="va">$i</span><span class="op">++</span>) {</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="va">$password</span> <span class="op">.=</span> zen_rand()<span class="ot">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  <span class="va">$salt</span> <span class="op">=</span> <span class="fu">substr</span>(<span class="fu">md5</span>(<span class="va">$password</span>)<span class="ot">,</span> <span class="dv">0</span><span class="ot">,</span> <span class="dv">2</span>)<span class="ot">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>  <span class="va">$password</span> <span class="op">=</span> <span class="fu">md5</span>(<span class="va">$salt</span> <span class="op">.</span> <span class="va">$plain</span>) <span class="op">.</span> <span class="st">':'</span> <span class="op">.</span> <span class="va">$salt</span><span class="ot">;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> <span class="va">$password</span><span class="ot">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 16 Dec 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-12-16.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Nixops deployment of all the bots and services</title>
    <link>https://maksar.github.io/posts/projects/2020-12-04-nitrax.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Nixops deployment of all the bots and services</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Nixops deployment of all the bots and services</h1>
    <article>
  <span class="header">
    December  4, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/projects.html">projects</a> #<a href="../../tags/nix.html">nix</a> #<a href="../../tags/nixops.html">nixops</a>
  </span>
  <section>
    <p><a href="https://github.com/maksar/Nitrax">Nitrax</a> (NIX + ITRAnsition, I suck at naming) is my <a href="https://github.com/maksar/nitrax/blob/master/fleet.nix">nixops configuration</a> to deploy bots and services.</p>
<!--more-->
<p><img src="../../previews/nitrax/logo.png" class="center" /></p>
<p>It is composed of several <code>nix</code> files, each responsible for a single service or bot.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode nix"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="ex">network</span> = {</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="ex">description</span> = <span class="st">&quot;Itransition NIXOS fleet&quot;</span><span class="kw">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="ex">enableRollback</span> = true<span class="kw">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="ex">nixpkgs</span> = <span class="er">(</span><span class="ex">import</span> <span class="op">&lt;</span>nixos-21.05-small<span class="op">&gt;</span> { system = <span class="st">&quot;x86_64-linux&quot;</span><span class="kw">;</span> <span class="er">}</span><span class="kw">);</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  <span class="kw">};</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;decepticons&quot;</span> = { config, pkgs, ... }: {</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="ex">rootfs</span> = <span class="st">&quot;btrfs&quot;</span><span class="kw">;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="ex">imports</span> = [</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./hardware/efi.nix</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./os</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/trimmer.nix</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/gitman.nix</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/nine11.nix</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/ldap-bot.nix</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/instagram.nix</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/digest.nix</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/fukuisima.nix</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/milestones.nix</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/personer.nix</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/certiplace.nix</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>      <span class="ex">./modules/coorish.nix</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    <span class="ex">]</span><span class="kw">;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>    <span class="ex">networking.hostName</span> = <span class="st">&quot;decepticons&quot;</span><span class="kw">;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="ex">deployment.targetHost</span> = <span class="st">&quot;decepticons.itransition.corp&quot;</span><span class="kw">;</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>  <span class="er">}</span><span class="kw">;</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a><span class="er">}</span></span></code></pre></div>
<p>With this <a href="https://github.com/maksar/nitrax/blob/master/modules/certiplace.nix">service</a> I struggled the most, because of the way <code>unixODBC</code> drivers are working on <code>MacOS</code> and <code>Linux</code>.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode nix"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">{</span> <span class="ex">pkgs,</span> ... }:</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="bu">let</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="ex">certiplace</span> = <span class="er">(</span><span class="ex">builtins.getFlake</span> <span class="st">&quot;git+ssh://git@git.itransition.com:7999/workplace/certificates.git&quot;</span><span class="kw">)</span><span class="ex">.defaultPackage.</span><span class="va">${pkgs</span><span class="er">.system</span><span class="va">}</span><span class="kw">;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>  <span class="ex">driver</span> = pkgs.unixODBCDrivers.msodbcsql17<span class="kw">;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="er">in</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="kw">{</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>  <span class="ex">environment.systemPackages</span> = [ certiplace driver ]<span class="kw">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>  <span class="ex">deployment.keys.certiplace-env</span> = {</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="ex">text</span> = <span class="er">(</span><span class="ex">builtins.readFile</span> ~/projects/certiplace/.env.production<span class="kw">)</span> <span class="ex">+</span> <span class="st">&quot;\nCERTIPLACE_EMS_DATABASE_DRIVER=</span><span class="va">${driver}</span><span class="st">/</span><span class="va">${driver</span><span class="er">.driver</span><span class="va">}</span><span class="st">&quot;</span><span class="kw">;</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>  <span class="kw">};</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>  <span class="ex">systemd.services.certiplace</span> = {</span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    <span class="ex">after</span> = [ <span class="st">&quot;certiplace-env-key.service&quot;</span> ]<span class="kw">;</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>    <span class="ex">wants</span> = [ <span class="st">&quot;certiplace-env-key.service&quot;</span> ]<span class="kw">;</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>    <span class="ex">script</span> = <span class="st">''</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>      <span class="bu">source</span> <span class="op">&lt;(</span><span class="fu">sed</span> <span class="at">-E</span> <span class="st">'s/([A-Z_0-9]+)=(.*)/export \1=\2/g'</span> /run/keys/certiplace-env<span class="op">)</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>      <span class="bu">exec</span> <span class="va">${certiplace}</span>/bin/certiplace</span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>    <span class="st">''</span><span class="kw">;</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>  <span class="kw">};</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>  <span class="ex">systemd.timers.certiplace</span> = {</span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>    <span class="ex">timerConfig</span> = {</span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>      <span class="va">OnCalendar</span><span class="op">=</span><span class="st">&quot;*-*-01 12:15:00&quot;</span><span class="kw">;</span></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>    <span class="er">}</span><span class="kw">;</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>    <span class="ex">wantedBy</span> = [ <span class="st">&quot;timers.target&quot;</span> ]<span class="kw">;</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>  <span class="er">}</span><span class="kw">;</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a><span class="er">}</span></span></code></pre></div>
<p>That is a <code>python</code> bot, which connects to <code>MSSQL</code> database (what a pain to use) to fetch data about recently earned certifications in a company, renders it in a picture and uploads to the intranet. Despite the fact <code>python</code> is well supported by <a href="https://github.com/nix-community/poetry2nix">poetry2nix</a>, some tricks (disabling LTO) were needed to build <a href="https://github.com/matplotlib/matplotlib">mathplotlib</a> library.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 04 Dec 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/projects/2020-12-04-nitrax.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>JIRA bot to trim whitespaces from field values</title>
    <link>https://maksar.github.io/posts/projects/2020-11-06-trimmer.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - JIRA bot to trim whitespaces from field values</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>JIRA bot to trim whitespaces from field values</h1>
    <article>
  <span class="header">
    November  6, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/projects.html">projects</a> #<a href="../../tags/kotlin.html">kotlin</a>
  </span>
  <section>
    <p><a href="https://github.com/maksar/Trimmer">Trimmer</a> is a small bot, which iterates over JIRA issues and trims whitespaces fields values. Without that, human mistakes on copy-paste operations can make automated JIRA statistics collections harder.</p>
<!--more-->
<p>I’d like to demonstrate two different approaches to handle “paging” problem in Atlassian REST APIs. Atlassian REST endpoints usually allows to perform search queries with <code>perPage</code> and <code>start</code> parameters. Common solution to this problem (implemented in this <a href="https://github.com/maksar/trimmer">trimmer</a>) is to iterate sequentially, increasing <code>start</code> parameter along the way. Code below demonstrates the idea.</p>
<p>Sequential iteration can be easily abstracted away from the main code by introducing a custom <code>iterator</code> instance, which <code>yield</code>s search results page-by-page.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> IssuesIterator<span class="op">(</span><span class="kw">private</span> <span class="kw">val</span> <span class="va">jql</span><span class="op">:</span> <span class="dt">String</span><span class="op">,</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>                     <span class="kw">private</span> <span class="kw">val</span> <span class="va">perPage</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>                     <span class="kw">private</span> <span class="kw">val</span> <span class="va">fields</span><span class="op">:</span> <span class="dt">Set</span>&lt;<span class="va">String</span>&gt;<span class="op">,</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>                     <span class="kw">private</span> <span class="kw">val</span> <span class="va">client</span><span class="op">:</span> <span class="dt">SearchRestClient</span><span class="op">)</span> <span class="op">:</span> <span class="dt">Sequence</span><span class="op">&lt;</span><span class="dt">Issue</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">iterator</span><span class="op">():</span> <span class="dt">Iterator</span><span class="op">&lt;</span><span class="dt">Issue</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> iterator <span class="op">{</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>            <span class="kw">var</span> <span class="va">currentIndex</span> <span class="op">=</span> <span class="op">-</span>perPage</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>            <span class="cf">do</span> <span class="op">{</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>                currentIndex <span class="op">+=</span> perPage</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>                print<span class="op">(</span><span class="st">&quot;.&quot;</span><span class="op">)</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>                <span class="kw">val</span> <span class="va">currentResult</span> <span class="op">=</span> fetch<span class="op">(</span>currentIndex<span class="op">)</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>                yieldAll<span class="op">(</span>currentResult<span class="op">.</span>issues<span class="op">)</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span> <span class="cf">while</span> <span class="op">(</span>currentIndex <span class="op">+</span> perPage <span class="op">&lt;</span> currentResult<span class="op">.</span>total<span class="op">)</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">fun</span> <span class="fu">fetch</span><span class="op">(</span><span class="va">start</span><span class="op">:</span> <span class="dt">Int</span><span class="op">):</span> <span class="dt">SearchResult</span> <span class="op">{</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> client<span class="op">.</span>searchJql<span class="op">(</span>jql<span class="op">,</span> perPage<span class="op">,</span> start<span class="op">,</span> fields<span class="op">).</span><span class="kw">get</span><span class="op">()</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>However, this approach makes it impossible to execute search requests in parallel. In order to overcome such limitation, I am using the following trick:</p>
<ul>
<li>Execute first dummy search request with <code>pageSize</code> equal to <code>1</code> and <code>start</code> equal to <code>0</code>. Result will give us access to the <code>total</code> parameter in a search response.</li>
<li>Read <code>total</code> value from search response and create a range of integers from <code>0</code> to <code>total</code> with <code>step</code> equal to desired page size.</li>
<li>Schedule background jobs (using <code>Flow</code> or any other concurrent library) to perform search requests with already known <code>pageSize</code> and <code>start</code> parameters.</li>
</ul>
<div class="sourceCode" id="cb2"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="kw">fun</span> <span class="fu">search</span><span class="op">(</span><span class="va">start</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">per</span><span class="op">:</span> <span class="dt">Int</span><span class="op">,</span> <span class="va">fields</span><span class="op">:</span> <span class="dt">Set</span>&lt;<span class="va">String</span>&gt; <span class="op">=</span> setOf<span class="op">()):</span> <span class="dt">SearchResult</span> <span class="op">=</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  jiraClient<span class="op">.</span>searchClient<span class="op">.</span>searchJql<span class="op">(</span><span class="st">&quot;project = </span><span class="ss">${</span>env<span class="op">[</span>PERSONER_JIRA_PROJECT<span class="op">]</span><span class="ss">}</span><span class="st">&quot;</span><span class="op">,</span> per<span class="op">,</span> start<span class="op">,</span> MINIMUM_SET_OF_FIELDS<span class="op">.</span>plus<span class="op">(</span>fields<span class="op">)).</span><span class="kw">get</span><span class="op">()</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>suspend <span class="kw">fun</span> <span class="fu">projectCards</span><span class="op">(</span><span class="va">fields</span><span class="op">:</span> <span class="dt">Set</span>&lt;<span class="va">String</span>&gt;<span class="op">)</span> <span class="op">=</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>  search<span class="op">(</span><span class="dv">0</span><span class="op">,</span> <span class="dv">1</span><span class="op">).</span>total<span class="op">.</span>let <span class="op">{</span> total <span class="op">-&gt;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    rangeUntil<span class="op">(</span><span class="dv">0</span><span class="op">,</span> total<span class="op">,</span> env<span class="op">[</span>PERSONER_PAGE_SIZE<span class="op">]).</span>asFlow<span class="op">()</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>      <span class="op">.</span>concurrentFlatMap <span class="op">{</span> start <span class="op">-&gt;</span> search<span class="op">(</span>start<span class="op">,</span> env<span class="op">[</span>PERSONER_PAGE_SIZE<span class="op">],</span> fields<span class="op">).</span>issues <span class="op">}</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>      <span class="op">.</span>toList<span class="op">()</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span></code></pre></div>
<p>Since it is unlikely that number of search results will change during parallel fetching process – the solution can be considered as “robust enough”.</p>
<p>If your project isn’t ready for modern <code>Flow</code> framework in Kotlin, you can implement the same idea using <code>CompletableFuture</code>s. Retries are very possible too with <a href="https://github.com/failsafe-lib/failsafe">Failsafe</a> library.</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;</span> <span class="fu">loadIssues</span><span class="op">(</span><span class="va">fields</span><span class="op">:</span> <span class="dt">String</span><span class="op">,</span> <span class="va">query</span><span class="op">:</span> <span class="dt">String</span><span class="op">,</span> <span class="va">mapper</span><span class="op">:</span> <span class="op">(</span><span class="dt">Issue</span><span class="op">)</span> <span class="op">-&gt;</span> <span class="dt">T</span><span class="op">):</span> <span class="dt">List</span><span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;</span> <span class="op">=</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  jiraClient<span class="op">.</span>searchIssues<span class="op">(</span>query<span class="op">,</span> fields<span class="op">,</span> <span class="dv">1</span><span class="op">).</span>total<span class="op">.</span>let <span class="op">{</span> total <span class="op">-&gt;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">chunkSize</span> <span class="op">=</span> max<span class="op">(</span><span class="dv">1</span><span class="op">,</span> total <span class="op">/</span> JIRA_CHUNK_COUNT<span class="op">)</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    IntStream<span class="op">.</span>iterate<span class="op">(</span><span class="dv">0</span><span class="op">)</span> <span class="op">{</span> it <span class="op">+</span> chunkSize <span class="op">}.</span>limit<span class="op">((</span>total <span class="op">/</span> chunkSize<span class="op">)</span> <span class="op">+</span> <span class="dv">1L</span><span class="op">).</span>toList<span class="op">().</span>map <span class="op">{</span> start <span class="op">-&gt;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>      DatabaseContext<span class="op">.</span>supplyAsync <span class="op">{</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>        Failsafe<span class="op">.</span>with<span class="op">(</span>RetryPolicy<span class="op">&lt;</span>List<span class="op">&lt;</span>T<span class="op">&gt;&gt;().</span>handle<span class="op">(</span>RestException<span class="op">::</span><span class="kw">class</span>.java).withMaxRetries<span class="op">(</span>3<span class="op">)</span>).<span class="kw">get</span> <span class="op">{</span> <span class="op">-&gt;</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>          jiraClient<span class="op">.</span>searchIssues<span class="op">(</span>query<span class="op">,</span> fields<span class="op">,</span> chunkSize<span class="op">,</span> start<span class="op">).</span>issues<span class="op">.</span>map<span class="op">(</span>mapper<span class="op">)</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>      <span class="op">}</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>    <span class="op">}.</span>map <span class="op">{</span> it<span class="op">.</span><span class="kw">get</span><span class="op">()</span> <span class="op">}.</span>flatten<span class="op">()</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>  <span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 06 Nov 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/projects/2020-11-06-trimmer.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Passwords complexity</title>
    <link>https://maksar.github.io/posts/WAT/2020-11-03.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Passwords complexity</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Passwords complexity</h1>
    <article>
  <span class="header">
    November  3, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p>I am a bit tired from such regular expressions to check password complexity.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^(?</span><span class="ss">=.</span><span class="sc">*[A-Z])(?</span><span class="ss">=.</span><span class="sc">*[a-z])(?</span><span class="ss">=.</span><span class="sc">*\d)(?</span><span class="ss">=.</span><span class="sc">*[!@#$%^&amp;*()])[A-z\d!@#$%^&amp;*()]{8,18}$</span><span class="ss">/</span></span></code></pre></div>
<p>Several questions for the void:</p>
<ul>
<li>Why can’t I use name of my favorite anime characters in the password?</li>
<li>Why spaces are not allows, the longer – the better, right?</li>
<li>Size does matter, but why 18 is the limit? Your password may be shorted, but I want to go to the extreme!</li>
</ul>
<p>P.S. If “we have that in the requirements” is the answer, such requirements are bad and must be a subject of change.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 03 Nov 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-11-03.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>When there is a hammer in hands</title>
    <link>https://maksar.github.io/posts/WAT/2020-10-30.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - When there is a hammer in hands</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>When there is a hammer in hands</h1>
    <article>
  <span class="header">
    October 30, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="everything-looks-like-a-nail">Everything looks like a nail</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">static</span> <span class="bu">List</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> <span class="fu">removeBlankElements</span><span class="op">(</span><span class="bu">List</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> strings<span class="op">)</span> <span class="op">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span><span class="bu">Integer</span> i <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> i <span class="op">&lt;</span> strings<span class="op">.</span><span class="fu">size</span><span class="op">();</span> i<span class="op">++)</span> <span class="op">{</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span><span class="bu">String</span><span class="op">.</span><span class="fu">isBlank</span><span class="op">(</span>strings<span class="op">[</span>i<span class="op">]))</span> <span class="op">{</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>            strings<span class="op">.</span><span class="fu">remove</span><span class="op">(</span>i<span class="op">);</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> strings<span class="op">;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 30 Oct 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-10-30.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>To trim or not to trim</title>
    <link>https://maksar.github.io/posts/WAT/2020-10-29.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - To trim or not to trim</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>To trim or not to trim</h1>
    <article>
  <span class="header">
    October 29, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="that-is-the-question">That is the question!</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> replaceLineBreaksBeforeAndAfterString <span class="op">=</span> <span class="ss">/</span><span class="sc">^\s+|\s+$</span><span class="ss">/g</span><span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> replaceLineBreaks <span class="op">=</span> ((currentString<span class="op">:</span> string) <span class="kw">=&gt;</span> currentString<span class="op">.</span><span class="fu">replace</span>(replaceLineBreaksBeforeAndAfterString<span class="op">,</span> <span class="st">''</span>))<span class="op">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 29 Oct 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-10-29.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Wheel wants to be re-invented</title>
    <link>https://maksar.github.io/posts/WAT/2020-10-27.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Wheel wants to be re-invented</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Wheel wants to be re-invented</h1>
    <article>
  <span class="header">
    October 27, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="over-and-over-again">Over and over again…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">static</span> <span class="bu">Boolean</span> <span class="fu">isLastDayOfMonth</span><span class="op">(</span><span class="bu">Date</span> curDate<span class="op">)</span> <span class="op">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">final</span> <span class="bu">List</span><span class="op">&lt;</span><span class="bu">Integer</span><span class="op">&gt;</span> monthsWithThirtyOneDays <span class="op">=</span> <span class="kw">new</span> <span class="bu">List</span><span class="op">&lt;</span><span class="bu">Integer</span><span class="op">&gt;</span> <span class="op">{</span> <span class="dv">1</span><span class="op">,</span> <span class="dv">3</span><span class="op">,</span> <span class="dv">5</span><span class="op">,</span> <span class="dv">7</span><span class="op">,</span> <span class="dv">8</span><span class="op">,</span> <span class="dv">10</span><span class="op">,</span> <span class="dv">12</span><span class="op">};</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">final</span> <span class="bu">List</span><span class="op">&lt;</span><span class="bu">Integer</span><span class="op">&gt;</span> monthsWithThirtyDays <span class="op">=</span> <span class="kw">new</span> <span class="bu">List</span><span class="op">&lt;</span><span class="bu">Integer</span><span class="op">&gt;</span> <span class="op">{</span><span class="dv">4</span><span class="op">,</span> <span class="dv">6</span><span class="op">,</span> <span class="dv">9</span><span class="op">,</span> <span class="dv">11</span><span class="op">};</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>monthsWithThirtyOneDays<span class="op">.</span><span class="fu">contains</span><span class="op">(</span>curDate<span class="op">.</span><span class="fu">month</span><span class="op">()))</span> <span class="op">{</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> curDate<span class="op">.</span><span class="fu">day</span><span class="op">()</span> <span class="op">==</span> <span class="dv">31</span><span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="cf">if</span> <span class="op">(</span>monthsWithThirtyDays<span class="op">.</span><span class="fu">contains</span><span class="op">(</span>curDate<span class="op">.</span><span class="fu">month</span><span class="op">()))</span> <span class="op">{</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> curDate<span class="op">.</span><span class="fu">day</span><span class="op">()</span> <span class="op">==</span> <span class="dv">30</span><span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span> <span class="co">// February</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="bu">Date</span><span class="op">.</span><span class="fu">isLeapYear</span><span class="op">(</span>curDate<span class="op">.</span><span class="fu">year</span><span class="op">())</span> <span class="op">?</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>                curDate<span class="op">.</span><span class="fu">day</span><span class="op">()</span> <span class="op">==</span> <span class="dv">29</span> <span class="op">:</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>                curDate<span class="op">.</span><span class="fu">day</span><span class="op">()</span> <span class="op">==</span> <span class="dv">28</span><span class="op">;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 27 Oct 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-10-27.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Financial software</title>
    <link>https://maksar.github.io/posts/WAT/2020-08-13.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Financial software</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Financial software</h1>
    <article>
  <span class="header">
    August 13, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="is-that-expected-for-a-financial-system">Is that expected for a financial system?</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>OrderStatusInBank orderStatusInBank <span class="op">=</span> OrderStatusInBank<span class="op">.</span><span class="fu">valueOf</span><span class="op">(</span><span class="st">&quot;ORDER_STATUS_NUMBER_&quot;</span> <span class="op">+</span> jsonMap<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="st">&quot;OrderStatus&quot;</span><span class="op">));</span></span></code></pre></div>
<p>And then</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="bu">String</span> messageKey <span class="op">=</span> ORDER_STATUS_NUMBER_7<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>order<span class="op">.</span><span class="fu">getStatusInBank</span><span class="op">())</span> <span class="op">?</span> <span class="st">&quot;payment.canceled&quot;</span> <span class="op">:</span> <span class="st">&quot;error.payment&quot;</span><span class="op">;</span></span></code></pre></div>
<p>And finally</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="dt">final</span> <span class="bu">String</span> messageHead <span class="op">=</span> ORDER_STATUS_NUMBER_2<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>order<span class="op">.</span><span class="fu">getStatusInBank</span><span class="op">())</span> <span class="op">?</span> messageService<span class="op">.</span><span class="fu">getMessage</span><span class="op">(</span><span class="st">&quot;email.order-payed-successfully&quot;</span><span class="op">)</span> <span class="op">:</span> messageService<span class="op">.</span><span class="fu">getMessage</span><span class="op">(</span><span class="st">&quot;email.order-not-payed&quot;</span><span class="op">);</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 13 Aug 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-08-13.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Hidden data structure</title>
    <link>https://maksar.github.io/posts/WAT/2020-08-12.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Hidden data structure</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Hidden data structure</h1>
    <article>
  <span class="header">
    August 12, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="lurking-in-the-code">Lurking in the code</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;landmark&quot;</span>) {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;LM&quot;</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>} <span class="cf">else</span> <span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;benchmark&quot;</span>) {</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;BM&quot;</span><span class="op">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>} <span class="cf">else</span> <span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;pointofinterest&quot;</span>) {</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;POI&quot;</span><span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>} <span class="cf">else</span> <span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;accidentpoint&quot;</span>) {</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;ACC&quot;</span><span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>} <span class="cf">else</span> <span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;evidencepoint&quot;</span>) {</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;EVD&quot;</span><span class="op">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>} <span class="cf">else</span> <span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;eventlocation&quot;</span>) {</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;EVT&quot;</span><span class="op">;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>} <span class="cf">else</span> <span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;startingpoint&quot;</span>) {</span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;STR&quot;</span><span class="op">;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>} <span class="cf">else</span> <span class="cf">if</span> (attributes<span class="op">.</span><span class="at">type</span> <span class="op">===</span> <span class="st">&quot;turningpoint&quot;</span>) {</span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    text <span class="op">=</span> <span class="st">&quot;TRN&quot;</span><span class="op">;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 12 Aug 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-08-12.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Ouiii</title>
    <link>https://maksar.github.io/posts/WAT/2020-08-07.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Ouiii</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Ouiii</h1>
    <article>
  <span class="header">
    August  7, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="french-is-not-hard">French is not hard…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="va">$message</span> <span class="op">=</span> <span class="fu">strtr</span>(<span class="va">$message</span><span class="ot">,</span><span class="st">'äåéöúûü•µ¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷ÿŸ⁄€‹›ﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ¯˘˙˚¸˝ˇ'</span><span class="ot">,</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>           <span class="st">'SOZsozYYuAAAAAAACEEEEIIIIDNOOOOOOUUUUYsaaaaaaaceeeeiiiionoooooouuuuyy'</span>)<span class="ot">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 07 Aug 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-08-07.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Equality for everyone</title>
    <link>https://maksar.github.io/posts/WAT/2020-05-24.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Equality for everyone</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Equality for everyone</h1>
    <article>
  <span class="header">
    May 24, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="measure-seven-times-before-cutting">Measure seven times before cutting</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (locationsCards<span class="op">.</span><span class="at">length</span> <span class="op">&gt;</span> <span class="dv">0</span>) {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> cardHeight <span class="op">=</span> <span class="fu">$</span>(locationsCards[<span class="dv">0</span>])<span class="op">.</span><span class="fu">height</span>()<span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    locationsCards<span class="op">.</span><span class="fu">each</span>(<span class="kw">function</span> () {</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        <span class="kw">let</span> currentCardHeight <span class="op">=</span> <span class="fu">$</span>(<span class="kw">this</span>)<span class="op">.</span><span class="fu">height</span>()<span class="op">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> (currentCardHeight <span class="op">&gt;</span> cardHeight) {</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>            cardHeight <span class="op">=</span> currentCardHeight<span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    })<span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    locationsCards<span class="op">.</span><span class="fu">each</span>(<span class="kw">function</span> () {</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        <span class="fu">$</span>(<span class="kw">this</span>)<span class="op">.</span><span class="fu">height</span>(cardHeight)<span class="op">;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    })<span class="op">;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sun, 24 May 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-05-24.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>There is no going back</title>
    <link>https://maksar.github.io/posts/WAT/2020-05-20.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - There is no going back</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>There is no going back</h1>
    <article>
  <span class="header">
    May 20, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="or-is-it..">Or is it?..</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> TextsConstants <span class="im">from</span> <span class="st">'../../../../../../core/constants/TextsConstants'</span><span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> GlobalStyles <span class="im">from</span> <span class="st">'../../../../../../core/styles/GlobalStyles'</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> { MARKET_STATUSES } <span class="im">from</span> <span class="st">'../../../../../../core/constants/MarketConstants'</span><span class="op">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 20 May 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-05-20.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>About passwords</title>
    <link>https://maksar.github.io/posts/code/2020-05-15-passwords.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - About passwords</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>About passwords</h1>
    <article>
  <span class="header">
    May 15, 2020 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> 
  </span>
  <section>
    <p>Хранение паролей/токенов любого характера и толка в репозитории – плохая и опасная практика. Несмотря даже на то, что это информация может относиться к изолированному staging или даже локальному окружению. Даже если они “потом будут встроены в итоговый html”. Даже если пароль “явно выглядит как заглушка”. Наличие паролей “от staging-а” может легко привести к компрометации настроек “от prod-а”.</p>
<!--more-->
<p><img src="../../previews/passwords/logo.jpg" class="center" /></p>
<h2 id="как-значения-для-разработки-могут-скомпрометировать-значения-от-prod-а">Как значения “для разработки” могут скомпрометировать значения “от prod-а”?</h2>
<p>Да очень просто – коллега случайно запушит. Так что лучше вообще не показывать такой пример. Не нужно оправдывать свои действия фразами “но ведь эти значения только для локальной разработки”, аудиторам будет все равно при проверке исходников – поставят низкую оценку и будут правы. К тому же, средствам автоматической проверки тоже не объяснишь – они обнаруживаются и “ругаются” вне зависимости от того пароль от staging-а или нет, простой пароль/токен или сложный. Для автоматического сканера что <code>123456</code>, что <code>changeme</code> и даже <code>''</code> – непустое значение. Не стоит игнорировать такой сигнал от анализатора – лучше поступить как он советует и избавиться от хранения таких хардкодов в коде/конфигах.</p>
<p>Вместо этого – хранить настройки окружения на самом окружении (сервере в рамках внутренних переменных или настроек сессии) и/или недоступном для основной проектной команды месте (CI, Wiki, password manager, etc.) Отличной стратегией является хранение названий конфигурационных ключей в <code>.env.example</code> файле в репозитории, но без каких либо значений. Приложение при старте может/должно проверять целостность и полноту конфигурации (значения ключей) и “падать” при обнаружении проблем.</p>
<p>Я не считаю “правильным”, когда из конфигурационного (<code>app.config</code> например) файла убирают только те значения, которые “кажутся” относящимися к секретным – это не решает проблему. Разработчику для нормальной работы нужно все равно иметь их заполненными. И вероятность случайно вкомитить эти значения вместе с другим изменением конфига – весьма высока.</p>
<h2 id="что-делать">Что делать?</h2>
<p>Применять старую проверенную стратегию “разделяй и властвуй”. Необходимо вынести значения, которые нежелательно иметь в основном конфигурационном файле из него в отдельное место. К примеру в .NET для этого предусмотрен специальный механизм. С помощью <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.configuration.configurationbuilder?view=dotnet-plat-ext-3.1&amp;viewFallbackFrom=aspnetcore-2.0">ConfigurationBuilder</a> можно использовать параметры из переменных окружения, либо из внешних файлов, добавляемых к приложению на этапе доставки инструментами Continuous Integration.</p>
<h2 id="а-мы-используем-git-crypt-это-норм">А мы используем git crypt? Это норм?</h2>
<p>Эта мера защитит вас от случая, когда исходники “украли” или кто-то посторонний получил к ним доступ. Но концептуально это проблему не решило. Используя шифрование конфигов вы постулируете – “нам есть что прятать”. Готов спорить, что если используете git crypt – значит и конфиги от production у вас в репозитории хранятся. Это требует доверия ко всем членам команды разработки. Может быть вы, как команда, готовы на это пойти. Однако не думаю, что заказчик (если бы его спросили об этом явно) будет с такой позицией согласен. Как минимум он будет против смены всех кредов после каждой ротации разработчика в его команде.</p>
<h2 id="но-это-было-тут-вкомичено-еще-до-меня-и-лишь-только-поменялотформатировал">Но это было тут вкомичено еще до меня, и лишь только поменял/отформатировал…</h2>
<p>Помните про формулировку из правовых документов – “любое действие или <strong>бездействие</strong> расценивается…” Увидели крамолу – не проходите мимо, оставьте после себя “лучше чем было”.</p>
<h2 id="но-если-в-репозитории-не-будет-значений-то-новому-разработчику-будет-сложнее-завести-систему">Но если в репозитории не будет значений, то новому разработчику будет сложнее “завести” систему</h2>
<p>Противоречие тут только кажущееся, проблема не в том, что новому члену команды будет сложно, а в том, что процесс не понятен. Причем сделать его “понятным” можно даже без подробного README файла с описанием всех конфигурационных опций (это как комментарии в коде, которые быстро устаревают). Представьте, запускаете вы приложение, а оно вам сообщает – не найден такой-то конфигурационный файл. Понятно же ведь что необходимо сделать – создать его. Какой он должен быть? Попробую либо пустой, либо, если замечу рядом с ним .example файл – скопирую из .example файла содержимое. Запускаю еще раз – система все еще отказывается стартовать, сообщая что параметр <code>STRIPE_API_KEY</code> не может быть пустым. Опять – совершенно ясно что делать. Такой подход (когда приложение отказывается стартовать) сэкономит вам часы debug-а в случаях, когда после git pull окажется, что добавилось новое конфигурационное значение и система не может правильно работать, когда оно пустое. Можно, конечно, возразить “вооот, а если бы <code>.env</code> файл был в репозитории, проблемы бы не возникло”. Так-то оно так, только откуда автору знать – планируете ли вы использовать тот же <code>STRIPE_API_KEY</code> или у вас есть свой, а может быть я, для тестирования, использую ключ со staging-а и потом его вкомичу…</p>
<p>Подводя итог – не храните пароли/токены/ключи/сертификаты в репозитории.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 15 May 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2020-05-15-passwords.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>About pull requests</title>
    <link>https://maksar.github.io/posts/code/2020-05-14-pull-requests.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - About pull requests</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>About pull requests</h1>
    <article>
  <span class="header">
    May 14, 2020 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> 
  </span>
  <section>
    <p>Методика разработки через feature branches или pull requests позволяет организовать максимально независимую работу разработчиков – без необходимости частой синхронизации между ними. Большим плюсом этой методики является простота участия всех членов проектной команды в процессе code review, так как каждая новая feature, исправленный дефект, или доставка версии представлены отдельными ветками в репозитории исходного кода. Желательно, чтобы любое вносимое в ПО изменение происходило через создание отдельной ветки и включение ее (после code review) в основной стрим (обычно, ветка master).</p>
<!--more-->
<p>Если на проекте используется trunk-based workflow (при котором разработчики работают с одной и той же веткой), то для организация эффективного code review процесса нетривиальна. Отсутствие запрета на прямое внесение изменений (push) в основные ветки разработки (develop, master) приводит к злоупотреблению “hot-fix”-ами для срочного решения проблем и, следовательно, не позволяет выстроить правильную deploy-rollback стратегию.</p>
<h2 id="стоит-ли-использовать-pull-request-ы-даже-если-работаю-на-проекте-один">Стоит ли использовать pull request-ы даже если “работаю на проекте один”?</h2>
<p>Однозначно, да. Это позволяет:</p>
<ul>
<li>привлекать людей “не с проекта” для code review. Программист понимает – одна голова хорошо, а две головы <del>мутант</del>лучше. Требуйте у своего менеджера напарника для review;</li>
<li>группировать изменения по “фичам” или дефектам. Да, все слышали про ветки, но работать с ними не так удобно как с pull request-ами;</li>
<li>получать преимущества от интеграции с CI сервером, который будет помечать pull request-ы статусом сборки;</li>
<li>даже если кажется, что pull request-ы никто не смотрит, на самом деле это не так, только не надо “мержить сразу после создания” – так иногда делают и это действительно cargo cult.</li>
</ul>
<p>Процесс code review направлен не только на улучшение качества кода проекта, но и на развитие коммуникации внутри команды, повышение технического уровня команды разработки. Если в процессе code review один из членов команды высказал замечание либо задал вопрос – он обязательно должен быть рассмотрен. В противном случае мотивация человека задающего вопросы быстро угаснет и польза от такого code review сойдет на нет. Если по какому-либо замечанию в процессе ревью возник спор/дискуссия – стоит убедиться, что команда пришла к единому конечному мнению.</p>
<h2 id="а-мы-привыкли-обсуждать-замечания-к-коду-устно-нам-так-удобнее.">А мы привыкли обсуждать замечания к коду устно, нам “так удобнее”.</h2>
<p>Отвыкайте пожалуйста… Навыки письменной коммуникации, особенно на английском языке, ничуть не менее важны для разработчика, чем его техническая “крутость”. Только общаясь, преодолевая трудности “как же это ему объяснить без тыкания в код” можно прокачать письменный soft skill. Что касается взгляда со стороны (аудиторы частенько смотрят) – что можно сказать о проекте, где на 1000 pull request-ов было в среднем 0.13 комментариев per pull? Не думаю, что “там идеальный код и комментировать было решительно нечего”.</p>
<p>Важно, чтобы все разработчики из команды принимали участие в процессе code review. Это важно, так как code review предназначен не только для нахождения проблем в коде, но и для повышения квалификации разработчиков, которые принимают в нем участие, для поддержания общей ответственности за код (чтобы каждый разработчик из команды был знаком со всей кодовой базой, а не только со “своим модулем”), для развития внутри командного общения и повышения культуры разработки. Таким образом – мнение каждого члена команды, вне зависимости от его квалификации должно трактоваться с одинаковой важностью.</p>
<p>Применяемое в настоящий момент для всех новых репозиториев правило такое – все члены проектной группы, имеющие доступ в bitbucket, добавляются в default reviewer-ы. Они будут автоматически добавлены в pull при создании, без необходимости их выбирать вручную. Для merge-а необходимо наличие половины approve-ов (если команда состоит из 6 человек, то потребуется 3 апрува) и ни одного needs work-а. Если на вашем проекте не так – обратитесь к техническому координатору, ко мне, да хоть к CTO – мы обязательно поможем.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 14 May 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2020-05-14-pull-requests.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Size does matter</title>
    <link>https://maksar.github.io/posts/code/2020-05-11-size-matters.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Size does matter</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Size does matter</h1>
    <article>
  <span class="header">
    May 11, 2020 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/haskell.html">haskell</a> #<a href="../../tags/ruby.html">ruby</a> #<a href="../../tags/kotlin.html">kotlin</a> #<a href="../../tags/docker.html">docker</a>
  </span>
  <section>
    <p>Возможно я в этом не одинок, но меня сильно разочаровывают размеры современных приложений. Сейчас считается нормой создавать сайты, скачивающие десятки мегабайт при первой загрузке, иметь приложения для телефонов размером в несколько сотен мегабайт, базовые образы <code>docker</code> контейнеров занимают гигабайты… Ситуация парадоксальная – “дешевле” не заботиться о размере, так как усилия, потраченные в этом направлении будут стоить компании-разработчику дороже.</p>
<!--more-->
<p><img src="../../previews/size-matters/logo.jpg" class="center" /></p>
<p>Возможно это действительно так, проверить достаточно сложно. А может быть все как раз наоборот, просто не представляется возможным точно подсчитать сколько на <strong>самом деле</strong> средств тратится на трафик и “ожидания” с “простоями”. А уж как большой размер скачиваемых артефактов влияет на customer и/или developer satisfaction и говорить нечего. “Современный подход” во мне пробуждает неоднозначные чувства и заставляет, в меру сил, <em>бороться</em> с ситуацией.</p>
<h2 id="минутка-истории">Минутка истории</h2>
<p>Компилируемые в бинарный код языки существовали еще до <a href="https://en.wikipedia.org/wiki/Unix-время">начала времен</a>. В эпоху контейнеризации преимущества “бинарников” раскрылись с новой, неожиданной стороны. Для чего вообще нужна контейнеризация? Изоляция, воспроизводимость, удобство развертывания и безопасность. Программа, представляющая собой один единственный исполняемый файл – что может быть удобнее для развертывания? Изоляцию, в какой-то мере, может предоставить операционная система. А воспроизводимость (с точки зрения сборки) и вовсе решается без использования контейнеров. Что с безопасностью? Необходимо отметить, тут есть “проблемы”. Возможно вы не застали времена <a href="https://en.wikipedia.org/wiki/CGI">CGI</a> скриптов, но в начале развития интернета, серверные приложения были обычными бинарниками, которые запускались web серверами через CGI интерфейс. И если в такой программе была ошибка/уязвимость – атакующий мог получить доступ ко всему серверу – ведь бинарник исполнялся, как правило, от пользователя под которым работал web сервер. А с учетом того, что сервера раньше виртуальными были редко – на одном и том же хосте располагались данные (почта, файлы и т.д.) многих пользователей – компрометации подвергалось все.</p>
<p>Сейчас CGI используется крайне редко, все чаще программы сами предоставляют <code>http</code> интерфейс для взаимодействия с собой, а web сервер выступает в роли <code>proxy</code>. Да и компилируемые в бинарный код языки для web используются все реже. Засилье виртуальных машин да интерпретаторов. Почему это не очень хорошо с точки зрения безопасности? Исполняемый файл можно назначить “точкой входа” <code>docker</code> контейнера, убрав из файловой системы все лишнее (кроме необходимых для работы приложения библиотек). В этом случае, даже если злоумышленник и обнаружит <a href="https://www.exploit-db.com/docs/english/42593-command-injection---shell-injection.pdf">shell injection</a> в программе, ничего страшного не случится – никакого командного интерпретатора внутри контейнера нет, “внедрять” вредоносный код попросту некуда.</p>
<h2 id="ruby">Ruby</h2>
<p>Если задуматься, такой трюк можно провернуть не только с системами, представляющими собой бинарный файл, но и со скриптовыми языками. Это несколько сложнее, но все-же возможно. Давайте попробуем разобраться на примере приложения, написанного на <code>ruby</code>.</p>
<p>В начале все более-менее стандартно – берем за основу официальный образ для <code>ruby</code> и устанавливаем зависимости из <code>Gemfile.lock</code> при помощи <code>bundler</code>-а. Библиотеки в <code>ruby</code> поставляются в виде исходников, складываем их в <code>/app/vendor/bundle</code> папку, рядом с самим приложением.</p>
<pre class="docker"><code>FROM ruby:2.7.0 as ruby

WORKDIR /app
COPY Gemfile* /app/
RUN bundle config --local deployment 'true'
RUN bundle config --local frozen 'true'
RUN bundle config --local no-cache 'true'
RUN bundle config --local clean 'true'
RUN bundle config --local without 'development'
RUN bundle config --local path 'vendor/bundle'
RUN bundle install
RUN mkdir .bundle &amp;&amp; cp /usr/local/bundle/config .bundle/config
RUN rm -rf vendor/bundle/ruby/2.7.0/cache vendor/bundle/ruby/2.7.0/bin</code></pre>
<p>Далее, в этом же много-<code>stage</code>-евом <code>Dockerfile</code> берем за основу <code>distroless</code> образ (без командного интерпретатора) и копируем из предыдущего шага библиотеки, необходимые для работы интерпретатора <code>ruby</code>. Как понять какие именно библиотеки нужны? Спрашивать у <code>ldd</code> (или <code>otool -L</code> в случае <code>llvm</code>) особого смысла нет – интерпретатор все равно кое-что загружает динамически. При помощи серии экспериментов, удается выявить, что для работы нашей программы, достаточно <code>libz</code>, <code>libyaml</code> и <code>libgmp</code>. Копируем библиотеки и сам интерпретатор в <code>distroless</code> образ.</p>
<pre class="docker"><code>FROM gcr.io/distroless/base-debian10 as distroless

COPY --from=ruby /lib/x86_64-linux-gnu/libz.so.* /lib/x86_64-linux-gnu/
COPY --from=ruby /usr/lib/x86_64-linux-gnu/libyaml* /usr/lib/x86_64-linux-gnu/
COPY --from=ruby /usr/lib/x86_64-linux-gnu/libgmp* /usr/lib/x86_64-linux-gnu/
COPY --from=ruby /usr/local/lib /usr/local/lib
COPY --from=ruby /usr/local/bin/ruby /usr/local/bin/ruby
COPY --from=ruby /usr/local/bin/bundle /usr/local/bin/bundle</code></pre>
<p>Цель достигнута, образ не содержит командного интерпретатора и другой шелухи (<code>man</code> страниц, файлов настроек операционной системы и т.д.). Но мы на этом на остановимся и следующим шагом соберем образ буквально <code>FROM scratch</code>. <code>scratch</code> – это образ “без ничего”, он пуст. Так что мы смеем надеяться, что ничего лишнего (не жизненно необходимого для работы приложения) в итоговом образе не будет. Кроме самого приложения (набора <code>*.rb</code> файлов) понадобиться еще файл с корневыми сертификатами, без которого не обойтись при общении с внешними сервисами по <code>https</code>.</p>
<pre class="docker"><code>FROM scratch

COPY --from=ruby /app /app

COPY --from=distroless /lib /lib
COPY --from=distroless /lib64 /lib64
COPY --from=distroless /usr/local /usr/local
COPY --from=distroless /usr/lib/ssl /usr/lib/ssl
COPY --from=distroless /usr/lib/x86_64-linux-gnu/lib* /usr/lib/x86_64-linux-gnu/
COPY --from=distroless /etc/ssl /etc/ssl
COPY --from=distroless /home /home

WORKDIR /app
COPY dialogs /app/dialogs/
COPY services /app/services/
COPY *.rb /app/

ENV SSL_CERT_FILE /etc/ssl/certs/ca-certificates.crt
ENV RUBYOPT -W:no-deprecated -W:no-experimental

CMD [&quot;bundle&quot;, &quot;exec&quot;, &quot;ruby&quot;, &quot;server.rb&quot;]</code></pre>
<p>Итоговый размер образа – <strong>61 мегабайт</strong>. Уверен, можно было бы еще десяток сбросить при помощи утилиты <a href="https://github.com/wagoodman/dive">dive</a> (крайне рекомендую к использованию), удалив неиспользуемые части стандартной библиотеки языка и зависимостей <code>ruby</code> программы. Но вот эту часть, уже можно считать экономически нецелесообразной…</p>
<p>Если бы мы ставили перед собой цель максимально уменьшить размер приложения, то, скорее всего, воспользовались бы <a href="https://alpinelinux.org">alpine linux</a> образом, который славится малым начальным размером а так же схлопнули бы все слои <code>docker</code> образа в один (чтобы избавиться от удаленных файлов в нижних слоях). В этом случае, размер получившего образа мог быть даже меньше, однако преимуществ безопасности мы бы не достигли.</p>
<p>Кроме преимуществ, у такого подхода есть и недостатки. К примеру, больше нельзя подключиться к работающему контейнеру и “посмотреть” логи, их просто нечем выводить, да и некуда – ни <code>bash</code> ни <code>cat</code> в образе нет. Вот он, микро-сервис во всей красе – пишет логи в <code>stdout</code>.</p>
<h2 id="kotlin">Kotlin</h2>
<p>Буквально на днях познакомился с <a href="https://www.graalvm.org">GraalVM</a> и он меня покорил. Одной из функций <code>GraalVM</code> является сборка <code>native</code> бинарников из <code>jar</code> файлов. Да, именно так: вы можете взять свое приложение, собрать его в обычный <code>fat jar</code> (с зависимостями), а затем “скомпилировать” в исполняемый бинарь.</p>
<p>У меня есть маленькая <a href="../../posts/projects/2020-11-06-trimmer.html">поделка</a> для “причесывания” названий ресурсных и проектных карт. Дело в том. что в процессе создания, иногда в начале или в конце <code>title</code>-а оставляют пробелы, что мешает потом эффективно работать с такими картами. Очень давно я написал программу, чтобы автоматизировать процесс <code>trim</code>-а. Целью было, конечно, не это, а исследование возможностей библиотеки <code>("com.github.rcarz", "jira-client", "master")</code> для доступа к <code>JIRA</code> через <em>приятный</em> <code>DSL</code>.</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">RESOURCE_CARDS</span> <span class="op">=</span> <span class="st">&quot;RESCARD&quot;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">PROJECT_CARDS</span> <span class="op">=</span> <span class="st">&quot;PROJCARD&quot;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>const <span class="kw">val</span> <span class="va">PAGINATION_SIZE</span> <span class="op">=</span> <span class="dv">999</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">dotenv</span> <span class="op">=</span> DotEnv<span class="op">.</span>load<span class="op">()</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">jira</span> <span class="op">=</span> JiraClient<span class="op">(</span>dotenv<span class="op">[</span><span class="st">&quot;JIRA_URL&quot;</span><span class="op">],</span> BasicCredentials<span class="op">(</span>dotenv<span class="op">[</span><span class="st">&quot;JIRA_USERNAME&quot;</span><span class="op">],</span> dotenv<span class="op">[</span><span class="st">&quot;JIRA_PASSWORD&quot;</span><span class="op">]))</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">makeQuery</span><span class="op">(</span><span class="va">block</span><span class="op">:</span> <span class="dt">JqlQueryBuilder</span>.(<span class="op">)</span> -&gt; <span class="fu">Unit</span>) <span class="op">:</span> <span class="dt">String</span> <span class="op">=</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>        JqlStringSupportImpl<span class="op">(</span>DefaultJqlQueryParser<span class="op">()).</span>generateJqlString<span class="op">(</span>newBuilder<span class="op">().</span>also <span class="op">{</span> block<span class="op">(</span>it<span class="op">)</span> <span class="op">}.</span>buildQuery<span class="op">())</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">trim</span><span class="op">(</span><span class="va">project</span> <span class="op">:</span> <span class="dt">String</span><span class="op">)</span> <span class="op">{</span></span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>    println<span class="op">(</span><span class="st">&quot;Searching for issues in </span><span class="ss">${</span>project<span class="ss">}</span><span class="st">.&quot;</span><span class="op">)</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>    jira<span class="op">.</span>searchIssues<span class="op">(</span>makeQuery <span class="op">{</span></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>        <span class="kw">where</span><span class="op">().</span>project<span class="op">(</span>project<span class="op">)</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>        orderBy<span class="op">().</span>createdDate<span class="op">(</span>ASC<span class="op">)</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>    <span class="op">},</span> SUMMARY<span class="op">,</span> PAGINATION_SIZE<span class="op">).</span>iterator<span class="op">().</span>asSequence<span class="op">().</span>toList<span class="op">().</span>filter <span class="op">{</span></span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>        it<span class="op">.</span>summary<span class="op">.</span>trim<span class="op">()</span> <span class="op">!=</span> it<span class="op">.</span>summary</span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">}.</span>also <span class="op">{</span></span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>it<span class="op">.</span>count<span class="op">()</span> <span class="op">==</span> <span class="dv">0</span><span class="op">)</span> <span class="op">{</span></span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>            println<span class="op">(</span><span class="st">&quot;No issues in </span><span class="ss">${</span>project<span class="ss">}</span><span class="st">, that needs to be trimmed was found.&quot;</span><span class="op">)</span></span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span>
<span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a>            println<span class="op">(</span><span class="st">&quot;Found </span><span class="ss">${</span>it<span class="op">.</span>count<span class="op">()</span><span class="ss">}</span><span class="st"> issues in </span><span class="ss">${</span>project<span class="ss">}</span><span class="st">, that needs to be trimmed.&quot;</span><span class="op">)</span></span>
<span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">}.</span>forEach <span class="op">{</span></span>
<span id="cb4-26"><a href="#cb4-26" aria-hidden="true" tabindex="-1"></a>        println<span class="op">(</span><span class="st">&quot;Trimming </span><span class="ss">${</span>it<span class="op">.</span>key<span class="ss">}</span><span class="st"> with summary '</span><span class="ss">${</span>it<span class="op">.</span>summary<span class="ss">}</span><span class="st">'.&quot;</span><span class="op">)</span></span>
<span id="cb4-27"><a href="#cb4-27" aria-hidden="true" tabindex="-1"></a>        it<span class="op">.</span>update<span class="op">().</span>field<span class="op">(</span>SUMMARY<span class="op">,</span> it<span class="op">.</span>summary<span class="op">.</span>trim<span class="op">()).</span>execute<span class="op">()</span></span>
<span id="cb4-28"><a href="#cb4-28" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb4-29"><a href="#cb4-29" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb4-30"><a href="#cb4-30" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-31"><a href="#cb4-31" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">main</span><span class="op">(</span><span class="va">args</span><span class="op">:</span> <span class="dt">Array</span>&lt;<span class="va">String</span>&gt;<span class="op">)</span> <span class="op">{</span></span>
<span id="cb4-32"><a href="#cb4-32" aria-hidden="true" tabindex="-1"></a>    MockComponentWorker<span class="op">().</span>init<span class="op">()</span></span>
<span id="cb4-33"><a href="#cb4-33" aria-hidden="true" tabindex="-1"></a>    listOf<span class="op">(</span>RESOURCE_CARDS<span class="op">,</span> PROJECT_CARDS<span class="op">).</span>forEach<span class="op">(::</span>trim<span class="op">)</span></span>
<span id="cb4-34"><a href="#cb4-34" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>Для построения <code>JQL</code> запроса (не строкой, а при помощи <code>DSL</code>) к <code>JIRA</code> я использовал библиотеки самого <code>Atlassian</code>-а (библиотека для тестов необходима для инициализации <code>core</code>, в тестовом режиме, в противном случае <code>core</code> остается очень недоволен тем, что запущен вне контекста <code>JIRA</code>):</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>implementation<span class="op">(</span><span class="st">&quot;com.atlassian.jira&quot;</span><span class="op">,</span> <span class="st">&quot;jira-core&quot;</span><span class="op">,</span> <span class="st">&quot;8.8.1&quot;</span><span class="op">)</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>implementation<span class="op">(</span><span class="st">&quot;com.atlassian.jira&quot;</span><span class="op">,</span> <span class="st">&quot;jira-tests&quot;</span><span class="op">,</span> <span class="st">&quot;8.8.1&quot;</span><span class="op">)</span></span></code></pre></div>
<p>Собрав <code>fat jar</code> с этими и еще некоторыми прямыми (сам <code>kotlin</code>, библиотека для работы с переменными окружения, etc.) и косвенными зависимостями (только представьте сколько зависимостей за собой “тянет” <code>jira-core</code>) получаем <code>trimmer-1.0-all.jar</code> размером в <strong>112 мегабайт</strong> – такова цена за <code>code-reuse</code>. Настало время для <code>GraalVM</code> – попробуем преобразовать <code>jar</code> файл в обычный исполняемый файл, в надежде избавиться от главной зависимости – виртуальной <code>java</code> машины.</p>
<pre class="console"><code>$ native-image -cp ./build/libs/trimmer-1.0-all.jar
               -H:Name=trimer-exe
               -H:Class=TrimmerKt
               -H:+ReportUnsupportedElementsAtRuntime
               --allow-incomplete-classpath</code></pre>
<p>Попытка “в лоб” заканчивается неудачей, логи полны сообщений вида:</p>
<pre class="console"><code>Error: Classes that should be initialized at run time got initialized during image building:
org.apache.log4j.spi.LoggingEvent was unintentionally initialized at build time.
org.apache.http.HttpEntity was unintentionally initialized at build time.
...
Error: Image build request failed with exit status 1</code></pre>
<p>Не отчаиваемся и просим <code>GraalVM</code> пытаться инициализировать это все на этапе сборки образа:</p>
<pre class="console"><code>$ native-image --no-server
               --enable-https
               --allow-incomplete-classpath
               -cp ./build/libs/trimmer-1.0-all.jar
               -H:Name=trimer-exe
               -H:Class=TrimmerKt
               --initialize-at-build-time=org.apache.http,org.slf4j,org.apache.log4j,org.apache.commons.codec,org.apache.commons.logging</code></pre>
<p>Успех, на выходе имеем <code>trimer-exe</code> файл, размером всего в <strong>6.5 мегабайт</strong>. Упакуем его дополнительно замечательной утилитой <a href="https://upx.github.io">upx</a>, которая знакома всем еще со времен <code>DOS</code> и недостатка места на диске. Результат изумителен – <strong>1.8 мегабайт</strong>! Да только вот нас немного обманули… <code>GraalVM</code>, по умолчанию, строит образы, которые хоть и являются исполняемыми, но они не в состоянии работать без установленной на компьютере <code>java</code> виртуальной машины. При попытке построить “настоящий” независимый образ (опция <code>--no-fallback</code>), сталкиваемся с рядом сложностей.</p>
<p>Во-первых – <code>Warning: Aborting stand-alone image build. Detected a FileDescriptor in the image heap</code> появляющийся из-за статической инициализации поля <code>org.apache.log4j.LogManager.repositorySelector</code>. Дело в том, что в глубинах зависимостей нашего приложения есть части, инициализирующиеся на этапе загрузки классов – а именно – это код в блоках <code>static</code> и статические члены классов в <code>java</code>. В основном – это <code>logging framework</code>-и (их по дереву зависимостей наберется несколько штук), которые требуют указания <code>class</code>-а для создания logger объекта. Они обладают возможностью ленивой инициализации при первом использовании, при помощи <code>reflection</code> загружая подходящую реализацию, от чего <code>GraalVM</code> становится дурно (действительно, сохранить открытый <code>FileDescriptor</code> в дампе памяти – невыполнимая задача), он отчаянно требует помощи. Попробуем заглушить инициализацию <code>log4j</code>, мы ведь им и не пользуемся даже: добавляем в начале <code>main</code> строку <code>LogManager.setRepositorySelector(DefaultRepositorySelector(NOPLoggerRepository()), null)</code>, а в момент сборки образа добавляем опцию <code>-Dlog4j.defaultInitOverride=true</code>. Как до этого “дойти”? Исключительно чтением исходных текстов библиотеки. Сложно недооценить количество знаний и понимания внутреннего устройства систем, получаемых таким образом – не бойтесь заглядывать под капот используемым библиотекам!</p>
<p>К слову, еще до использования <code>GraalVM</code> я замечал, что при запуске приложения создается папка <code>target</code> (хоть я и использую <code>gradle</code>, который все <em>кладет</em> в папку <code>build</code>) с пустым файлом <code>unit-tests.log</code> в ней. Подозрения пали на <code>com.atlassian.jira:jira-tests</code> зависимость, в недрах которой обнаружился <code>log4j.properties</code> файл с незатейливым содержимым:</p>
<pre class="properties"><code>log4j.appender.console=org.apache.log4j.FileAppender
log4j.appender.console.File=target/unit-tests.log</code></pre>
<p>Разработчики из <code>Atlassian</code> подумали, что это отличная идея – перенаправить все что должно выводиться на консоль – в файл. Хорошая это идея или кошмарная – каждый решает за себя, но вот делать это “втихую”, просто из-за наличия зависимости – верх эгоизма.</p>
<p>За одно отключим еще один <code>logging framework</code> – <code>slf4j</code>. Для этого добавим в начало <code>main</code> <del>грязный хак</del>строку:</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a>LoggerFactory<span class="op">::</span><span class="kw">class</span>.java.getDeclaredField<span class="op">(</span>&quot;<span class="va">INITIALIZATION_STATE</span>&quot;<span class="op">)</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>  .also <span class="op">{</span> it<span class="op">.</span>isAccessible <span class="op">=</span> <span class="kw">true</span> <span class="op">}</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>  <span class="op">.</span><span class="kw">set</span><span class="op">(</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    LoggerFactory<span class="op">::</span><span class="kw">class</span>, LoggerFactory<span class="op">:</span>:<span class="kw">class</span>.java.getDeclaredField<span class="op">(</span>&quot;<span class="va">NOP_FALLBACK_INITIALIZATION</span>&quot;<span class="op">)</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>      .also <span class="op">{</span> it<span class="op">.</span>isAccessible <span class="op">=</span> <span class="kw">true</span> <span class="op">}</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>      <span class="op">.</span><span class="kw">get</span><span class="op">(</span>LoggerFactory<span class="op">::</span><span class="kw">class</span>)</span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>    )</span></code></pre></div>
<p>Она заставит <code>slf4j</code> пропустить инициализацию и не заниматься <code>reflection</code>-ом во время старта приложения. А статическую инициализацию одного из наших полей, сделаем отложенной (чтобы “трюк” из <code>main</code> успел выполниться вовремя):</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="kw">val</span> <span class="va">jira</span> <span class="op">=</span> lazy <span class="op">{</span> JiraClient<span class="op">(</span>dotenv<span class="op">[</span><span class="st">&quot;JIRA_URL&quot;</span><span class="op">],</span> BasicCredentials<span class="op">(</span>dotenv<span class="op">[</span><span class="st">&quot;JIRA_USERNAME&quot;</span><span class="op">],</span> dotenv<span class="op">[</span><span class="st">&quot;JIRA_PASSWORD&quot;</span><span class="op">]))</span> <span class="op">}</span></span></code></pre></div>
<p>Кстати, именно из-за статической инициализации приложения на <code>java</code> так медленно стартуют, а при старте иногда можно видеть в консоли строки:</p>
<pre class="console"><code>log4j:WARN No appenders could be found for logger (org.apache.http.impl.conn.PoolingClientConnectionManager).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.</code></pre>
<p><code>GraalVM</code> как раз и славится тем, что позволяет сократить время запуска приложений, так как вся статическая инициализация происходит на этапе “сборки”, в готовый исполняемый файл, вместе со встраиваемой виртуальной машиной, попадают “замороженные” версии классов, с уже выполненным шагом статической инициализации.</p>
<pre class="console"><code>$ native-image --no-fallback
               --allow-incomplete-classpath
               --enable-https
               --no-server
               -cp ./build/libs/trimmer-1.0-all.jar
               -H:Name=trimer-exe
               -H:Class=TrimmerKt
               --initialize-at-build-time=org.apache.http,org.apache.log4j,org.slf4j,org.apache.commons.logging,org.apache.commons.collections.map,net.sf.json,net.sf.ezmorph,org.apache.oro.text.regex,org.apache.commons.codec
               -Dlog4j.defaultInitOverride=true</code></pre>
<p>Следующая беда “вылазит” уже не на этапе сборки, а после запуска собранного приложения:</p>
<pre class="console"><code>Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: java.lang.Class
  at net.sf.json.AbstractJSON.class$(AbstractJSON.java:53)
  ...
  at net.rcarz.jiraclient.RestClient.request(RestClient.java:165)
  ...</code></pre>
<p>Общение с <code>JIRA</code> происходит при помощи <code>JSON</code>-а, а его разбор в <code>java</code> большинством библиотек происходит через <code>reflection</code>, возможности которого в <code>GraalVM</code> несколько ограничены. <code>GraalVM</code> понимает, что необходимо “встроить” нужные вызовы к <code>reflection</code> <code>API</code> в итоговый образ, если они происходят на этапе статической инициализации, но вот к вызовам <code>reflection</code> во время исполнения его “никто не готовил”. Создадим файл <code>config.json</code> с таким содержимым:</p>
<div class="sourceCode" id="cb15"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a><span class="ot">[</span></span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a>  <span class="fu">{</span></span>
<span id="cb15-3"><a href="#cb15-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">&quot;name&quot;</span> <span class="fu">:</span> <span class="st">&quot;java.lang.String&quot;</span></span>
<span id="cb15-4"><a href="#cb15-4" aria-hidden="true" tabindex="-1"></a>  <span class="fu">}</span><span class="ot">,</span></span>
<span id="cb15-5"><a href="#cb15-5" aria-hidden="true" tabindex="-1"></a>  <span class="fu">{</span></span>
<span id="cb15-6"><a href="#cb15-6" aria-hidden="true" tabindex="-1"></a>    <span class="dt">&quot;name&quot;</span> <span class="fu">:</span> <span class="st">&quot;java.lang.Class&quot;</span></span>
<span id="cb15-7"><a href="#cb15-7" aria-hidden="true" tabindex="-1"></a>  <span class="fu">}</span></span>
<span id="cb15-8"><a href="#cb15-8" aria-hidden="true" tabindex="-1"></a><span class="ot">]</span></span></code></pre></div>
<p>Заставим <code>GraalVM</code> обратить на него внимание:</p>
<pre class="console"><code>$ native-image --no-fallback
               --allow-incomplete-classpath
               --enable-https
               --no-server
               -cp ./build/libs/trimmer-1.0-all.jar
               -H:Name=trimer-exe
               -H:Class=TrimmerKt
               --initialize-at-build-time=org.apache.http,org.apache.log4j,org.slf4j,org.apache.commons.logging,org.apache.commons.collections.map,net.sf.json,net.sf.ezmorph,org.apache.oro.text.regex,org.apache.commons.codec
               -Dlog4j.defaultInitOverride=true
               -H:ReflectionConfigurationFiles=./config.json</code></pre>
<p>В итоге, собранная программа работает как положено. Итоговый размер – <strong>28 мегабайт</strong>, а будучи упакованным при помощи <code>upx</code> – <strong>7.1 мегабайт</strong>. Не удивительно, ведь <code>GraalVM</code> пришлось включить в исполняемый файл <code>Substrate VM</code> виртуальную машину для того, чтобы бинарный файл стал независим от системного <code>JRE</code>. Обещания, которые давал <code>GraalVM</code> он выполнил – один исполняемый файл, независимость от системного <code>JRE</code>. К слову, время старта приложения значительно сократилось – разница заметна даже невооруженным взглядом:</p>
<pre class="console"><code>$ time java -jar build/libs/trimmer-1.0-all.jar --dry-run
0.30s user 0.05s system 181% cpu 0.195 total
$ time ./trimer-exe --dry-run
0.00s user 0.00s system 70% cpu 0.010 total</code></pre>
<h2 id="haskell">Haskell</h2>
<p>Напоследок, попробуем получить преимущества от статической линковки программы на <code>Haskell</code>, бота <a href="../../posts/projects/2020-02-07-ldap-bot.html">Group Manager</a>. Сборка программ на <code>Haskell</code> внутри <code>docker</code>-а происходит примерно так же как и на <code>golang</code>. В первом <code>stage</code>-е устанавливаются все необходимые зависимости, собирается бинарный исполняемый файл. Затем он из этого <code>stage</code>-а копируется в “чистовой” контейнер, не содержащий компилятора и других <code>development</code> зависимостей.</p>
<p>Самая первая версия бота так и собиралась, итоговый бинарный файл имел размер <strong>26 мегабайт</strong>, а <code>docker</code> образ (на основе того же <code>distroless</code>) – <strong>46 мегабайт</strong>.</p>
<pre class="docker"><code>FROM haskell:8.6.5 as haskell

RUN mkdir /app
WORKDIR /app

ADD stack.yaml .
ADD stack.yaml.lock .
ADD package.yaml .

RUN mkdir src
RUN mkdir app
RUN mkdir test

RUN stack setup
RUN stack build || true

ADD . .

RUN stack install

FROM gcr.io/distroless/base
COPY --from=haskell /lib/x86_64-linux-gnu/libz* /lib/x86_64-linux-gnu/
COPY --from=haskell /usr/lib/x86_64-linux-gnu/libgmp* /usr/lib/x86_64-linux-gnu/

COPY --from=haskell /root/.local/bin/ldabot-exe /app

ENTRYPOINT [&quot;/app&quot;]</code></pre>
<p>В принципе, не так и плохо, но можно лучше! Если добавить опции для статической сборки и использовать <code>scratch</code> в качестве базового образа (никакие библиотеки ведь теперь не нужны), получается исполняемый файл размером <strong>28 мегабайт</strong> и такого же размера <code>docker</code> образ (состоит он, по сути, из одного единственного файла).</p>
<pre class="docker"><code>FROM haskell:8.6.5 as haskell

RUN mkdir /app
WORKDIR /app

ADD stack.yaml .
ADD stack.yaml.lock .
ADD package.yaml .

RUN mkdir src
RUN mkdir app
RUN mkdir test

RUN stack setup
RUN stack build || true

ADD . .

RUN sed -i &quot;s/    ghc-options:/    cc-options: -static\n    ld-options: -static -pthread\n    ghc-options:\n    - -O2\n    - -static/g&quot; package.yaml

RUN stack install --executable-stripping
RUN strip /root/.local/bin/ldabot-exe

FROM scratch

COPY --from=haskell /root/.local/bin/ldabot-exe /app

ENTRYPOINT [&quot;/app&quot;]</code></pre>
<p>Стоит ли останавливаться на достигнутом? Конечно же нет! Существует такая штука как <code>musl</code> – альтернативная реализация <code>libc</code> библиотеки, которая славится малым размером (кроме других своих достоинств). Именно благодаря ей <code>alpine linux</code> имеет такой скромный размер. Мир полон добрых людей, существуют сборка компилятора <code>GHC 8.6.5</code> “под” <code>musl</code> – <code>utdemir/ghc-musl:v4-libgmp-ghc865</code>, ей мы и воспользуемся.</p>
<pre class="docker"><code>FROM utdemir/ghc-musl:v4-libgmp-ghc865 as haskell

RUN mkdir /app
WORKDIR /app

RUN cabal update
ADD ldabot.cabal .
RUN cabal build || true

ADD . .
RUN cabal new-install
RUN strip --strip-all /root/.cabal/bin/ldabot-prod

FROM alpine as upx

RUN apk add -u upx

COPY --from=haskell /root/.cabal/bin/ldabot-prod /app
RUN upx --best /app

FROM scratch

COPY --from=gcr.io/distroless/base /etc/ssl /etc/ssl
COPY --from=upx /app /app

ENTRYPOINT [&quot;/app&quot;]</code></pre>
<p>Благодаря <code>musl</code> (и, конечно, <code>upx</code>) удалось добиться бинарника размером <strong>5.9 мегабайт</strong>. <code>docker</code> образ, при этом, стал чуть больше – <strong>6.1 мегабайт</strong>, так как дополнительно пришлось копировать <code>SSL</code> сертификаты для работы (исходный код к этому времени стал обращаться к внешним сервисам по <code>https</code>).</p>
<p>Текущая версия бота собирается чуть иначе. Причина этому – использование более новой версии компилятора <code>GHC 8.8.3</code>. Того требует одна из зависимостей <code>polysemy</code> – is a library for writing high-power, low-boilerplate, zero-cost, domain specific languages, о которой я постараюсь вскоре рассказать. Для <code>GHC 8.8.3</code>, на момент создания бота, поддержки <code>musl</code> еще “на завезли”. Сборка работает при помощи <code>stack</code> (это как <code>gradle</code> для <code>java</code>), который “из коробки” умеет исполнять команды сборки внутри контейнера. Необходимо только указать базовый образ и запустить сборку при помощи команды <code>stack build --docker</code></p>
<div class="sourceCode" id="cb21"><pre class="sourceCode yaml"><code class="sourceCode yaml"><span id="cb21-1"><a href="#cb21-1" aria-hidden="true" tabindex="-1"></a><span class="fu">docker</span><span class="kw">:</span></span>
<span id="cb21-2"><a href="#cb21-2" aria-hidden="true" tabindex="-1"></a><span class="at">  </span><span class="fu">image</span><span class="kw">:</span><span class="at"> </span><span class="st">&quot;fpco/stack-build-small:latest&quot;</span></span></code></pre></div>
<p><code>Dockerfile</code> при этом выглядит необычно – внутри не происходит никакой сборки, только сжатие <code>upx</code>-ом и копирование библиотек.</p>
<pre class="docker"><code>FROM alpine as upx

COPY .stack-work/docker/_home/.local/bin/ldabot-prod /app
RUN apk add -u upx
RUN upx --best --ultra-brute /app

FROM scratch

COPY --from=gcr.io/distroless/base /etc/ssl /etc/ssl
COPY --from=upx /app /app
COPY --from=fpco/stack-build:lts-14.25 /lib/x86_64-linux-gnu/ld-linux* /lib/x86_64-linux-gnu/libc.* /lib/x86_64-linux-gnu/libnss_dns.* /lib/x86_64-linux-gnu/libresolv.* /lib/

ENTRYPOINT [&quot;/app&quot;]</code></pre>
<p>Постойте, какие библиотеки, речь же шла о статической линковке… Дело в том, что <code>libc</code>, в отличие от <code>musl</code> не может быть полностью “влинкован” в приложение. Причин несколько, но для обывателя их можно сформулировать как “так получилось”. Обратите внимание на то, какие именно библиотеки мы копируем – <code>libnss_dns</code> и <code>libresolv</code> (ну и еще <code>ld-linux</code> для возможности динамической загрузки последних). Это библиотеки для работы с <code>DNS</code>, а инфраструктура <a href="https://en.wikipedia.org/wiki/Name_Service_Switch">NSS</a> предоставляет много backend-ов для работы с <code>DNS</code> (вплоть до чтения из файла). Так как нет возможности на этапе сборки указать какой именно backend использовать, <code>libc</code> всегда загружает их динамически, заставляя “тянуть” еще и себя, кроме необходимых <code>NSS</code> плагинов. С таким положением дел все до сих пор мирятся (убеждая окружающих, что статическая линковка “не нужна”, ведь все равно придется “тянуть” с собой <code>libc</code>), периодически “сбегая” в лагерь <code>musl</code>, если нужна “действительно” статическая линковка.</p>
<p>В итоге, вышел компромиссный вариант (из-за невозможности использовать <code>musl</code>) – статическая линковка (размер исполняемого файла <strong>4.6 мегатайта</strong>), вместе с <code>libc</code> и библиотеками для <code>DNS</code>, сделали размер образа не таким большим – всего <strong>7.2 мегабайта</strong>. Цель по уменьшению размера итогово образа и обеспечению дополнительной безопасности можно считать достигнутой. Особенно греет душу мысль о том, что бот в состоянии покоя занимает в оперативной памяти всего <strong>812 килобайт</strong>!</p>
<pre class="console"><code>Cmp   Size  Command
4.6 MB  ├── app
246 kB  ├── etc
246 kB  │   └── ssl
235 kB  │       ├── certs
235 kB  │       │   └── ca-certificates.crt
 11 kB  │       └── openssl.cnf
2.3 MB  └── lib
171 kB      ├── ld-linux-x86-64.so.2
2.0 MB      ├── libc.so.6
 27 kB      ├── libnss_dns.so.2
101 kB      └── libresolv.so.2

Total Image size: 7.2 MB
Potential wasted space: 0 B
Image efficiency score: 100 %</code></pre>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 11 May 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2020-05-11-size-matters.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Not all errors are equal</title>
    <link>https://maksar.github.io/posts/WAT/2020-04-23.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Not all errors are equal</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Not all errors are equal</h1>
    <article>
  <span class="header">
    April 23, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="some-are-more-equal-then-others">Some are more equal then others</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="cf">catch</span> <span class="op">(</span><span class="bu">Exception</span> e<span class="op">)</span> <span class="op">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Throwable</span> cause <span class="op">=</span> e<span class="op">.</span><span class="fu">getCause</span><span class="op">();</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>cause <span class="kw">instanceof</span> <span class="bu">Exception</span><span class="op">)</span> <span class="op">{</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        logger<span class="op">.</span><span class="fu">warn</span><span class="op">(</span><span class="st">&quot;problem with adding {} {}&quot;</span><span class="op">,</span> fbId<span class="op">,</span> e<span class="op">.</span><span class="fu">getMessage</span><span class="op">());</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        logger<span class="op">.</span><span class="fu">error</span><span class="op">(</span><span class="st">&quot;problem with adding {} {}&quot;</span><span class="op">,</span> fbId<span class="op">,</span> e<span class="op">.</span><span class="fu">getMessage</span><span class="op">());</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 23 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-04-23.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>The shortest anecdote about Spring</title>
    <link>https://maksar.github.io/posts/WAT/2020-03-25.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - The shortest anecdote about Spring</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>The shortest anecdote about Spring</h1>
    <article>
  <span class="header">
    March 25, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="not-even-funny">Not even funny</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Autowired</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> HelperUtil helperUtil<span class="op">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Wed, 25 Mar 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-03-25.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Parsing environment variables with reverse tests</title>
    <link>https://maksar.github.io/posts/code/2020-03-23-env-parsing.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Parsing environment variables with reverse tests</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Parsing environment variables with reverse tests</h1>
    <article>
  <span class="header">
    March 23, 2020 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/haskell.html">haskell</a> #<a href="../../tags/lens.html">lens</a> #<a href="../../tags/polysemy.html">polysemy</a> #<a href="../../tags/QuickCheck.html">QuickCheck</a>
  </span>
  <section>
    <p>Тема сегодняшней статьи – чтение конфигурационных значений из переменных окружения и связанные с этим процессом трудности. В небольших системах, где нет необходимости в полноценном конфигурационном файле, принято брать настройки из переменных окружения, это один из ключевых моментов <a href="https://12factor.net/config">12 factor app</a> манифеста. Это надежный и относительно безопасный способ конфигурации, он отлично поддерживается всеми операционными системами, облачными платформами и средствами контейнеризации.</p>
<!--more-->
<p><img src="../../previews/env-parsing/logo.jpg" class="center" /></p>
<p>“Так а что сложного-то?” спросите вы, “в любом языке программирования есть для этого встроенные средства, сдобренные ни одним десятком библиотек, упрощающих этот процесс. Действительно, проблем с тем, чтобы прочитать значение переменной окружения нет. Но если подходить к задаче не системно, запрашивая значения переменных окружения там и тут в коде, трудности все-же начнутся. Такую программу будет сложно сопровождать, так как существует множество мест в коде системы, где идет обращение к одной и той же переменной окружения. Но самое важное – такую систему будет сложно тестировать – необходимо использовать дополнительные ухищрения для подмены значений переменных окружения в тестовом режиме работы. Трудностей, со временем, будет становиться все больше, так как с добавлением нового функционала вырастет и количество настроек.</p>
<p>Способ преодоления таких трудностей эволюционно-естественен – необходимо сконцентрировать работу с конфигурацией в одном месте, сделать процесс добавления новой настройки понятным, упростить доступ к настройкам в коде бизнес-логики.</p>
<h2 id="постановка-задачи">Постановка задачи</h2>
<p>В <code>Haskell</code>, несмотря на всю его “строгость” и приверженность к математически чистым функциям, тоже можно обращаться к переменным окружения откуда угодно, но “тут так не принято”… Язык подталкивает программиста отказаться от идеи так делать, заставляя явно отказываться от “чистоты” функций и терять все связанные с этим свойством преимущества. В мире строго-типизированных языков “удобно” не читать “настройки” посреди кода с логикой, а читать их в начале исполнения программы, преобразовать во внутреннюю структуру данных (с адекватными типами вместо строк) и использовать явно передавая такую структуру или ее части в остальные “вычисления” оставляя их свободными от side-effect-ов.</p>
<p>Довольно философствований, show me the code, как говорится.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">Config</span> <span class="ot">=</span> <span class="dt">Config</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  {<span class="ot"> _ldapHost               ::</span> <span class="dt">Text</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _ldapPort               ::</span> <span class="dt">PortNumber</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _port                   ::</span> <span class="dt">Int</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _verifyToken            ::</span> <span class="dt">Text</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _pageToken              ::</span> <span class="dt">Text</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _user                   ::</span> <span class="dt">Text</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _password               ::</span> <span class="dt">Text</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _activeUsersContainer   ::</span> <span class="dt">Dn</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _projectGroupsContainer ::</span> <span class="dt">Dn</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> _projectGroupsOrgunits  ::</span> <span class="dt">NonEmpty</span> <span class="dt">Text</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>  <span class="kw">deriving</span> (<span class="dt">Eq</span>, <span class="dt">Show</span>, <span class="dt">Generic</span>, <span class="dt">Default</span>)</span></code></pre></div>
<p><code>Config</code> – та самая структура данных с настройками, необходимыми для работы <a href="../../posts/projects/2020-02-07-ldap-bot.html">Group Manager</a> бота. В начале работы системы, эта структура заполняется значениями из переменных окружения.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="ot">readConfig ::</span> (<span class="dt">Member</span> <span class="dt">Environment</span> r, <span class="dt">Member</span> (<span class="dt">Error</span> <span class="dt">Text</span>) r) <span class="ot">=&gt;</span> <span class="dt">Sem</span> r <span class="dt">Config</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>readConfig <span class="ot">=</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">Config</span> <span class="op">&lt;$&gt;</span> lookupText <span class="st">&quot;LDABOT_LDAP_HOST&quot;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> lookupNumber <span class="st">&quot;LDABOT_LDAP_PORT&quot;</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> lookupNumber <span class="st">&quot;LDABOT_PORT&quot;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> lookupText <span class="st">&quot;LDABOT_VERIFY_TOKEN&quot;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> lookupText <span class="st">&quot;LDABOT_PAGE_TOKEN&quot;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> lookupText <span class="st">&quot;LDABOT_USERNAME&quot;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> lookupText <span class="st">&quot;LDABOT_PASSWORD&quot;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> (<span class="dt">Dn</span> <span class="op">&lt;$&gt;</span> lookupText <span class="st">&quot;LDABOT_USERS_CONTAINER&quot;</span>)</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> (<span class="dt">Dn</span> <span class="op">&lt;$&gt;</span> lookupText <span class="st">&quot;LDABOT_GROUPS_CONTAINER&quot;</span>)</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>         <span class="op">&lt;*&gt;</span> (fromList <span class="op">.</span> splitOn <span class="st">&quot;,&quot;</span> <span class="op">&lt;$&gt;</span> lookupText <span class="st">&quot;LDABOT_GROUPS_ORGUNITS&quot;</span>)</span></code></pre></div>
<p>Как ни странно, функция <code>readConfig</code> является “чистой”, хотя вроде бы и обращается к внешнему миру (то есть имеет side-effect-ы). Почему это так и как работает – я расскажу в следующей статье про “алгебраические эффекты”. А пока, еще немного деталей реализации:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="ot">lookupText ::</span> (<span class="dt">Member</span> <span class="dt">Environment</span> r, <span class="dt">Member</span> (<span class="dt">Error</span> <span class="dt">Text</span>) r) <span class="ot">=&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Sem</span> r <span class="dt">Text</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>lookupText name <span class="ot">=</span> lookupEnv name <span class="op">&gt;&gt;=</span> \<span class="kw">case</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Nothing</span>     <span class="ot">-&gt;</span> throw <span class="op">$</span> <span class="fu">unwords</span> [<span class="st">&quot;Please set&quot;</span>, name, <span class="st">&quot;environment variable.&quot;</span>]</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Just</span> string <span class="ot">-&gt;</span> <span class="fu">return</span> <span class="op">$</span> <span class="fu">pack</span> string</span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="ot">lookupNumber ::</span> (<span class="dt">Read</span> a, <span class="dt">Member</span> <span class="dt">Environment</span> r, <span class="dt">Member</span> (<span class="dt">Error</span> <span class="dt">Text</span>) r) <span class="ot">=&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Sem</span> r a</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>lookupNumber name <span class="ot">=</span> <span class="fu">read</span> <span class="op">.</span> unpack <span class="op">&lt;$&gt;</span> lookupText name</span></code></pre></div>
<p>Функция <code>lookupText</code> обращается к операционной системе через <code>lookupEnv name</code> и анализирует результат. Если значения не оказалось – генерируется ошибка, в противном случае – функция возвращает значение переменной окружения. <code>lookupNumber</code> является надстройкой над <code>lookupText</code>, которая после успешного получения значения конвертирует его в число. Интересным моментом тут является оператор <code>&lt;$&gt;</code> (так же известный как <code>fmap</code> в <code>Haskell</code> или <code>Optional.map</code> в <code>Java</code>). Его использование позволяет “не засорять” код обработкой граничных случаев вида “если <code>lookupText</code> вернул <code>null</code>, то тоже вернуть <code>null</code>; в противном случае – преобразовать в число и вернуть”. Если вы вспомнили про elvis-оператор, то знайте, он является лишь частным случаем <code>fmap</code> для <code>null</code>-ов ;)</p>
<p><code>&lt;$&gt;</code> несколько раз применяется еще и внутри <code>readConfig</code> для тех же целей – преобразовывать прочитанное из <code>LDABOT_USERS_CONTAINER</code> в <code>Dn</code> (термин из мира <code>LDAP</code>, означает <code>distinguished name</code>) есть смысл только если там что-то было. Самое первое использование <code>&lt;$&gt;</code> немного интереснее. Помните рассказ про <code>&lt;$&gt;</code> из <a href="../../posts/code/2020-02-27-aeson-parsing.html">первой статьи</a> про парсинг <code>json</code>-а? Речь шла о том, чтобы “адаптировать” конструктор структуры данных <code>Message</code> (который принимает строки) к “парсеру строк”. Если посмотреть на такую адаптацию с другой стороны – операция <code>&lt;$&gt;</code> превращала “парсер строк” в “парсер <code>Message</code>-ей” постулируя “когда (и если) оригинальный парсер строк что-нибудь вернет, примени к этому конструктор <code>Message</code>”.</p>
<p>С <code>Config</code>-ом ситуация та же, оператор <code>&lt;$&gt;</code> постулирует “когда (и если) <strong>все</strong> операнды для вызова функции <code>Config</code> будут готовы – вызывай”. Если ранее мы конструировали <code>Message</code> “в контексте” парсера, который может ничего “не напарсить”, то сейчас мы конструируем <code>Config</code> “в контексте” вычисления, которое может вернуть ошибку. <code>fmap</code> – он как обычный <code>map</code>, только не для списков, а для любых “контейнеров” или “вычислений” (деревья, Optional, парсер, генератор). Подготовка операндов происходит при помощи <code>&lt;*&gt;</code>. Его отличие от <code>&lt;$&gt;</code> в том, что теперь с обоих сторон “вычисления, которые могут вернуть ошибку”. Механика сложная, зато код элегантный, без постоянных проверок (привет программистам на <code>golang</code>) и early return-ов.</p>
<h2 id="тестирование">Тестирование</h2>
<p>С проблематикой вроде разобрались, пора начинать извлекать пользу. из “централизации” работы с настройками а так же от использования “чистых” функций (не зря же прилагались усилия). С точки зрения кода, читающего значения переменных – совершенно не важно откуда именно происходит чтение – из реальных переменных окружения или из заранее подготовленного ассоциативного массива, главное, чтобы <code>lookupEnv</code> возвращала <code>Maybe Text</code>. Определив “тестовое окружение” как простой писок ключ-значение <code>type EnvironmentMock = [(Text, Text)]</code>, можно заставить <code>readConfig</code> читать данные из заранее подготовленного места.</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="ot">withMockedEnvironment ::</span> <span class="dt">EnvironmentMock</span> <span class="ot">-&gt;</span> <span class="dt">Sem</span> '[<span class="dt">Environment</span>, <span class="dt">Error</span> <span class="dt">Text</span>] a <span class="ot">-&gt;</span> <span class="dt">Either</span> <span class="dt">Text</span> a</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>withMockedEnvironment mockedEnv <span class="ot">=</span> run <span class="op">.</span> runError <span class="op">.</span> fakeEnvironment mockedEnv</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="ot">fakeEnvironment ::</span> <span class="dt">Member</span> (<span class="dt">Error</span> <span class="dt">Text</span>) r <span class="ot">=&gt;</span> <span class="dt">EnvironmentMock</span> <span class="ot">-&gt;</span> <span class="dt">InterpreterFor</span> <span class="dt">Environment</span> r</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>fakeEnvironment mockedEnv <span class="ot">=</span> interpret <span class="op">$</span> \<span class="kw">case</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>  <span class="dt">LookupEnv</span> name <span class="ot">-&gt;</span> <span class="fu">return</span> <span class="op">$</span> unpack <span class="op">&lt;$&gt;</span> <span class="fu">lookup</span> name mockedEnv</span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>withMockedEnvironment</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>  [ (<span class="st">&quot;LDABOT_LDAP_HOST&quot;</span>, <span class="st">&quot;host&quot;</span>)</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_LDAP_PORT&quot;</span>, <span class="st">&quot;123&quot;</span>)</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_PORT&quot;</span>, <span class="st">&quot;234&quot;</span>)</span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_VERIFY_TOKEN&quot;</span>, <span class="st">&quot;vtoken&quot;</span>)</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_PAGE_TOKEN&quot;</span>, <span class="st">&quot;ptoken&quot;</span>)</span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_USERNAME&quot;</span>, <span class="st">&quot;user&quot;</span>)</span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_PASSWORD&quot;</span>, <span class="st">&quot;pass&quot;</span>)</span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_USERS_CONTAINER&quot;</span>, <span class="st">&quot;ucont&quot;</span>)</span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_GROUPS_CONTAINER&quot;</span>, <span class="st">&quot;gcont&quot;</span>)</span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_GROUPS_ORGUNITS&quot;</span>, <span class="st">&quot;ou1,ou2&quot;</span>)</span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>  ] readConfig <span class="ot">`shouldBe`</span> <span class="dt">Right</span> <span class="dt">Config</span> {</span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>    _ldapHost <span class="ot">=</span> <span class="st">&quot;host&quot;</span>,</span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>    _ldapPort <span class="ot">=</span> <span class="dv">123</span>,</span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a>    _port <span class="ot">=</span> <span class="dv">234</span>,</span>
<span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a>    _verifyToken <span class="ot">=</span> <span class="st">&quot;vtoken&quot;</span>,</span>
<span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a>    _pageToken <span class="ot">=</span> <span class="st">&quot;ptoken&quot;</span>,</span>
<span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a>    _user <span class="ot">=</span> <span class="st">&quot;user&quot;</span>,</span>
<span id="cb4-26"><a href="#cb4-26" aria-hidden="true" tabindex="-1"></a>    _password <span class="ot">=</span> <span class="st">&quot;pass&quot;</span>,</span>
<span id="cb4-27"><a href="#cb4-27" aria-hidden="true" tabindex="-1"></a>    _activeUsersContainer <span class="ot">=</span> <span class="dt">Dn</span> <span class="st">&quot;ucont&quot;</span>,</span>
<span id="cb4-28"><a href="#cb4-28" aria-hidden="true" tabindex="-1"></a>    _projectGroupsContainer <span class="ot">=</span> <span class="dt">Dn</span> <span class="st">&quot;gcont&quot;</span>,</span>
<span id="cb4-29"><a href="#cb4-29" aria-hidden="true" tabindex="-1"></a>    _projectGroupsOrgunits <span class="ot">=</span> <span class="st">&quot;ou1&quot;</span> <span class="op">:|</span> [<span class="st">&quot;ou2&quot;</span>]</span>
<span id="cb4-30"><a href="#cb4-30" aria-hidden="true" tabindex="-1"></a>  }</span></code></pre></div>
<p>Как говорит один мой знакомый, “мало вариативности”. Он ярый поклонник разработки через тесты, (привет тебе, В.С.)“. Ну что-ж, постараемся добавить вариативности и уважить скептиков, заявляющих при чтении таких тестов –”а как убедиться в том, что реализация не состоит из хардкода именно этих значений”.</p>
<p>Есть такой прием в тестировании – проверять обратимость (<code>reverse(reverse(list)) === list</code>). Построение конфига из окружения - назовем прямым преобразованием Окружение -&gt; Конфиг. Если бы у нас было обратное преобразование (из Конфига в Окружение, из которого такой Конфиг прочитан), то мы бы могли проверить, что применив сначала прямое преобрзование, а затем обратное – получается исходный Конфиг. Такую пару Окружения и Конфига называют изоморфной, а само преобразование – изоморфизмом. Как обычно бывает в математике – слово сложное, но за ним стоит простая идея ;)</p>
<p>Если сначала конфиг (абсолютно любой) преобразовать в набор пар ключ-значение, а потом из них попытаться “прочитать” конфиг обратно, то в итоге должны ведь получить исходный конфиг.</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="ot">toEnvironmentMock ::</span> <span class="dt">Config</span> <span class="ot">-&gt;</span> <span class="dt">EnvironmentMock</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>toEnvironmentMock <span class="dt">Config</span> {<span class="op">..</span>} <span class="ot">=</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>  [ (<span class="st">&quot;LDABOT_LDAP_HOST&quot;</span>, unpack _ldapHost)</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_LDAP_PORT&quot;</span>, <span class="fu">show</span> _ldapPort)</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_PORT&quot;</span>, <span class="fu">show</span> _port)</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_VERIFY_TOKEN&quot;</span>, unpack _verifyToken)</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_PAGE_TOKEN&quot;</span>, unpack _pageToken)</span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_USERNAME&quot;</span>, unpack _user)</span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_PASSWORD&quot;</span>, unpack _password)</span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_USERS_CONTAINER&quot;</span>, fromDn _activeUsersContainer)</span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_GROUPS_CONTAINER&quot;</span>, fromDn _projectGroupsContainer)</span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>  , (<span class="st">&quot;LDABOT_GROUPS_ORGUNITS&quot;</span>, unpack <span class="op">$</span> intercalate <span class="st">&quot;,&quot;</span> <span class="op">$</span> toList _projectGroupsOrgunits)]</span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>  <span class="kw">where</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>    fromDn (<span class="dt">Dn</span> dn) <span class="ot">=</span> unpack dn</span></code></pre></div>
<p>Имея прямое и обратное преобразование, можно записать:</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a>it <span class="st">&quot;reads config from complete environment&quot;</span> <span class="op">$</span> forAll <span class="op">$</span> \config <span class="ot">-&gt;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>  withMockedEnvironment (toEnvironmentMock config) readConfig <span class="op">===</span> <span class="dt">Right</span> config</span></code></pre></div>
<p>Но это только success случай мы протестировали, пока не ясно как будет себя вести функция чтения конфига, если в переменных окружения будет отсутствовать одно из значений. Но погодите-ка – ведь у нас же есть способ получить окружение в виде списка ключ-значение. Достаточно только удалить из нее одну (случайную) строку и попытаться прочитать конфиг:</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a>it <span class="st">&quot;fails to read a config from incomplete environment&quot;</span> <span class="op">$</span> forAll <span class="op">$</span> \config <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>  shuffled <span class="ot">&lt;-</span> shuffle <span class="op">$</span> toEnvironmentMock config</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">let</span> ((missingKey, _), incompleteMock) <span class="ot">=</span> (<span class="fu">head</span> shuffled, <span class="fu">tail</span> shuffled)</span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>  <span class="fu">return</span> <span class="op">$</span> withMockedEnvironment incompleteMock readConfig <span class="op">===</span> <span class="dt">Left</span> (<span class="fu">unwords</span> [<span class="st">&quot;Please set&quot;</span>, missingKey, <span class="st">&quot;environment variable.&quot;</span>])</span></code></pre></div>
<p>Ну вот, кажется удалось свести задачу тестирования функции чтения конфигурации к формированию произвольных конфигов. Эта задача для <code>Haskell</code> довольно типична – использовать property-based тестирование на нем очень любят. Так как структура <code>Config</code> состоит из достаточно примитивных типов и оберток над ними, то “произвольность” можно обеспечить с помощью всего нескольких строк.</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a>makeArbitrary '<span class="dt">'Config</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="kw">instance</span> <span class="dt">Arbitrary</span> <span class="dt">Config</span> <span class="kw">where</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>  arbitrary <span class="ot">=</span> arbitraryConfig</span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>  shrink <span class="ot">=</span> recursivelyShrink</span></code></pre></div>
<p>Благодаря тому, что <code>Config</code> теперь “реализует” <code>Arbitrary</code>, можно создавать “генератор” конфигов – <code>Gen Config</code> при помощи функции <code>arbitrary</code> из класса.</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> <span class="dt">Arbitrary</span> a <span class="kw">where</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="ot">  arbitrary ::</span> <span class="dt">Gen</span> a</span></code></pre></div>
<p>Попробуем в REPL-е сгенерировать что-нибудь случайное:</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a>sample (<span class="ot">arbitrary ::</span> <span class="dt">Gen</span> <span class="dt">Config</span>)</span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="dt">Config</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>  { _ldapHost <span class="ot">=</span> <span class="st">&quot;\nIUZ\DELu\EMUG1\DEL\1002298\11790\DC3s\STX&quot;</span></span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>  , _ldapPort <span class="ot">=</span> <span class="dv">20</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>  , _port <span class="ot">=</span> <span class="op">-</span><span class="dv">17</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a>  , _verifyToken <span class="ot">=</span> <span class="st">&quot;\SO\DLE9_1\NUL\210889\681130l\ENQ&quot;</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>  , _pageToken <span class="ot">=</span> <span class="st">&quot;q\r;h1\959827\&amp;1~\703396P1~\837562\190001xjf&quot;</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>  , _user <span class="ot">=</span> <span class="st">&quot;\466790\&amp;6\DC4j&quot;</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>  , _password <span class="ot">=</span> <span class="st">&quot;{H&quot;</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>  , _activeUsersContainer <span class="ot">=</span> <span class="dt">Dn</span> <span class="st">&quot;&quot;</span></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>  , _projectGroupsContainer <span class="ot">=</span> <span class="dt">Dn</span> <span class="st">&quot;U\ACK\616135\570186v\672268\571313&quot;</span></span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a>  , _projectGroupsOrgunits <span class="ot">=</span> <span class="st">&quot;\615852L$\598568\ESC6\fc&quot;</span> <span class="op">:|</span> [<span class="st">&quot;[h\DC4N[3pzk\b\SUB6\133277\14775&quot;</span>]</span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>  }</span></code></pre></div>
<p>Работает! Теперь полиморфная функция <code>forAll</code>, обладающая типом <code>forAll :: (Show a, Testable prop) =&gt; Gen a -&gt; (a -&gt; prop) -&gt; Property</code> может принимать на вход “генератор конфигов” и проверять <code>Property</code> (по сути, чуть-чуть более хитрый предикат, где вместо <code>==</code> используется <code>===</code>).</p>
<pre class="console"><code>Env
  environment reading
    reads config from complete environment
      +++ OK, passed 100 tests.
    fails to read a config from incomplete environment
      +++ OK, passed 100 tests.</code></pre>
<p>Строка <code>+++ OK, passed 100 tests.</code> говорит о том, что было сгенерировано 100 случайных <code>Config</code>-ов для проверки инварианта – конвертации “окружение” и обратно. Количество тестов всегда можно задать аргументом командной строки при запусте тестов.</p>
<pre class="console"><code>$ stack test --test-arguments --qc-max-success=10000

Env
  environment reading
    reads config from complete environment
      +++ OK, passed 10000 tests.
    fails to read a config from incomplete environment
      +++ OK, passed 10000 tests.

Finished in 2.2859 seconds
2 examples, 0 failures</code></pre>
<p>От каких “ошибок” защищают такие defensive (regression, golden) тесты? Например, если случайно переставить местами строки при построении конфига – тесты это отловят. Либо если попытаться захардкодить какое-нибудь одно значение на этапе построения конфига – тесты тоже просигнализируют с несовпадении значений (сгенерированное случайное значение будет отличаться от статического хардкода). Изменение названия переменных, из которых читаем конфиг, такой тест тоже “отловит”, но отловит тут в кавычках, потому что такое падение теста не говорит о некорректности или неработоспособности программы, оно говорит лишь о том, что тесты нужно обновить, по сути “зашив” в процедуру генерации фейкового оружения новые названия переменных. В.С. непременно бы заметил еще на этапе написания тестов, что названия переменных повторяются и в реализации и в тестах – “не DRY”, сказал бы он в code review комментарии…</p>
<h2 id="суши-с-лупой">Суши с лупой</h2>
<p>Для того, чтобы избавиться из повторений, будем использовать популярную в функциональном программировании вещь – линзы. Линза, если совсем просто ее представить, это такая сущность, которая совмещает в себе getter и setter. Ну как setter… программирование же функциональное, immutability везде, нет никаких setter-ов, есть только функции <code>Value -&gt; Object -&gt; Object</code>, которые не меняют <code>Object</code>, а возвращают новый.</p>
<p>В структуре данных <code>Config</code> не случайно свойства начинались с символа подчеркивания, этому есть причина: для каждого поля структуры, <code>Haskell</code> объявит одноименную функцию с сигнатурой, например <code>_ldapHost :: Config -&gt; Text</code>. Если бы поле называлось <code>ldapHost</code>, то часто бы возникал конфликт имен при объявлении временных “переменных”. Да и смотря на использование <code>ldapHost</code> в коде подсознательно думаешь о нем, как о значении, а не как о функции.</p>
<p>Эту конвенцию “эксплуатирует” библиотека <code>lens</code>, позволяющая одной строкой сгенерировать линзы для каждого из полей структуры.</p>
<div class="sourceCode" id="cb13"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a>makeLenses '<span class="dt">'Config</span></span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a><span class="ot">ldapHost ::</span> <span class="dt">Lens'</span> <span class="dt">Config</span> <span class="dt">Text</span></span>
<span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a><span class="ot">ldapPort ::</span> <span class="dt">Lens'</span> <span class="dt">Config</span> <span class="dt">PortNumber</span></span>
<span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a><span class="op">...</span></span></code></pre></div>
<p>Для чего вообще эти линзы удобны? Для работы со вложенным структурами данных в функциональном стиле. Имея список составных объектов.</p>
<div class="sourceCode" id="cb14"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb14-1"><a href="#cb14-1" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">Color</span> <span class="ot">=</span> <span class="dt">Color</span> {<span class="ot">_shade ::</span> <span class="dt">Text</span>}</span>
<span id="cb14-2"><a href="#cb14-2" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">Material</span> <span class="ot">=</span> <span class="dt">Material</span> {<span class="ot">_kind ::</span> <span class="dt">Text</span>,<span class="ot"> _color ::</span> <span class="dt">Color</span>}</span>
<span id="cb14-3"><a href="#cb14-3" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">Player</span> <span class="ot">=</span> <span class="dt">Player</span> {<span class="ot">_name ::</span> <span class="dt">Text</span>,<span class="ot"> _material ::</span> <span class="dt">Material</span>}</span>
<span id="cb14-4"><a href="#cb14-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-5"><a href="#cb14-5" aria-hidden="true" tabindex="-1"></a>makeLenses '<span class="dt">'Color</span></span>
<span id="cb14-6"><a href="#cb14-6" aria-hidden="true" tabindex="-1"></a>makeLenses '<span class="dt">'Material</span></span>
<span id="cb14-7"><a href="#cb14-7" aria-hidden="true" tabindex="-1"></a>makeLenses '<span class="dt">'Player</span></span>
<span id="cb14-8"><a href="#cb14-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb14-9"><a href="#cb14-9" aria-hidden="true" tabindex="-1"></a><span class="kw">let</span> players <span class="ot">=</span> [<span class="dt">Player</span> <span class="st">&quot;Bender&quot;</span> (<span class="dt">Material</span> <span class="st">&quot;metal&quot;</span> (<span class="dt">Color</span> <span class="st">&quot;shiny&quot;</span>))</span>
<span id="cb14-10"><a href="#cb14-10" aria-hidden="true" tabindex="-1"></a>              ,<span class="dt">Player</span> <span class="st">&quot;Fry&quot;</span> (<span class="dt">Material</span> <span class="st">&quot;meat&quot;</span> (<span class="dt">Color</span> <span class="st">&quot;yellow&quot;</span>))</span>
<span id="cb14-11"><a href="#cb14-11" aria-hidden="true" tabindex="-1"></a>              ,<span class="dt">Player</span> <span class="st">&quot;Leela&quot;</span> (<span class="dt">Material</span> <span class="st">&quot;meat&quot;</span> (<span class="dt">Color</span> <span class="st">&quot;purple&quot;</span>))]</span></code></pre></div>
<p>Можно выполнять нетривиальные операции “вглубь” на immutable данных используя “композицию линз” через знакомый оператор <code>.</code>:</p>
<div class="sourceCode" id="cb15"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb15-1"><a href="#cb15-1" aria-hidden="true" tabindex="-1"></a>view material<span class="op">.</span>color<span class="op">.</span>shade <span class="op">$</span> <span class="fu">head</span> players</span>
<span id="cb15-2"><a href="#cb15-2" aria-hidden="true" tabindex="-1"></a><span class="st">&quot;shiny&quot;</span></span>
<span id="cb15-3"><a href="#cb15-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-4"><a href="#cb15-4" aria-hidden="true" tabindex="-1"></a><span class="fu">map</span> (view <span class="op">$</span> material<span class="op">.</span>color<span class="op">.</span>shade) players</span>
<span id="cb15-5"><a href="#cb15-5" aria-hidden="true" tabindex="-1"></a>[<span class="st">&quot;shiny&quot;</span>,<span class="st">&quot;yellow&quot;</span>,<span class="st">&quot;purple&quot;</span>]</span>
<span id="cb15-6"><a href="#cb15-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb15-7"><a href="#cb15-7" aria-hidden="true" tabindex="-1"></a><span class="fu">map</span> (over (material<span class="op">.</span>color<span class="op">.</span>shade) (append <span class="st">&quot;super_&quot;</span>)) players</span>
<span id="cb15-8"><a href="#cb15-8" aria-hidden="true" tabindex="-1"></a>[<span class="dt">Player</span> {_name <span class="ot">=</span> <span class="st">&quot;Bender&quot;</span>, _material <span class="ot">=</span> <span class="dt">Material</span> {_kind <span class="ot">=</span> <span class="st">&quot;metal&quot;</span>, _color <span class="ot">=</span> <span class="dt">Color</span> {_shade <span class="ot">=</span> <span class="st">&quot;super_shiny&quot;</span>}}}</span>
<span id="cb15-9"><a href="#cb15-9" aria-hidden="true" tabindex="-1"></a>,<span class="dt">Player</span> {_name <span class="ot">=</span> <span class="st">&quot;Fry&quot;</span>, _material <span class="ot">=</span> <span class="dt">Material</span> {_kind <span class="ot">=</span> <span class="st">&quot;meat&quot;</span>, _color <span class="ot">=</span> <span class="dt">Color</span> {_shade <span class="ot">=</span> <span class="st">&quot;super_yellow&quot;</span>}}}</span>
<span id="cb15-10"><a href="#cb15-10" aria-hidden="true" tabindex="-1"></a>,<span class="dt">Player</span> {_name <span class="ot">=</span> <span class="st">&quot;Leela&quot;</span>, _material <span class="ot">=</span> <span class="dt">Material</span> {_kind <span class="ot">=</span> <span class="st">&quot;meat&quot;</span>, _color <span class="ot">=</span> <span class="dt">Color</span> {_shade <span class="ot">=</span> <span class="st">&quot;super_purple&quot;</span>}}}]</span></code></pre></div>
<p>Последний пример особенно нагляден, если бы не линзы, пришлось бы писать что-то вроде:</p>
<div class="sourceCode" id="cb16"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb16-1"><a href="#cb16-1" aria-hidden="true" tabindex="-1"></a><span class="fu">map</span> (\player <span class="ot">-&gt;</span></span>
<span id="cb16-2"><a href="#cb16-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> material <span class="ot">=</span> _material player</span>
<span id="cb16-3"><a href="#cb16-3" aria-hidden="true" tabindex="-1"></a>        color <span class="ot">=</span> _color material</span>
<span id="cb16-4"><a href="#cb16-4" aria-hidden="true" tabindex="-1"></a>        shade <span class="ot">=</span> _shade color</span>
<span id="cb16-5"><a href="#cb16-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">in</span> player { _material <span class="ot">=</span> material { _color <span class="ot">=</span> color { _shade <span class="ot">=</span> append <span class="st">&quot;super_&quot;</span> shade } } }</span>
<span id="cb16-6"><a href="#cb16-6" aria-hidden="true" tabindex="-1"></a>  ) players</span></code></pre></div>
<p>Вернемся к нашей задачу из избавлению от дублирования. Объявим список пар ключ-линза – никто не запрещает так сделать, ведь линза, по сути, всего-лишь сложная функция, а функции в <code>Haskell</code> first-class значения:</p>
<div class="sourceCode" id="cb17"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb17-1"><a href="#cb17-1" aria-hidden="true" tabindex="-1"></a>settings <span class="ot">=</span> [</span>
<span id="cb17-2"><a href="#cb17-2" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_LDAP_HOST&quot;</span>,        ldapHost),</span>
<span id="cb17-3"><a href="#cb17-3" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_LDAP_PORT&quot;</span>,        ldapPort <span class="op">.</span> isoRead <span class="op">.</span> packed),</span>
<span id="cb17-4"><a href="#cb17-4" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_PORT&quot;</span>,             port <span class="op">.</span> isoRead <span class="op">.</span> packed),</span>
<span id="cb17-5"><a href="#cb17-5" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_VERIFY_TOKEN&quot;</span>,     verifyToken),</span>
<span id="cb17-6"><a href="#cb17-6" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_PAGE_TOKEN&quot;</span>,       pageToken),</span>
<span id="cb17-7"><a href="#cb17-7" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_USERNAME&quot;</span>,         user),</span>
<span id="cb17-8"><a href="#cb17-8" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_PASSWORD&quot;</span>,         password),</span>
<span id="cb17-9"><a href="#cb17-9" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_USERS_CONTAINER&quot;</span>,  activeUsersContainer <span class="op">.</span> isoDn),</span>
<span id="cb17-10"><a href="#cb17-10" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_GROUPS_CONTAINER&quot;</span>, projectGroupsContainer <span class="op">.</span> isoDn),</span>
<span id="cb17-11"><a href="#cb17-11" aria-hidden="true" tabindex="-1"></a>  (<span class="st">&quot;LDABOT_GROUPS_ORGUNITS&quot;</span>,  projectGroupsOrgunits <span class="op">.</span> isoNonEmpty <span class="op">.</span> splitted)]</span>
<span id="cb17-12"><a href="#cb17-12" aria-hidden="true" tabindex="-1"></a>  <span class="kw">where</span></span>
<span id="cb17-13"><a href="#cb17-13" aria-hidden="true" tabindex="-1"></a><span class="ot">    isoRead ::</span> (<span class="dt">Read</span> a, <span class="dt">Show</span> a) <span class="ot">=&gt;</span> <span class="dt">Iso'</span> a <span class="dt">String</span></span>
<span id="cb17-14"><a href="#cb17-14" aria-hidden="true" tabindex="-1"></a>    isoRead     <span class="ot">=</span> iso <span class="fu">show</span> <span class="fu">read</span></span>
<span id="cb17-15"><a href="#cb17-15" aria-hidden="true" tabindex="-1"></a>    isoDn       <span class="ot">=</span> iso (\(<span class="dt">Dn</span> dn) <span class="ot">-&gt;</span> dn) <span class="dt">Dn</span></span>
<span id="cb17-16"><a href="#cb17-16" aria-hidden="true" tabindex="-1"></a>    isoNonEmpty <span class="ot">=</span> iso toList fromList</span>
<span id="cb17-17"><a href="#cb17-17" aria-hidden="true" tabindex="-1"></a>    splitted    <span class="ot">=</span> iso (intercalate <span class="st">&quot;,&quot;</span>) (splitOn <span class="st">&quot;,&quot;</span>)</span></code></pre></div>
<p>Обратите внимание на уже знакомые нам изоморфизмы снизу – пары функций, которые необходимы для преобразования линз к одному виду <code>Lens' Config Text</code>. Ведь исходя из типа <code>Config</code> линза <code>activeUsersContainer</code> работает с типом <code>Dn</code>, а мы хотим унифицировать все лизны в <code>settings</code> приведя их к одной, строковой сигнатуре.</p>
<p>Процедуру “чтения конфигурации” поменяем на свертку</p>
<div class="sourceCode" id="cb18"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb18-1"><a href="#cb18-1" aria-hidden="true" tabindex="-1"></a><span class="ot">readConfig ::</span> (<span class="dt">Member</span> <span class="dt">Environment</span> r, <span class="dt">Member</span> (<span class="dt">Error</span> <span class="dt">Text</span>) r) <span class="ot">=&gt;</span> <span class="dt">Sem</span> r <span class="dt">Config</span></span>
<span id="cb18-2"><a href="#cb18-2" aria-hidden="true" tabindex="-1"></a>readConfig <span class="ot">=</span> foldM reducer (<span class="dt">Config</span> {}) settings</span>
<span id="cb18-3"><a href="#cb18-3" aria-hidden="true" tabindex="-1"></a>  <span class="kw">where</span></span>
<span id="cb18-4"><a href="#cb18-4" aria-hidden="true" tabindex="-1"></a>    reducer config (name, lens) <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb18-5"><a href="#cb18-5" aria-hidden="true" tabindex="-1"></a>      value <span class="ot">&lt;-</span> <span class="fu">lookup</span> name</span>
<span id="cb18-6"><a href="#cb18-6" aria-hidden="true" tabindex="-1"></a>      <span class="fu">return</span> <span class="op">$</span> set lens value config</span></code></pre></div>
<p>Код осуществляет свертку <code>foldM</code> при помощи функции <code>reducer</code> списка <code>settings</code>, используя в качестве начального значения пустой <code>Config {}</code>. Функция <code>reducer</code> имеет на входе два параметра – <code>config</code> в качестве аккумулятор-а и пара ключ-линза из списка <code>settings</code>. Она читает (<code>lookup name</code>) значение переменной окружения, устанавливает прочитанное значение при помощи линзы в <code>config</code> и возвращает его. Таким образом, последовательно пройдясь по всему списку <code>settings</code> все поля структуры <code>Config</code> окажутся заполнены значениями.</p>
<p>Наконец-то мы можем избавиться от дублирования названий переменных в тестах. Вместо свертки, делаем простой обход списка <code>map</code> просматривая через линзу значения в <code>config</code>-е.</p>
<div class="sourceCode" id="cb19"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb19-1"><a href="#cb19-1" aria-hidden="true" tabindex="-1"></a><span class="ot">toEnvironmentMock ::</span> <span class="dt">Config</span> <span class="ot">-&gt;</span> <span class="dt">EnvironmentMock</span></span>
<span id="cb19-2"><a href="#cb19-2" aria-hidden="true" tabindex="-1"></a>toEnvironmentMock config <span class="ot">=</span> <span class="fu">map</span> (\(name, lens) <span class="ot">-&gt;</span> (name, view lens config)) settings</span></code></pre></div>
<p>Использование инверсии, идемпотентности и других инвариантов - здорово помогает при написании тестов, Вариативность, как говорит мой знакомый - при этом “на высоте” ;)</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 23 Mar 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2020-03-23-env-parsing.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Minimax problem</title>
    <link>https://maksar.github.io/posts/WAT/2020-03-17.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Minimax problem</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Minimax problem</h1>
    <article>
  <span class="header">
    March 17, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="naming-is-important">Naming is important</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>    <span class="co">/**</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="co">     * </span><span class="an">@param</span><span class="co"> </span><span class="cv">Product</span><span class="co">[] $products</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="co">     *</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="co">     * </span><span class="an">@return</span><span class="co"> Product[]</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">     */</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">function</span> sortingProductByPrice(<span class="dt">array</span> <span class="va">$products</span>)<span class="ot">:</span> <span class="dt">array</span> {</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="va">$lowPrise</span> <span class="op">=</span> <span class="dv">0</span><span class="ot">;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="va">$productList</span> <span class="op">=</span> []<span class="ot">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>        <span class="cf">foreach</span> (<span class="va">$products</span> <span class="kw">as</span> <span class="va">$product</span>) {</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> (<span class="op">!</span><span class="va">$lowPrise</span>) {</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>                <span class="va">$lowPrise</span> <span class="op">=</span> <span class="va">$product</span>-&gt;getPrice()<span class="ot">;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>            }</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> (<span class="va">$lowPrise</span> <span class="op">&gt;</span> <span class="va">$product</span>-&gt;getPrice()) {</span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>                <span class="va">$lowPrise</span> <span class="op">=</span> <span class="va">$product</span>-&gt;getPrice()<span class="ot">;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>                <span class="fu">array_unshift</span>(<span class="va">$productList</span><span class="ot">,</span> <span class="va">$product</span>)<span class="ot">;</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>            } <span class="cf">else</span> {</span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>                <span class="va">$productList</span>[] <span class="op">=</span> <span class="va">$product</span><span class="ot">;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>            }</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="va">$productList</span><span class="ot">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    }</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 17 Mar 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-03-17.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Type-safe API for server endpoints and clients</title>
    <link>https://maksar.github.io/posts/code/2020-03-09-servant.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Type-safe API for server endpoints and clients</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Type-safe API for server endpoints and clients</h1>
    <article>
  <span class="header">
    March  9, 2020 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/haskell.html">haskell</a> #<a href="../../tags/servant.html">servant</a>
  </span>
  <section>
    <p>Итак - подошло время очередной технической статьи. На этот раз речь пойдет про API-over-HTTP. Вроде банальнейшая вещь, каждый так “сто раз делал” и чего вообще можно было на эту тему необычного придумать… Действительно, практически в любом backend-е есть слой “контроллеров”, который отвечает за то, чтобы функции приложения были доступны извне по протоколу <code>http</code>. Кто-то использует <code>json</code>, кто-то <code>xml</code>, но общий знаменатель всегда - <code>http</code>.</p>
<!--more-->
<p><img src="../../previews/servant/logo.jpg" class="center" /></p>
<p><code>REST API</code> - давно стал стандартом де-факто. Все привыкли к модели ресурсов-существительных и стандартных глаголов-действий <code>CRUDL</code>. В code review я сам часто советую заменить action-ы <code>up</code> и <code>down</code> ресурса <code>vote</code> на два отдельных контроллера <code>upvote</code> и <code>downvote</code> с методом <code>create</code>, для соответствия принципам <code>REST</code>.</p>
<p>Но не <code>REST</code>-ом единым, как говорится, есть еще <code>GraphQL</code>, и много чего другого. Для очень маленьких приложений с одним-двумя endpoint-ами следовать заветам <code>REST</code> не так уж и необходимо. Сегодня мы как раз поговорим о подходе к API, который исповедует библиотека <code>Servant</code> из мира языка программирования <code>Haskell</code>, которую я использовал при написании бота <a href="../../posts/projects/2020-02-07-ldap-bot.html">Group Manager</a>.</p>
<h2 id="api-как-тип">API как тип</h2>
<p>Библиотека <code>Servant</code> требует описать все ваше API в виде типа. Одного, весьма развесистого и длинного, но все-же типа (как <code>String</code> или <code>List Integer</code>). Рассмотрим пример из практики. Endpoint, реагирующий на оповещения от Facebook-а можно описать как:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">MessageAPI</span> <span class="ot">=</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">Messages</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] (<span class="dt">NonEmpty</span> <span class="dt">SendTextMessageResponse</span>)</span></code></pre></div>
<p>Этот тип, состоит из двух частей, разделенных комбинатором <code>:&gt;</code> (читать стоит как… как стрелку, например). Даже не зная всей специфики синтаксиса, можно догадаться, что речь идет о <code>POST</code> запросе, который в body принимает сообщение типа <code>Messages</code> в виде <code>json</code>-а и возвращает непустой список <code>SendTextMessageResponse</code>-ов, так же в виде <code>json</code>-а.</p>
<p>API редко состоит только из одного endpoint-а. Наш случай - не исключение, Facebook требует, чтобы у принимающей нотификации стороны был еще один метод, для <a href="https://developers.facebook.com/docs/graph-api/webhooks/getting-started/#verification-requests">верификации endpoint-а</a>, добавим его.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">WebHookAPI</span> <span class="ot">=</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>       <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">Messages</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] (<span class="dt">NonEmpty</span> <span class="dt">SendTextMessageResponse</span>)</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;hub.verify_token&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;hub.challenge&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">Get</span> '[<span class="dt">PlainText</span>] <span class="dt">Text</span></span></code></pre></div>
<p>При помощи комбинатора <code>:&lt;|&gt;</code> (это не emoji, это аналог операции “альтернатива” <code>&lt;|&gt;</code> из <a href="../../posts/code/2020-02-27-aeson-parsing.html">предыдущей статьи</a>) к первому запросу добавился еще один: он реагирует на <code>GET</code> запрос, требует наличия двух текстовых параметров и отвечает plain текстом, без всякого <code>json</code>-а. Лишь только посмотрев на тип можно сразу понять протокол взаимодействия приложения с окружающим миром, не обращаясь к документации, не рыща по исходникам в поисках аннотаций над контроллерами и их методами.</p>
<p>Так же как и части типа объединяются между собой комбинатором <code>:&lt;|&gt;</code>, так и реализации этих endpoint-ов можно объединить в одно целое.</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="ot">webhookMessage ::</span> <span class="dt">Messages</span> <span class="ot">-&gt;</span> <span class="dt">Handler</span> (<span class="dt">NonEmpty</span> <span class="dt">SendTextMessageResponse</span>)</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>webhookMessage <span class="ot">=</span> <span class="op">...</span> <span class="co">-- implementation omitted</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="ot">webhookVerify ::</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Handler</span> <span class="dt">Text</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>webhookVerify <span class="ot">=</span> <span class="op">...</span> <span class="co">-- implementation omitted</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>entireAPI <span class="ot">=</span> webhookVerify <span class="op">:&lt;|&gt;</span> webhookMessage</span></code></pre></div>
<p>При этом их типы тоже объединятся. Не будем утруждать себя и спросим у <code>REPL</code>-а (в комплируемых языках <code>REPL</code> – не редкость):</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;</span> <span class="op">:</span>t entireAPI</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="op">&lt;</span><span class="ot"> entireAPI ::</span> <span class="dt">Messages</span> <span class="ot">-&gt;</span> <span class="dt">Handler</span> (<span class="dt">NonEmpty</span> <span class="dt">SendTextMessageResponse</span>) <span class="op">:&lt;|&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Handler</span> <span class="dt">Text</span></span></code></pre></div>
<h2 id="возможности">Возможности</h2>
<p>Компилятор не даст собрать систему, в которой программист “забыл” обработать какой-то параметр или пытается ответить текстом на запрос, в контракте ответа которого требуется список. Библиотека <code>Servant</code> берет на себя много рутинной работы по ответу на запросы, которые “не обрабатываются”, то есть не описаны (не предусмотрены) в типе. Так же <code>Servant</code> занимается операциями <code>encode</code>/<code>decode</code> данных в/из <code>json</code> или <code>xml</code> форматы в соответствии с заявленным в типе и обработкой ошибок, связанных с этим.</p>
<p>Но все же, пока ничего экстраординарного, ну описан контракт в виде типа, что с того… Наверное дело в том, что можно удобно будет описывать повторяющиеся части API? Написали один раз параметризованный тип:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="co">--   - GET /&lt;name&gt;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="co">--   - GET /&lt;name&gt;/id</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="co">--   - POST /&lt;name&gt;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">CreateReadList</span> (<span class="ot">name ::</span> <span class="dt">Symbol</span>) a <span class="ot">=</span> name <span class="op">:&gt;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a> (                            <span class="dt">Get</span>  '[<span class="dt">JSON</span>] [a]</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a> <span class="op">:&lt;|&gt;</span> <span class="dt">Capture</span> <span class="st">&quot;id&quot;</span> <span class="dt">Integer</span> <span class="op">:&gt;</span> <span class="dt">Get</span>  '[<span class="dt">JSON</span>] a</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a> <span class="op">:&lt;|&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] a    <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">NoContent</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a> )</span></code></pre></div>
<p>И используем его для нескольких типов сущностей:</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">API</span> <span class="ot">=</span> <span class="dt">FactoringAPI</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>     <span class="op">:&lt;|&gt;</span> <span class="dt">CreateReadList</span> <span class="st">&quot;users&quot;</span> <span class="dt">User</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>     <span class="op">:&lt;|&gt;</span> <span class="dt">CreateReadList</span> <span class="st">&quot;products&quot;</span> <span class="dt">Product</span></span></code></pre></div>
<p>Если захотим в ответ на <code>POST</code> запрос для создания сущности начать что-то возвращать (например id созданной записи), то изменение сделанное в одном месте (вместо <code>NoContent</code> напишем <code>Integer</code>) отразится сразу и на <code>user</code>-ах и на <code>product</code>-ах, причем компилятор нам точно скажет где именно в коде начало возникать несовпадение типов, чтобы мы точно не забыли вернуть <code>Integer</code> из обработчика запроса.</p>
<p>Но эта кроличья нора несколько глубже… Так как тип известен на этапе компиляции, а в Haskell есть интроспекция типов (тоже на этапе компиляции), то можно информацию из типа использовать для… генерации кода!</p>
<p>Объявляемый тип API представляет собой контракт обмена сообщениями. Но сообщения же можно не только принимать, но еще и отправлять! Бот <a href="../../posts/projects/2020-02-07-ldap-bot.html">Group Manager</a> тоже вынужден это делать для общения с пользователем. Facebook не обращает внимания на то, что вы ему шлете в ответ на нотификацию о сообщении от пользователя, ему главное чтобы HTTP код был 200. Для того, чтобы пользователю написать – нужно воспользоваться специальным <a href="https://developers.facebook.com/docs/messenger-platform/reference/send-api/">Facebook Messaging API</a>, то есть послать несколько сообщений Facebook-у по HTTP. А что если описать и этот протокол взаимодействия в виде типа?</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">RequiredParam</span> <span class="ot">=</span> <span class="dt">QueryParam'</span> '[<span class="dt">Strict</span>, <span class="dt">Required</span>]</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">AccessTokenParam</span> <span class="ot">=</span> <span class="dt">RequiredParam</span> <span class="st">&quot;access_token&quot;</span> <span class="dt">Text</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">FBMessengerSendAPI</span> <span class="ot">=</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>       <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">ServiceMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] ()</span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="dt">Capture</span> <span class="st">&quot;user_id&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;fields&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Get</span> '[<span class="dt">JSON</span>] <span class="dt">UserInfo</span></span></code></pre></div>
<p>Первый и второй API вызовы выглядят похожими. С точки зрения Facebook это, вообще говоря, один и тот же <code>GET</code> endpoint на URL-е <code>"/me/messages"</code>, который принимает <code>json</code> в body, но с точки зрения нас, как потребителя этой API, вызовы разные, с разным назначением и даже возвращаемым типом (в случае служебных сообщений нам “не важно” что Facebook на него ответил).</p>
<p>Прелесть в том, что код для методов доступа к такому API может быть автоматически сгенерирован, нужно только немного помочь компилятору, написав “заглушки” методов с сигнатурами типов:</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="ot">sendTextMessage ::</span> <span class="dt">SendTextMessageRequest</span> <span class="ot">-&gt;</span> <span class="dt">Token</span> <span class="ot">-&gt;</span> <span class="dt">ClientM</span> <span class="dt">SendTextMessageResponse</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="ot">sendServiceMessage ::</span> <span class="dt">ServiceMessageRequest</span> <span class="ot">-&gt;</span> <span class="dt">Token</span> <span class="ot">-&gt;</span> <span class="dt">ClientM</span> <span class="dt">SendTextMessageResponse</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a><span class="ot">getUserInfo ::</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Token</span> <span class="ot">-&gt;</span> <span class="dt">ClientM</span> <span class="dt">UserInfo</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>sendTextMessage <span class="op">:&lt;|&gt;</span> sendServiceMessage <span class="op">:&lt;|&gt;</span> getUserInfo <span class="ot">=</span> client (<span class="dt">Proxy</span><span class="ot"> ::</span> <span class="dt">Proxy</span> <span class="dt">FBMessengerSendAPI</span>)</span></code></pre></div>
<p>Пользоваться методами можно предоставив “направление” <code>BaseUrl Https "graph.facebook.com" 443 "/v6.0"</code>:</p>
<div class="sourceCode" id="cb9"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a>runClientM (getUserInfo <span class="st">&quot;123&quot;</span> <span class="st">&quot;email&quot;</span> (<span class="dt">Token</span> <span class="st">&quot;access_token&quot;</span>)) <span class="op">$</span> with graphAPIBaseUrl <span class="op">&gt;&gt;=</span> \<span class="kw">case</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>  <span class="dt">Left</span> <span class="fu">error</span>     <span class="ot">-&gt;</span> <span class="co">-- Do something with error</span></span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">Right</span> userInfo <span class="ot">-&gt;</span> <span class="co">-- userInfo from Facebook, has type UserInfo</span></span></code></pre></div>
<p>Пропадает необходимость работы с низкоуровневыми HTTP библиотеками, нет нужды вручную заниматься чтением <code>json</code>-а из ответа сервера, даже строить URL-ы самому не надо (обратите внимание, метод <code>getUserInfo</code> ничего об URL-е “не знает”).</p>
<p>Подход, среди прочего, позволяет:</p>
<ul>
<li>на основании информации из типа сгенерировать код на <a href="https://hackage.haskell.org/package/servant-js">JavaScript</a> (или на другом <a href="https://hackage.haskell.org/package/servant-foreign">языке</a> для доступа к такой API-шке;</li>
<li>создать <a href="https://hackage.haskell.org/package/servant-swagger-1.1.8/docs/Servant-Swagger.html">Swagger</a> описание API-шки из ее типа либо наоборот, сгенерировать тип на основе Swagger описания;</li>
<li>в несколько строк создать <a href="https://hackage.haskell.org/package/servant-mock">mock</a> версию API-шки, которая бы возвращала случайные данные, но в строгом в соответствии с ожидаемым форматом;</li>
<li>сгенерировать <a href="https://hackage.haskell.org/package/servant-docs">документацию</a> в markdown формате с описанием и примерами использования;</li>
<li>написать <a href="https://hackage.haskell.org/package/servant-quickcheck-0.0.8.0/docs/Servant-QuickCheck.html">тест</a>, который будет “долбить” все наши endpoint-ы запросами со случайными данными проверяя предикаты <code>not500 &lt;%&gt; notLongerThan 1000000</code> (для целей нагрузочного тестирования) или <code>onlyJsonObjects</code> (чтобы отловить “ошибки дизайна” API вида <code>Post '[JSON] ()</code>).</li>
</ul>
<p>И это не теоретические “возможности”, для всего есть рабочие библиотеки. Более того, начали появляться <a href="https://www.47deg.com/blog/introducing-mu-haskell-0-1/">реализации</a> той же идеи, но вместо <code>HTTP REST</code> использующие <code>gRPC</code> (говорят сейчас так модно в мире микро-сервисных архитектур).</p>
<h2 id="refactoring">Refactoring</h2>
<p>“Сломать” работающий сервис в процессе рефакторинга становится крайне проблематично. К примеру, решили мы избавиться от дублирования в описании типа <code>FBMessengerSendAPI</code>. В нем несколько раз повторяется часть, моделирующая префикс URL-а “/me/messages”, да и описывать в каждом из endpoint-ов факт того, что “надо бы token передать” утомительно.</p>
<p>Прямо как в алгебраическом уравнении, “выносим за скобки” <code>AccessTokenParam</code>, а затем и префикс <code>"me" :&gt; "messages"</code>. В результате token будет применяться ко всем endpoint-ам, а префикс, только к первым двум (в соответствии со свойством <a href="https://en.wikipedia.org/wiki/Distributive_property">дистрибутивности</a>).</p>
<div class="sourceCode" id="cb10"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="co">-- Initial version</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">FBMessengerSendAPI</span> <span class="ot">=</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>       <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">ServiceMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] ()</span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="dt">Capture</span> <span class="st">&quot;user_id&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;fields&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Get</span> '[<span class="dt">JSON</span>] <span class="dt">UserInfo</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="co">-- Step 1 - extracting AccessTokenParam</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">FBMessengerSendAPI</span> <span class="ot">=</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> (</span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>       <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">ServiceMessageRequest</span>  <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="dt">Capture</span> <span class="st">&quot;user_id&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;fields&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">Get</span> '[<span class="dt">JSON</span>] <span class="dt">GetUserInfoMessageResponse</span>)</span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a><span class="co">-- Step 2 - extracting &quot;me&quot; :&gt; &quot;messages&quot;</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">FBMessengerSendAPI</span> <span class="ot">=</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> (</span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a>    <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> (</span>
<span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>         <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">:&lt;|&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">ServiceMessageRequest</span>  <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span>)</span>
<span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a>  <span class="op">:&lt;|&gt;</span> <span class="dt">Capture</span> <span class="st">&quot;user_id&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;fields&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">Get</span> '[<span class="dt">JSON</span>] <span class="dt">GetUserInfoMessageResponse</span>)</span></code></pre></div>
<p>Соответственно, сигнатуры методов доступа к данным, тоже должны измениться. Раньше token был последним параметром, а станет первым:</p>
<div class="sourceCode" id="cb11"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="ot">sendTextMessage ::</span> <span class="dt">Token</span> <span class="ot">-&gt;</span> <span class="dt">SendTextMessageRequest</span> <span class="ot">-&gt;</span> <span class="dt">ClientM</span> <span class="dt">SendTextMessageResponse</span></span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a><span class="ot">sendServiceMessage ::</span> <span class="dt">Token</span> <span class="ot">-&gt;</span> <span class="dt">ServiceMessageRequest</span> <span class="ot">-&gt;</span> <span class="dt">ClientM</span> <span class="dt">SendTextMessageResponse</span></span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a><span class="ot">getUserInfo ::</span> <span class="dt">Token</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">ClientM</span> <span class="dt">UserInfo</span></span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a>sendTextMessage <span class="op">:&lt;|&gt;</span> sendServiceMessage <span class="op">:&lt;|&gt;</span> getUserInfo <span class="ot">=</span> client (<span class="dt">Proxy</span><span class="ot"> ::</span> <span class="dt">Proxy</span> (<span class="dt">Flat</span> <span class="dt">FBMessengerSendAPI</span>))</span></code></pre></div>
<p>А так как они изменились, то компилятор будет ругаться на все их использования в коде, не позволяя нам нечаянно “забыть” поменять порядок в одном из мест. Строгая и мощная система типов не всегда “стоит на пути”, чаще она защищает от ошибок и предотвращает потенциальные баги ;)</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 09 Mar 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2020-03-09-servant.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Parsing different JSON payloads into a single data structure</title>
    <link>https://maksar.github.io/posts/code/2020-02-27-aeson-parsing.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Parsing different JSON payloads into a single data structure</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Parsing different JSON payloads into a single data structure</h1>
    <article>
  <span class="header">
    February 27, 2020 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/haskell.html">haskell</a> #<a href="../../tags/aeson.html">aeson</a>
  </span>
  <section>
    <p>Что-то давно не видно технических статей, спешу исправиться. В связи с задержкой, “градус гиковости” будет временно значительно повышен. В публикации на прошлой неделе я <a href="../../posts/projects/2020-02-07-ldap-bot.html">рассказал</a> про новый бот для Workplace, который помогает управлять проектными (и не только) группами не прибегая к помощи <code>HelpDesk</code>. Он написан на языке программирования <code>Haskell</code>, что для нашей компании выбор не совсем типичный (хотя с RFX-ами на эту тему к нам обращались). Знаниями надо делиться, так что запланировал несколько статей по мотивам написания этого бота. Статьи будут раскрывать некоторые интересные аспекты реализации, которые, на первый взгляд, могут показаться странными или неочевидными, но все же позволяют по новому взглянуть на типовые задачи, возникающие при разработке ПО.</p>
<!--more-->
<p><img src="../../previews/aeson-parsing/logo.jpg" class="center" /></p>
<h2 id="почему-haskell">Почему <code>Haskell</code>?</h2>
<p>Меня всегда привлекал этот язык программирования своей строгостью, лаконичностью и близостью к математике. Однако, написать на нем что-то более-менее крупное – шанса все не представлялось. Да, были небольшие pet-проекты, курсы по решению алгоритмических задач, но до “полноценного” production использования дело не доходило.</p>
<p>Но недавно я в очередной раз посетил конференцию по функциональному программированию - <a href="https://fby.dev">F(by)</a> и твердо решил – в этот раз (пока мотивация от докладов не прошла) – надо обязательно это сделать! Задача возникла совершенно естественным способом, из рутины. В настоящее время, многих менеджеров (а в последствии и всех остальных сотрудников) перевели на использование облачных учетных записей <code>Microsoft Office</code>. У них пропала возможность самостоятельно редактировать состав проектных групп.</p>
<p>Дело в том, что синхронизация между наземным хранилищем и “облаком” может быть настроена только однонаправленная (“земля-воздух” кхе-хе). Так как <code>Outlook</code> у менеджеров уже облачный, то изменения, которые они пытаются с его помощью сделать, не могут попасть в наш <code>Active Directory</code>. Предлагаемый <code>MIDS</code> путь - создавать запросы в <code>HelpDesk</code> - меня категорически не устраивал. Вот и пришла идея этот процесс автоматизировать.</p>
<p>План статей пока выходит примерно такой:</p>
<ul>
<li><a href="../../posts/code/2020-02-27-aeson-parsing.html">Parsing different JSON payloads into a single data structure</a></li>
<li><a href="../../posts/code/2020-03-09-servant.html">Type-safe API for server endpoints and clients</a></li>
<li><a href="../../posts/code/2020-03-23-env-parsing.html">Parsing environment variables with reverse tests</a></li>
<li><a href="../../posts/code/2021-02-04-effect-systems.html">First-class Effects with pure testing</a></li>
<li><a href="../../posts/code/2020-05-11-size-matters.html">Static linking and Dockerize application</a></li>
</ul>
<h2 id="parsing-different-json-payloads-into-a-single-data-structure">Parsing different JSON payloads into a single data structure</h2>
<p>Чтобы не затягивать - начнем с первой темы ;)</p>
<p>Обычно, при разработке <code>API Endpoint</code>-ов принято иметь структуры данных, которые отражают принимаемый <code>json</code> один-к-одному. А только потом извлекать из него значения, полезные/нужные для работы программы. Так делается для… простоты. Программист знает формат <code>json</code>-а, который будет на входе его сервиса и либо (в случае динамического языка программирования) парсит этот <code>json</code> как нетипизированный <code>Value</code>, либо (в случае статической типизации) парсит его в экземпляр класса, отражающий структуру приходящего <code>json</code>-а.</p>
<p>Подход, сам по себе не плох, но появляется промежуточный слой <code>DTO</code>, для работы приложения совершенно не обязательный. Особенно если достоверно известно (как раз мой случай), что формат этого <code>json</code>-а вряд-ли изменится в скором времени – <code>json</code>-ы мне присылает <code>Facebook</code>.</p>
<p>Пропустить промежуточную <code>DTO</code> можно написав собственный парсер, который сразу преобразует <code>json</code> в нужную для работы системы структуру данных. Звучит довольно сложно, ведь все привыкли использовать для разбора <code>json</code>-а готовые библиотеки, основанные на аннотациях (в случае статических языков) либо парсить <code>json</code> “в нетипизированный объект”.</p>
<p>К счастью в <code>Haskell</code> дела с парсингом (всего, не только <code>json</code>) исторически обстоят намного лучше. Существуют библиотеки так называемых <code>parsing combinator</code>-ов, для создания эффективных парсеров при помощи композиции (композиция функций – краеугольный камень функционального программирования). С их помощью можно распарсить <code>json</code> прямо в нужную вам структуру данных.</p>
<p><code>Facebook</code> (<code>Workplace</code>) присылает боту примерно такой <code>json</code> в случае поступления сообщения от пользователя:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>  <span class="fu">{</span> <span class="dt">&quot;object&quot;</span><span class="fu">:</span> <span class="st">&quot;page&quot;</span><span class="fu">,</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">&quot;entry&quot;</span><span class="fu">:</span> <span class="ot">[</span><span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;entry_id&quot;</span><span class="fu">,</span> <span class="dt">&quot;time&quot;</span><span class="fu">:</span> <span class="dv">123</span><span class="fu">,</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>      <span class="dt">&quot;messaging&quot;</span><span class="fu">:</span> <span class="ot">[</span><span class="fu">{</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        <span class="dt">&quot;sender&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;sender_id&quot;</span><span class="fu">,</span> <span class="dt">&quot;community&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;community_id&quot;</span><span class="fu">}},</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="dt">&quot;recipient&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;recipient_id&quot;</span><span class="fu">},</span> <span class="dt">&quot;timestamp&quot;</span><span class="fu">:</span> <span class="dv">123</span><span class="fu">,</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="dt">&quot;message&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;mid&quot;</span><span class="fu">:</span> <span class="st">&quot;mid&quot;</span><span class="fu">,</span> <span class="dt">&quot;text&quot;</span><span class="fu">:</span> <span class="st">&quot;text&quot;</span><span class="fu">}}</span><span class="ot">]</span><span class="fu">}</span><span class="ot">]</span><span class="fu">}</span></span></code></pre></div>
<p>И такой <code>json</code> в случае, если пользователь нажал на кнопку из <code>help</code> сообщения.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode json"><code class="sourceCode json"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>  <span class="fu">{</span> <span class="dt">&quot;object&quot;</span><span class="fu">:</span> <span class="st">&quot;page&quot;</span><span class="fu">,</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="dt">&quot;entry&quot;</span><span class="fu">:</span> <span class="ot">[</span><span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;entry_id&quot;</span><span class="fu">,</span> <span class="dt">&quot;time&quot;</span><span class="fu">:</span> <span class="dv">123</span><span class="fu">,</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>      <span class="dt">&quot;messaging&quot;</span><span class="fu">:</span> <span class="ot">[</span><span class="fu">{</span><span class="dt">&quot;sender&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;sender_id&quot;</span><span class="fu">,</span> <span class="dt">&quot;community&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;community_id&quot;</span><span class="fu">}},</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>        <span class="dt">&quot;recipient&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;id&quot;</span><span class="fu">:</span> <span class="st">&quot;recipient_id&quot;</span><span class="fu">},</span> <span class="dt">&quot;timestamp&quot;</span><span class="fu">:</span> <span class="dv">123</span><span class="fu">,</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>        <span class="dt">&quot;postback&quot;</span><span class="fu">:</span> <span class="fu">{</span><span class="dt">&quot;title&quot;</span><span class="fu">:</span> <span class="st">&quot;postback_title&quot;</span><span class="fu">,</span> <span class="dt">&quot;payload&quot;</span><span class="fu">:</span> <span class="st">&quot;payload&quot;</span><span class="fu">}}</span><span class="ot">]</span><span class="fu">}</span><span class="ot">]</span><span class="fu">}</span></span></code></pre></div>
<p>Обратите внимание на последнюю строку <code>json</code> сообщения, в первом случае передается <code>message</code>, а во втором <code>postback</code>. Данных много, но мне из этого всего нужен только <code>sender_id</code> - уникальный идентификатор отправителя (нужен для того, чтобы послать ему ответ) и <code>text</code> либо <code>payload</code> - текст сообщения, которое пользователь послал боту, либо <code>payload</code> (свойство <code>payload</code> назначается кнопке на help сообщении и присылается боту при ее нажатии пользователем).</p>
<p>Парсить все это я буду в такую незатейливую структуру данных:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">Messages</span> <span class="ot">=</span> <span class="dt">Messages</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  {<span class="ot"> messages ::</span> <span class="dt">NonEmpty</span> <span class="dt">Message</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="kw">data</span> <span class="dt">Message</span> <span class="ot">=</span> <span class="dt">Message</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>  {<span class="ot"> sender_id ::</span> <span class="dt">String</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>  ,<span class="ot"> text      ::</span> <span class="dt">String</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>  }</span></code></pre></div>
<p>Для парсинга была выбрана стандартная для этой задачи библиотека <code>Aeson</code>, требующая “реализовать” интерфейс <code>FromJSON</code>. Не пугаемся незнакомому синтаксису, я все объясню…</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">instance</span> <span class="dt">FromJSON</span> <span class="dt">Messages</span> <span class="kw">where</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  parseJSON <span class="ot">=</span> withObject <span class="st">&quot;root object&quot;</span> <span class="op">$</span> \root <span class="ot">-&gt;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    root <span class="op">.:</span> <span class="st">&quot;entry&quot;</span> <span class="op">&gt;&gt;=</span> <span class="fu">fmap</span> (<span class="dt">Messages</span> <span class="op">.</span> fromList <span class="op">.</span> toList  <span class="op">.</span> join) <span class="op">.</span> withArray <span class="st">&quot;entries array&quot;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>      (<span class="fu">mapM</span> <span class="op">$</span> withObject <span class="st">&quot;entry object&quot;</span> <span class="op">$</span> \entry <span class="ot">-&gt;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>        entry <span class="op">.:</span> <span class="st">&quot;messaging&quot;</span> <span class="op">&gt;&gt;=</span> withArray <span class="st">&quot;messaging array&quot;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>          (<span class="fu">mapM</span> <span class="op">$</span> withObject <span class="st">&quot;message object&quot;</span> <span class="op">$</span> \message <span class="ot">-&gt;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>            <span class="dt">Message</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>              <span class="op">&lt;$&gt;</span> (message <span class="op">.:</span> <span class="st">&quot;sender&quot;</span> <span class="op">&gt;&gt;=</span> (<span class="op">.:</span> <span class="st">&quot;id&quot;</span>))</span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>              <span class="op">&lt;*&gt;</span> (  (message <span class="op">.:</span> <span class="st">&quot;message&quot;</span> <span class="op">&gt;&gt;=</span> (<span class="op">.:</span> <span class="st">&quot;text&quot;</span>))</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>                 <span class="op">&lt;|&gt;</span> (message <span class="op">.:</span>  <span class="st">&quot;postback&quot;</span> <span class="op">&gt;&gt;=</span> (<span class="op">.:</span> <span class="st">&quot;payload&quot;</span>))</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>                  )</span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>          )</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>      )</span></code></pre></div>
<p>Основой является функция <code>withObject</code>, первый параметр которой служебный - название объекта, который мы собираемся парсить. Первый, самый главный объект обзовём <code>root object</code>. Второй параметр - это λ (lambda) - то есть функция, которая на вход принимает уже распаршенный <code>root</code> объект и дальше вольна делать с ним все что ей хочется. А хочется ей взять (при помощи оператора <code>.:</code>, чтобы было похоже на разделитель <code>:</code> ключ-значение из <code>json</code>-а) из <code>root</code> объекта поле по ключу <code>"entry"</code> и начать его парсить (<code>&gt;&gt;=</code>) дальше.</p>
<p>Пока опустим магию <code>fmap (Messages . fromList . toList  . join)</code>, о ней позже. Что в <code>json</code>-е лежит по ключу <code>"entry"</code>? А там массив, значит необходимо воспользоваться функцией <code>withArray</code> первый параметр которой, по традиции - описание того, что сейчас парсим. Нужны эти описания, к слову, для того, чтобы при ошибке парсинга вывести понятную ошибку, например ошибка для <code>json</code>-а <code>{"object": "page", "entry": 123}</code> будет такая: <code>parsing entries array failed, expected Array, but encountered Number</code>. Так что наличие этих описаний полезно как для <code>debug</code>-а, так и для информативности ошибок будущего софта.</p>
<p>Парсим <code>entry object</code>, <code>messaging array</code> и <code>message object</code> уже знакомыми нам <code>withObject</code> и <code>withArray</code>, попутно не забывая итерироваться по ним при помощи <code>mapM</code> (аналог простого <code>map</code>, парсим мы все же массивы, на выходе тоже должны быть массивы). Подошли к самому интересному, созданию итоговых объектов <code>Message</code>.</p>
<p>Конструктор <code>Message</code> (в данном случае <code>Message</code> – это название “конструктора” для создания одноименной структуры <code>Message</code>), принимает две строки - <code>sender_id</code> и <code>text</code>. В Процессе парсинга, у нас нет “строк” (с типом <code>String</code>), есть только “парсеры, которые могут вернуть строку” (с типом <code>Parser String</code>). Так что приходится пользоваться операторами <code>&lt;$&gt;</code> и <code>&lt;*&gt;</code> для того, чтобы увязать парсеры строк и строки между собой. Фактически, оператором <code>&lt;$&gt;</code> мы “учим” конструктор <code>Message</code> принимать вместо строк - парсеры строк.</p>
<p>На месте первого параметра (там где должен быть <code>sender_id</code>) передаем парсер <code>message .: "sender" &gt;&gt;= (.: "id")</code> - его можно перевести на “человеческий” язык как “когда я буду парсить <code>message</code>, я возьму у него свойство <code>sender</code>, а у его содержимого возьму свойство <code>id</code>”. То есть этот парсер, способен обработать json <code>"sender": {"id": "sender_id", "community": {"id": "community_id"}}</code>, вернув при этом только <code>sender_id</code> и проигнорировав все остальное, чего нам и нужно.</p>
<p>Аналогичным образом можно поступить и с <code>text</code> только вот не всегда <code>"message": {"mid": "mid", "text": "text"}}</code> от <code>Facebook</code> в этом месте приходит, иногда ещё и <code>"postback": {"title": "postback_title", "payload": "payload"}}</code> может быть. Мощь и изящество <code>parsing combinator</code>-ов раскрывается как раз в таких случаях. Комбинатор <code>&lt;|&gt;</code> говорит - сначала попытайся применить парсер, который слева от меня <code>(message .: "message" &gt;&gt;= (.: "text")</code>, а если он вернёт ошибку парсинга - попробуй тот, который от меня справа <code>message .:  "postback" &gt;&gt;= (.: "payload")</code>. В итоге, выражение <code>(message .: "message" &gt;&gt;= (.: "text")) &lt;|&gt; (message .:  "postback" &gt;&gt;= (.: "payload"))</code> распарсит либо цепочку <code>message-&gt;text</code> либо <code>postpack-&gt;payload</code> и вернет строку <code>String</code>. Мы скомбинировали два строковых парсера и получили на выходе тоже “парсер строк”, реализующий собой операцию “выбора”, на что намекал знак <code>|</code> в комбинаторе <code>&lt;|&gt;</code>.</p>
<p>Вспомним теперь про два вложенных друг в друга <code>mapM</code>. На уровне <code>root object</code>-а получается, что мы сформировали список списков сообщений, точнее вектор векторов (так как <code>Aeson</code> работает с векторами а не списками) то есть <code>Vector (Vector Message)</code>. Для его “схлопывания” применим <code>join</code>, превратив <code>Vector (Vector Message)</code> в <code>Vector Message</code>, затем (операцию <code>.</code> стоит “читать” слева направо, так как он право-ассоциативен) конвертируем <code>Vector</code> в список при помощи <code>toList</code>, список в <code>NonEmpty</code> (это вид списков, которые не могут быть пусты, ведь должно же в нотификации от <code>Facebook</code> быть хотя бы одно сообщение пользователя) при помощи <code>fromList</code> и передадим это все в конструктор <code>Messages</code>.</p>
<p>Ух, похоже это тот самый случай, когда объяснение кода заняло раз в 10 больше символов, чем сам код… Но что в итоге? Мы можем парсить два разных сообщения в одну структуру данных, с которой работает бот. Для него ведь не важно, сам пользователь написал в чате <code>/help</code> или воспользовался кнопкой-подсказкой. Реагировать бот на это должен одинаково. Тесты успешно проходят:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>describe <span class="st">&quot;Messages spec&quot;</span> <span class="op">$</span> <span class="kw">do</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">let</span><span class="ot"> decoding ::</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Messages</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>      decoding <span class="ot">=</span> fromJust <span class="op">.</span> decode <span class="op">.</span> <span class="fu">pack</span> <span class="op">.</span> unpack</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>  it <span class="st">&quot;parses text message properly&quot;</span> <span class="op">$</span> <span class="kw">do</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    decoding [I.text<span class="op">|</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>      { <span class="st">&quot;object&quot;</span><span class="op">:</span> <span class="st">&quot;page&quot;</span>,</span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;entry&quot;</span><span class="op">:</span> [{<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;id&quot;</span>, <span class="st">&quot;time&quot;</span><span class="op">:</span> <span class="dv">1</span>,</span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>          <span class="st">&quot;messaging&quot;</span><span class="op">:</span> [{</span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;sender&quot;</span><span class="op">:</span> {<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;sender_id&quot;</span>, <span class="st">&quot;community&quot;</span><span class="op">:</span> {<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;id&quot;</span>}},</span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;recipient&quot;</span><span class="op">:</span> {<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;id&quot;</span>}, <span class="st">&quot;timestamp&quot;</span><span class="op">:</span> <span class="dv">1</span>,</span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;message&quot;</span><span class="op">:</span> {<span class="st">&quot;mid&quot;</span><span class="op">:</span> <span class="st">&quot;mid&quot;</span>, <span class="st">&quot;text&quot;</span><span class="op">:</span> <span class="st">&quot;text&quot;</span>}}]}]}</span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>    <span class="op">|</span>] <span class="ot">`shouldBe`</span> (<span class="dt">Messages</span> <span class="op">$</span> (<span class="dt">Message</span> <span class="st">&quot;sender_id&quot;</span> <span class="st">&quot;text&quot;</span>) <span class="op">:|</span> [])</span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>  it <span class="st">&quot;parses postback message properly&quot;</span> <span class="op">$</span> <span class="kw">do</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>    decoding [I.text<span class="op">|</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>      { <span class="st">&quot;object&quot;</span><span class="op">:</span> <span class="st">&quot;page&quot;</span>,</span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;entry&quot;</span><span class="op">:</span> [{<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;id&quot;</span>, <span class="st">&quot;time&quot;</span><span class="op">:</span> <span class="dv">1</span>,</span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>          <span class="st">&quot;messaging&quot;</span><span class="op">:</span> [{<span class="st">&quot;sender&quot;</span><span class="op">:</span> {<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;sender_id&quot;</span>, <span class="st">&quot;community&quot;</span><span class="op">:</span> {<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;id&quot;</span>}},</span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;recipient&quot;</span><span class="op">:</span> {<span class="st">&quot;id&quot;</span><span class="op">:</span> <span class="st">&quot;id&quot;</span>}, <span class="st">&quot;timestamp&quot;</span><span class="op">:</span> <span class="dv">1</span>,</span>
<span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a>            <span class="st">&quot;postback&quot;</span><span class="op">:</span> {<span class="st">&quot;title&quot;</span><span class="op">:</span> <span class="st">&quot;title&quot;</span>, <span class="st">&quot;payload&quot;</span><span class="op">:</span> <span class="st">&quot;payload&quot;</span>}}]}]}</span>
<span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">|</span>] <span class="ot">`shouldBe`</span> (<span class="dt">Messages</span> <span class="op">$</span> <span class="dt">Message</span> <span class="st">&quot;sender_id&quot;</span> <span class="st">&quot;payload&quot;</span> <span class="op">:|</span> [])</span>
<span id="cb5-23"><a href="#cb5-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-24"><a href="#cb5-24" aria-hidden="true" tabindex="-1"></a>  it <span class="st">&quot;fails to parse incomplete json&quot;</span> <span class="op">$</span> <span class="kw">do</span></span>
<span id="cb5-25"><a href="#cb5-25" aria-hidden="true" tabindex="-1"></a>    (eitherDecode <span class="st">&quot;{\&quot;object\&quot;: \&quot;page\&quot;}&quot;</span><span class="ot"> ::</span> <span class="dt">Either</span> <span class="dt">String</span> <span class="dt">Messages</span>) <span class="ot">`shouldBe`</span> <span class="dt">Left</span> <span class="st">&quot;Error in $: key \&quot;entry\&quot; not found&quot;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 27 Feb 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2020-02-27-aeson-parsing.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Some things are always true</title>
    <link>https://maksar.github.io/posts/WAT/2020-02-22.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Some things are always true</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Some things are always true</h1>
    <article>
  <span class="header">
    February 22, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="there-is-always-some-hope">There is always some hope…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">String</span><span class="op">.</span><span class="fu">isValidPassword</span><span class="op">():</span> <span class="dt">Boolean</span> <span class="op">=</span> <span class="kw">this</span><span class="op">.</span>matches<span class="op">(</span>Regex<span class="op">(</span>PASSWORD_RULE<span class="op">))</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>        <span class="op">||</span> <span class="kw">true</span> <span class="co">//todo this TRUE is for validation while testing (test credentials has invalid password).</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 22 Feb 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-02-22.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Regularity</title>
    <link>https://maksar.github.io/posts/WAT/2020-02-14.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Regularity</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Regularity</h1>
    <article>
  <span class="header">
    February 14, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="i-love-regular-expressions">I love regular expressions…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span><span class="fu"> change_file()</span> <span class="kw">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="bu">local</span> <span class="va">row</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  <span class="bu">local</span> <span class="va">temp_row</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  <span class="cf">for</span> row <span class="kw">in</span> <span class="va">$(</span><span class="fu">grep</span> <span class="at">-E</span> <span class="st">&quot;</span><span class="dt">\&quot;\\</span><span class="st">$\{[^{]*}</span><span class="dt">\&quot;</span><span class="st">&quot;</span> <span class="op">&lt;</span> <span class="va">${1})</span><span class="kw">;</span> <span class="cf">do</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="va">temp_row</span><span class="op">=</span><span class="va">$(</span><span class="bu">echo</span> <span class="va">${row}</span> <span class="dt">\</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">|</span> <span class="fu">sed</span> <span class="at">-e</span> <span class="st">'s/\&quot;\${//; s/}\&quot;//;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="st">        s/\&quot;/\\\&quot;/g; s/\$/\\\$/g; s/[|]/\\|\$/g;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="st">        s/\[/\\\[/g; s/\]/\\\]/g; s/\&amp;/\\\&amp;/g'</span><span class="va">)</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="va">row</span><span class="op">=</span><span class="va">$(</span><span class="bu">echo</span> <span class="va">${row}</span> <span class="dt">\</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>     <span class="kw">|</span> <span class="fu">sed</span> <span class="at">-e</span> <span class="st">'s/\&quot;/\\\&quot;/g; s/\$/\\\$/g; s/\[/\\\[/g; s/\]/\\\]/g'</span><span class="va">)</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="fu">sed</span> <span class="at">-i</span> <span class="st">&quot;s/</span><span class="va">${row}</span><span class="st">/</span><span class="va">${temp_row}</span><span class="st">/1&quot;</span> <span class="va">${1}</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>  <span class="cf">done</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="kw">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 14 Feb 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-02-14.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Rendering collections</title>
    <link>https://maksar.github.io/posts/WAT/2020-02-11.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Rendering collections</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Rendering collections</h1>
    <article>
  <span class="header">
    February 11, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="no-escape">No escape…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;block-content&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;products-</span><span class="er">&lt;</span><span class="st">?= /* @noEscape */ $mode ?&gt; </span><span class="er">&lt;</span><span class="st">?= /* @noEscape */ $mode ?&gt;&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;ol</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;product-items </span><span class="er">&lt;</span><span class="st">?= /* @noEscape */ $type ?&gt;&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;?php</span> $iterator = 1; <span class="kw">?&gt;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;?php</span> foreach ($items as $_item) : <span class="kw">?&gt;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;?</span>= /* @noEscape */ ($iterator++ == 1) ? '&lt;li class=&quot;product-item&quot;&gt;' : '&lt;/li&gt;&lt;li class=&quot;product-item&quot;&gt;' <span class="kw">?&gt;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;product-item-info&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">&lt;a</span> <span class="er">href</span><span class="ot">=</span><span class="st">&quot;</span><span class="er">&lt;</span><span class="st">?= $block-&gt;escapeUrl($_item-&gt;getUrl()) ?&gt;&quot;</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;product-item-photo&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>                        <span class="kw">&lt;img</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;img-responsive&quot;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="ot">                             src=</span><span class="st">&quot;</span><span class="er">&lt;</span><span class="st">?= $block-&gt;resizeImage($_item-&gt;getImage()) ?&gt;&quot;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="ot">                             alt=</span><span class="st">&quot;</span><span class="er">&lt;</span><span class="st">?= $block-&gt;escapeHtml($_item-&gt;getName()); ?&gt;&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">&lt;/a&gt;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">&lt;div</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;product-item-details&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>                        <span class="kw">&lt;strong</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;product-item-name&quot;</span><span class="kw">&gt;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">&lt;?</span>= $block-&gt;escapeHtml($_item-&gt;getName()) <span class="kw">?&gt;</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>                        <span class="kw">&lt;/strong&gt;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>                        <span class="kw">&lt;p&gt;&lt;?</span>= $_item-&gt;getShortDescription() <span class="kw">?&gt;&lt;/p&gt;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>                    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>                <span class="kw">&lt;?</span>= ($iterator == count($items) + 1) ? '&lt;/li&gt;' : '' <span class="kw">?&gt;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>            <span class="kw">&lt;?php</span> endforeach; <span class="kw">?&gt;</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;/ol&gt;</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>  <span class="kw">&lt;/div&gt;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/div&gt;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 11 Feb 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2020-02-11.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Workplace bot for managing Active Directory groups</title>
    <link>https://maksar.github.io/posts/projects/2020-02-07-ldap-bot.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Workplace bot for managing Active Directory groups</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Workplace bot for managing Active Directory groups</h1>
    <article>
  <span class="header">
    February  7, 2020 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/projects.html">projects</a> #<a href="../../tags/haskell.html">haskell</a> #<a href="../../tags/polysemy.html">polysemy</a> #<a href="../../tags/aeson.html">aeson</a> #<a href="../../tags/servant.html">servant</a>
  </span>
  <section>
    <p>Here is a facebook bot (we use facebook’s Workplace product as an intranet collaboration point) to manage AD groups.</p>
<!--more-->
<p><a href="../../images/ldap-bot/1.png" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/ldap-bot/1.png" /></a> <a href="../../images/ldap-bot/2.png" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/ldap-bot/2.png" /></a> <a href="../../images/ldap-bot/3.png" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/ldap-bot/3.png" /></a> <a href="../../images/ldap-bot/4.png" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/ldap-bot/4.png" /></a> <a href="../../images/ldap-bot/5.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/ldap-bot/5.jpg" /></a> <a href="../../images/ldap-bot/6.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/ldap-bot/6.jpg" /></a></p>
<h2 id="history">History</h2>
<p>Since our organization migrated to hybrid schema (AD “on land” and Azure AD “in cloud”), it is no longer possible for employees connected to the on-premises server to manage the AD groups. While our IT department is figuring out a way to provide management abilities to the employees, I decided to create a simple way to add/remove people into AD groups (our access policies depend on group membership).</p>
<p>It started as a typical pet project, but I wanted to try new things along the way. First implementation was very straightforward (no ReaderT pattern, explicit passing of configuration values). When I felt the urge to write some tests, it became clear that full integration tests is not an option – neither facebook doesn’t like to be bombarded with messages, nor LDAP server. So I introduced a <a href="https://github.com/lexi-lambda/freer-simple">freer-simple</a> effects system, which was later replaced with <a href="https://github.com/polysemy-research/polysemy">polysemy</a>. It makes it possible to swap out some effects with mocks and write well-organized unit tests (I’m not saying they look pretty, they have to mock a lot of things after all).</p>
<p>At that time, the project was dockerized. I even achieved some remarkable results with statically compiling it with <code>musl</code>, UPC-ing the result and packing everything into scratch-based docker image (more on that in attachments). But deployment was a little bit complicated, since I had to either build docker images on a target host or use companies (which was also created and configured by me) docker registry. I started to explore options and got a second chance to look at NIX and <a href="https://github.com/NixOS/nixops">nixops</a> (currently I cannot imagine how I lived without it). So I NIX-ified the bot and even switched to the <a href="https://github.com/input-output-hk/haskell.nix">haskell.nix</a> alternative haskell nix infrastructure.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode nix"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ex">outputs</span> = { self, flake-utils, haskell-nix }:</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="ex">flake-utils.lib.eachSystem</span> <span class="er">(</span><span class="ex">builtins.attrNames</span> haskell-nix.legacyPackages<span class="kw">)</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">(</span><span class="ex">system:</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>      <span class="ex">with</span> haskell-nix.legacyPackages.<span class="va">${system}</span><span class="kw">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>      <span class="bu">let</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="ex">compiler-nix-name</span> = <span class="st">&quot;ghc8104&quot;</span><span class="kw">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="ex">project</span> = pkgs.haskell-nix.cabalProject {</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>          <span class="ex">inherit</span> compiler-nix-name<span class="kw">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>          <span class="ex">src</span> = pkgs.haskell-nix.haskellLib.cleanGit {</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>            <span class="ex">name</span> = <span class="st">&quot;sources&quot;</span><span class="kw">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>            <span class="ex">src</span> = ./.<span class="kw">;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>          <span class="er">}</span><span class="kw">;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>          <span class="ex">index-state</span> = <span class="st">&quot;2021-03-10T00:00:00Z&quot;</span><span class="kw">;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>          <span class="ex">plan-sha256</span> = <span class="st">&quot;1rsd9xcvkgmjx68zgnfz3rdfg5f3yfn7b7j7k7aqyicnxfdjs21k&quot;</span><span class="kw">;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>          <span class="ex">materialized</span> = ./materialized/ldap-bot<span class="kw">;</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>        <span class="er">}</span><span class="kw">;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>      <span class="er">in</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>      <span class="ex">rec</span> {</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="ex">defaultApp</span> = {</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>          <span class="bu">type</span> = <span class="st">&quot;app&quot;</span><span class="kw">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>          <span class="ex">program</span> = <span class="st">&quot;</span><span class="va">${defaultPackage}</span><span class="st">/bin/ldap-bot-facebook&quot;</span><span class="kw">;</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>        <span class="er">}</span><span class="kw">;</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>        <span class="ex">packages</span> = {</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>          <span class="ex">facebook</span> = project.ldap-bot.components.exes.ldap-bot-facebook<span class="kw">;</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>          <span class="ex">console</span> = project.ldap-bot.components.exes.ldap-bot-console<span class="kw">;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>        <span class="er">}</span><span class="kw">;</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>        <span class="ex">defaultPackage</span> = packages.facebook<span class="kw">;</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="ex">devShell</span> = project.shellFor {</span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>          <span class="ex">tools</span> = {</span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>            <span class="ex">ormolu</span> = <span class="st">&quot;latest&quot;</span><span class="kw">;</span></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>            <span class="ex">hlint</span> = <span class="st">&quot;latest&quot;</span><span class="kw">;</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>            <span class="ex">cabal</span> = <span class="st">&quot;latest&quot;</span><span class="kw">;</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>            <span class="ex">haskell-language-server</span> = <span class="st">&quot;latest&quot;</span><span class="kw">;</span></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>            <span class="ex">hoogle</span> = <span class="st">&quot;latest&quot;</span><span class="kw">;</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>            <span class="ex">hspec-discover</span> = <span class="st">&quot;latest&quot;</span><span class="kw">;</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>          <span class="er">}</span><span class="kw">;</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>        <span class="er">}</span><span class="kw">;</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a>      <span class="er">}</span></span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>    <span class="kw">);</span></span></code></pre></div>
<p>Along with that, following my built-in craving for minimalism, I decided to try out bare cabal instead of stack, which wasn’t the greatest experience (since stack is much-more user friendly and solved a lot of existing problems for you). But finally, with help of nix flakes, the project can be built the same way on <code>darwin</code> and <code>linux</code> systems.</p>
<p>Continuing to use the bot myself, I felt repeating pain of opening a browser and navigating to the facebook chat each time I have to add or remove someone from the group or even see who is the group manager (using <a href="https://linux.die.net/man/1/ldapsearch">ldapsearch</a> linux utility is not so pleasant, it’s output is quite cumbersome). So I decided to add a terminal interface to the bot. Same functions, but accessed from the terminal. Having nix in place, deployment configuration has changed only slightly, but I am free of browser pain now.</p>
<h2 id="internals">Internals</h2>
<p>I used <a href="https://hackage.haskell.org/package/servant-client">servant-client</a> to “<a href="https://github.com/maksar/ldap-bot/blob/master/src/Client/API.hs#L40-L44">talk</a>” to facebook via it’s graph API (do not confuse with GraphQL).</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">FBMessengerSendAPI</span> <span class="ot">=</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>  <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">:&lt;|&gt;</span> <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">ServiceMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">:&lt;|&gt;</span> <span class="st">&quot;me&quot;</span> <span class="op">:&gt;</span> <span class="st">&quot;messages&quot;</span> <span class="op">:&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">HelpMessageRequest</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] <span class="dt">SendTextMessageResponse</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">:&lt;|&gt;</span> <span class="dt">Capture</span> <span class="st">&quot;user_id&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;fields&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">AccessTokenParam</span> <span class="op">:&gt;</span> <span class="dt">Get</span> '[<span class="dt">JSON</span>] <span class="dt">GetUserInfoMessageResponse</span></span></code></pre></div>
<p><a href="https://hackage.haskell.org/package/servant-server">servant-server</a> is used to publish <a href="https://github.com/maksar/ldap-bot/blob/master/src/Server/API.hs#L27-L29">two endpoints</a> facebook will hit whenever a new message arrives to the bot. All communication is JSON-based backed by <a href="https://hackage.haskell.org/package/aeson">aeson</a> library.</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">type</span> <span class="dt">WebHookAPI</span> <span class="ot">=</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>  <span class="dt">RequiredParam</span> <span class="st">&quot;hub.verify_token&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">RequiredParam</span> <span class="st">&quot;hub.challenge&quot;</span> <span class="dt">Text</span> <span class="op">:&gt;</span> <span class="dt">Get</span> '[<span class="dt">PlainText</span>] <span class="dt">Text</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>    <span class="op">:&lt;|&gt;</span> <span class="dt">ReqBody</span> '[<span class="dt">JSON</span>] <span class="dt">Messages</span> <span class="op">:&gt;</span> <span class="dt">Post</span> '[<span class="dt">JSON</span>] (<span class="dt">NonEmpty</span> (<span class="dt">Either</span> <span class="dt">Text</span> <span class="dt">SendTextMessageResponse</span>))</span></code></pre></div>
<p>Instead of blindly mapping incoming messages to the data structures with the same shape, I decided to write a custom <a href="https://github.com/maksar/ldap-bot/blob/master/src/Server/Model.hs#L32">FromJSON</a> instance to flatten the payload (facebook’s message format is a bit crazy).</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">instance</span> <span class="dt">FromJSON</span> <span class="dt">Messages</span> <span class="kw">where</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>  parseJSON <span class="ot">=</span> withObject <span class="st">&quot;root object&quot;</span> <span class="op">$</span> \root <span class="ot">-&gt;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    root <span class="op">.:</span> <span class="st">&quot;entry&quot;</span> <span class="op">&gt;&gt;=</span> <span class="fu">fmap</span> (<span class="dt">Messages</span> <span class="op">.</span> fromList <span class="op">.</span> toList <span class="op">.</span> join)</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>      <span class="op">.</span> withArray <span class="st">&quot;entries array&quot;</span> ( <span class="fu">mapM</span> <span class="op">$</span> withObject <span class="st">&quot;entry object&quot;</span> <span class="op">$</span> \entry <span class="ot">-&gt;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>          entry <span class="op">.:</span> <span class="st">&quot;messaging&quot;</span> <span class="op">&gt;&gt;=</span> withArray<span class="st">&quot;messaging array&quot;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>            ( <span class="fu">mapM</span> <span class="op">$</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>                withObject <span class="st">&quot;message object&quot;</span> <span class="op">$</span> \message <span class="ot">-&gt;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>                  <span class="dt">Message</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>                    <span class="op">&lt;$&gt;</span> (message <span class="op">.:</span> <span class="st">&quot;sender&quot;</span> <span class="op">&gt;&gt;=</span> (<span class="op">.:</span> <span class="st">&quot;id&quot;</span>))</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>                    <span class="op">&lt;*&gt;</span> (  (message <span class="op">.:</span> <span class="st">&quot;message&quot;</span> <span class="op">&gt;&gt;=</span> (<span class="op">.:</span> <span class="st">&quot;text&quot;</span>))</span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>                       <span class="op">&lt;|&gt;</span> (message <span class="op">.:</span> <span class="st">&quot;postback&quot;</span> <span class="op">&gt;&gt;=</span> (<span class="op">.:</span> <span class="st">&quot;payload&quot;</span>))</span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>                        )</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>            )</span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>        )</span></code></pre></div>
<p>LDAP communication is done with the help of <a href="https://hackage.haskell.org/package/ldap-client">ldap-client</a> library, which is a high-level binding from corresponding C library. Lenses are used to create <a href="https://github.com/maksar/ldap-bot/blob/master/src/Env.hs#L79">isomorphisms</a> between parsed and raw configuration values (for testing environment configuration in a generic way).</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="ot">settings ::</span> <span class="dt">Functor</span> f <span class="ot">=&gt;</span> [(<span class="dt">Text</span>, (<span class="dt">Text</span> <span class="ot">-&gt;</span> f <span class="dt">Text</span>) <span class="ot">-&gt;</span> <span class="dt">Config</span> <span class="ot">-&gt;</span> f <span class="dt">Config</span>)]</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>settings <span class="ot">=</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>  [ (<span class="st">&quot;LDAP_BOT_LDAP_HOST&quot;</span>, ldapHost),</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_LDAP_PORT&quot;</span>, ldapPort <span class="op">.</span> isoRead <span class="op">.</span> packed),</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_PORT&quot;</span>, port <span class="op">.</span> isoRead <span class="op">.</span> packed),</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_VERIFY_TOKEN&quot;</span>, verifyToken),</span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_PAGE_TOKEN&quot;</span>, pageToken),</span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_USERNAME&quot;</span>, user),</span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_PASSWORD&quot;</span>, password),</span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_USERS_CONTAINER&quot;</span>, activeUsersContainer <span class="op">.</span> isoDn),</span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_USERS_ORGUNITS&quot;</span>, activeUsersOrgunits <span class="op">.</span> isoNonEmpty <span class="op">.</span> splitted),</span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_GROUPS_CONTAINER&quot;</span>, projectGroupsContainer <span class="op">.</span> isoDn),</span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_GROUPS_ORGUNITS&quot;</span>, projectGroupsOrgunits <span class="op">.</span> isoNonEmpty <span class="op">.</span> splitted),</span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>    (<span class="st">&quot;LDAP_BOT_TERMINAL_USERNAME&quot;</span>, terminalUsername)</span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>  ]</span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>  <span class="kw">where</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a><span class="ot">    isoRead ::</span> (<span class="dt">Read</span> a, <span class="dt">Show</span> a) <span class="ot">=&gt;</span> <span class="dt">Iso'</span> a <span class="dt">String</span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>    isoRead <span class="ot">=</span> iso <span class="fu">show</span> <span class="fu">read</span></span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>    isoDn <span class="ot">=</span> iso (\(<span class="dt">Dn</span> dn) <span class="ot">-&gt;</span> dn) <span class="dt">Dn</span></span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>    isoNonEmpty <span class="ot">=</span> iso toList fromList</span>
<span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a>    splitted <span class="ot">=</span> iso (intercalate <span class="st">&quot;,&quot;</span>) (splitOn <span class="st">&quot;,&quot;</span>)</span></code></pre></div>
<p><a href="https://hackage.haskell.org/package/polysemy">polysemy</a> is a star of the show which allows it to separate the domain language from its interpretation, inject logging in the middle of the effects stack, write mock versions of <a href="https://github.com/maksar/ldap-bot/blob/master/test/Client/FacebookSpec.hs#L105">facebook</a>, <a href="https://github.com/maksar/ldap-bot/blob/master/test/Server/LDAPSpec.hs#L68">LDAP</a> and some internal <a href="https://github.com/maksar/ldap-bot/blob/master/test/Server/RegistrySpec.hs#L58">effects</a>.</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="ot">fakeFacebook ::</span> (<span class="dt">Member</span> (<span class="dt">Error</span> <span class="dt">Text</span>) r) <span class="ot">=&gt;</span> <span class="dt">GroupModificationHandler</span> <span class="ot">-&gt;</span> <span class="dt">InterpreterFor</span> <span class="dt">FacebookEffect</span> r</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>fakeFacebook handler <span class="ot">=</span> interpret <span class="op">$</span> \<span class="kw">case</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ModifyGroup</span> _ _ <span class="ot">-&gt;</span> handler</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>  <span class="dt">SendText</span> (<span class="dt">SendTextMessageRequest</span> (<span class="dt">Base</span> account) (<span class="dt">SendTextMessage</span> _)) <span class="ot">-&gt;</span> <span class="fu">return</span> <span class="op">$</span> <span class="dt">SendTextMessageResponse</span> account</span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>  <span class="dt">GetInfo</span> _ <span class="ot">-&gt;</span> <span class="fu">return</span> <span class="op">$</span> <span class="dt">GetUserInfoMessageResponse</span> <span class="st">&quot;account_email@example.com&quot;</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ServiceMessage</span> (<span class="dt">ServiceMessageRequest</span> (<span class="dt">Base</span> account) _) <span class="ot">-&gt;</span> <span class="fu">return</span> <span class="op">$</span> <span class="dt">SendTextMessageResponse</span> account</span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>  <span class="dt">SendHelp</span> (<span class="dt">HelpMessageRequest</span> recipient_id) <span class="ot">-&gt;</span> <span class="fu">return</span> <span class="op">$</span> <span class="dt">SendTextMessageResponse</span> recipient_id</span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a><span class="ot">fakeLdap ::</span> (<span class="dt">Member</span> (<span class="dt">Writer</span> [<span class="dt">Text</span>]) r, <span class="dt">Member</span> (<span class="dt">Reader</span> <span class="dt">Config</span>) r) <span class="ot">=&gt;</span> [(<span class="dt">Text</span>, [<span class="dt">SearchEntry</span>])] <span class="ot">-&gt;</span> [(<span class="dt">Text</span>, [<span class="dt">SearchEntry</span>])] <span class="ot">-&gt;</span> <span class="dt">Sem</span> (<span class="dt">LdapEffect</span> <span class="op">:</span> r) a <span class="ot">-&gt;</span> <span class="dt">Sem</span> r a</span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>fakeLdap users groups <span class="ot">=</span> interpret <span class="op">$</span> \<span class="kw">case</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>  <span class="dt">SearchLdap</span> (<span class="dt">Dn</span> base) _mod searchFilter attributes <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>    <span class="dt">Config</span> {_activeUsersContainer, _projectGroupsContainer} <span class="ot">&lt;-</span> ask</span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>    tell [<span class="fu">pack</span> <span class="op">$</span> <span class="st">&quot;Searching in &quot;</span> <span class="op">++</span> unpack base <span class="op">++</span> <span class="st">&quot; with filter &quot;</span> <span class="op">++</span> showFilter searchFilter <span class="op">++</span> <span class="st">&quot; and attributes (&quot;</span> <span class="op">++</span> unpack (showAttributes attributes) <span class="op">++</span> <span class="st">&quot;)&quot;</span>]</span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>    <span class="kw">let</span> container <span class="ot">=</span> fromJust <span class="op">$</span> <span class="fu">lookup</span> (<span class="dt">Dn</span> base) [(_activeUsersContainer, users), (_projectGroupsContainer, groups)]</span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a>    <span class="fu">return</span> <span class="op">$</span> fromMaybe [] <span class="op">$</span> <span class="fu">lookup</span> (extractFilter searchFilter) container</span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ModifyLdap</span> (<span class="dt">Dn</span> base) [operation] <span class="ot">-&gt;</span> <span class="kw">do</span></span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a>    tell [<span class="fu">pack</span> <span class="op">$</span> <span class="st">&quot;Modifying in &quot;</span> <span class="op">++</span> unpack base <span class="op">++</span> <span class="st">&quot; with operation &quot;</span> <span class="op">++</span> showOperation operation]</span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a>    <span class="fu">return</span> ()</span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-20"><a href="#cb6-20" aria-hidden="true" tabindex="-1"></a><span class="ot">successCommandRegistry ::</span> <span class="dt">CommandAction</span> <span class="ot">-&gt;</span> <span class="dt">GroupKnowledge</span> <span class="ot">-&gt;</span> <span class="dt">GroupKnowledge</span> <span class="ot">-&gt;</span> <span class="dt">FakeInterpreter</span></span>
<span id="cb6-21"><a href="#cb6-21" aria-hidden="true" tabindex="-1"></a>successCommandRegistry commandAction requesterGroupKnowledge accountGroupKnowledge <span class="ot">=</span> \<span class="kw">case</span></span>
<span id="cb6-22"><a href="#cb6-22" aria-hidden="true" tabindex="-1"></a>  <span class="dt">GetGroupInformation</span> (<span class="dt">Append</span> (<span class="dt">Value</span> requester) (<span class="dt">Value</span> account) (<span class="dt">Value</span> <span class="fu">group</span>)) <span class="ot">-&gt;</span> getInfo requester account <span class="fu">group</span></span>
<span id="cb6-23"><a href="#cb6-23" aria-hidden="true" tabindex="-1"></a>  <span class="dt">GetGroupInformation</span> (<span class="dt">Remove</span> (<span class="dt">Value</span> requester) (<span class="dt">Value</span> account) (<span class="dt">Value</span> <span class="fu">group</span>)) <span class="ot">-&gt;</span> getInfo requester account <span class="fu">group</span></span>
<span id="cb6-24"><a href="#cb6-24" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ModifyRegistry</span> (<span class="dt">Confirmed</span> (<span class="dt">Append</span> (<span class="dt">Value</span> (<span class="dt">SearchEntry</span> (<span class="dt">Dn</span> requester) [])) (<span class="dt">Value</span> (<span class="dt">SearchEntry</span> (<span class="dt">Dn</span> account) [])) (<span class="dt">Value</span> (<span class="dt">SearchEntry</span> (<span class="dt">Dn</span> <span class="fu">group</span>) [])))) <span class="ot">-&gt;</span> modifyRegistry <span class="st">&quot;appending&quot;</span> requester account <span class="fu">group</span></span>
<span id="cb6-25"><a href="#cb6-25" aria-hidden="true" tabindex="-1"></a>  <span class="dt">ModifyRegistry</span> (<span class="dt">Confirmed</span> (<span class="dt">Remove</span> (<span class="dt">Value</span> (<span class="dt">SearchEntry</span> (<span class="dt">Dn</span> requester) [])) (<span class="dt">Value</span> (<span class="dt">SearchEntry</span> (<span class="dt">Dn</span> account) [])) (<span class="dt">Value</span> (<span class="dt">SearchEntry</span> (<span class="dt">Dn</span> <span class="fu">group</span>) [])))) <span class="ot">-&gt;</span> modifyRegistry <span class="st">&quot;removing&quot;</span> requester account <span class="fu">group</span></span>
<span id="cb6-26"><a href="#cb6-26" aria-hidden="true" tabindex="-1"></a>  <span class="kw">where</span></span>
<span id="cb6-27"><a href="#cb6-27" aria-hidden="true" tabindex="-1"></a><span class="ot">    getInfo ::</span> <span class="dt">Members</span> '[<span class="dt">Writer</span> [<span class="dt">Text</span>]] r <span class="ot">=&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Sem</span> r (<span class="dt">GroupKnowledge</span>, <span class="dt">GroupKnowledge</span>, <span class="dt">EnrichedCommand</span>)</span>
<span id="cb6-28"><a href="#cb6-28" aria-hidden="true" tabindex="-1"></a>    getInfo requester account <span class="fu">group</span> <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb6-29"><a href="#cb6-29" aria-hidden="true" tabindex="-1"></a>      tell [<span class="fu">unwords</span> [<span class="st">&quot;Getting information about&quot;</span>, <span class="fu">group</span>, <span class="st">&quot;and&quot;</span>, account, <span class="st">&quot;requested by&quot;</span>, requester]]</span>
<span id="cb6-30"><a href="#cb6-30" aria-hidden="true" tabindex="-1"></a>      <span class="fu">return</span> (requesterGroupKnowledge, accountGroupKnowledge, commandAction (<span class="dt">Value</span> <span class="op">$</span> <span class="dt">SearchEntry</span> (<span class="dt">Dn</span> requester) []) (<span class="dt">Value</span> <span class="op">$</span> <span class="dt">SearchEntry</span> (<span class="dt">Dn</span> account) []) (<span class="dt">Value</span> <span class="op">$</span> <span class="dt">SearchEntry</span> (<span class="dt">Dn</span> <span class="fu">group</span>) []))</span>
<span id="cb6-31"><a href="#cb6-31" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-32"><a href="#cb6-32" aria-hidden="true" tabindex="-1"></a><span class="ot">    modifyRegistry ::</span> <span class="dt">Members</span> '[<span class="dt">Writer</span> [<span class="dt">Text</span>]] r <span class="ot">=&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Text</span> <span class="ot">-&gt;</span> <span class="dt">Sem</span> r <span class="dt">Text</span></span>
<span id="cb6-33"><a href="#cb6-33" aria-hidden="true" tabindex="-1"></a>    modifyRegistry action requester account <span class="fu">group</span> <span class="ot">=</span> <span class="kw">do</span></span>
<span id="cb6-34"><a href="#cb6-34" aria-hidden="true" tabindex="-1"></a>      tell [<span class="fu">unwords</span> [<span class="st">&quot;Modifying&quot;</span>, <span class="fu">group</span>, <span class="st">&quot;by&quot;</span>, action, account, <span class="st">&quot;requested by&quot;</span>, requester]]</span>
<span id="cb6-35"><a href="#cb6-35" aria-hidden="true" tabindex="-1"></a>      <span class="fu">return</span> <span class="st">&quot;OK&quot;</span></span></code></pre></div>
<p>Code gets built by nix and deployed via <code>nixops</code> as a <code>systemd</code> service. First implementation of tests used <a href="https://hackage.haskell.org/package/validity">validity</a> and <a href="https://hackage.haskell.org/package/genvalidity">genvalidity</a> libraries from <a href="https://cs-syd.eu">Tom Sydney Kerckhove</a> (super nice Haskeller, met him on the <a href="https://cs-syd.eu/posts/2020-02-27-talk-writing-a-text-editor-in-haskell-with-brick">conference</a>), but then switched to <a href="https://hackage.haskell.org/package/QuickCheck">QuickCheck</a> and <a href="https://hackage.haskell.org/package/hspec">hspec</a>, since I don’t have a lot of data types to generate <code>Validity</code> (<code>Arbitrary</code> in <code>QuichCheck</code>’s terms) instances for.</p>
<p>Along the way of implementing and supporting that bot I wrote a number of <a href="../../posts/code/2020-02-27-aeson-parsing.html">articles</a> about it (also Haskell and FP in general). Unfortunately, the articles are in russian and have no version: my auditory was all russian speaking employees, so there was no point in doing so. I still think it would be beneficial to include them into the story: you can still squint on it and try to see the idea or maybe you do have a friend or colleague, who can understand it ;)</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 07 Feb 2020 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/projects/2020-02-07-ldap-bot.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Чеклист для проверки SDLC на проекте</title>
    <link>https://maksar.github.io/posts/code/2019-12-12-sdlc.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Чеклист для проверки SDLC на проекте</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Чеклист для проверки SDLC на проекте</h1>
    <article>
  <span class="header">
    December 12, 2019 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/git.html">git</a>
  </span>
  <section>
    <p>Опросник составлен с целью определения уровня риска, который вызван несовершенством SDLC процессов, применяемых на проекте. Влияние каждого отрицательного ответа на степень риска различна и будет определятся индивидуально. В том числе зависит от контекста проекта (размер, длительность, технология и т.д.)</p>
<p>Причина, по которой вам стоит потратить время на заполнение одна – это возможность взглянуть на положение дел на проекте “со стороны” и определиться с возможными улучшениями.</p>
<!--more-->
<p><a onclick="jQuery('summary').each(function() { jQuery(this).trigger('click'); }); return false;" href="#" style="float: right;">Развернуть всё</a></p>
<ul>
<li><strong>VCS</strong>
<ul>
<li><details>
<summary>
<p>Какая система контроля версий используется (git, svn, hg, tfs, etc.)?</p>
</summary>
<p>Вопрос направлен на выявление использования устаревших/несовременных систем контроля версий. Например, при работе с Subversion требуется несколько иной процесс работы с кодом и ветками, который может быть не знаком проектной команде. Так же при использовании SVN сложно применять best practices, описанные ниже в этом документе – организация работы через pull request-ы и т.д.</p>
</details></li>
<li><details>
<summary>
<p>Где хостится код (локально в компании, “у заказчика” или в общедоступном сервисе), в какой системе (Bitbucket, GitHub, GitLab, etc.)? Есть ли у репозитория “зеркала”?</p>
</summary>
<p>Вопрос направлен на выявление сложных сценариев работы с кодом, например – “репозиторий у заказчика, у нас локальное зеркало где мы ведем разработку и доставляем потом заказчику”. Такие сценарии требуют повышенного внимания со стороны технического лидера либо наличия нетривиальных знаний работы с VCS у членов команды либо продвинутой автоматизации процесса. Менеджеру, как и другим членам команды, важно понимать детали такого сценария работы. В идеале он должен быть формализован (описан).</p>
</details></li>
<li><details>
<summary>
<p>Как организован доступ к репозиторию (login/password, ssh ключи, etc.)? У каждого ли разработчика свои “креды”? Кто управляет выдачей и заменой ключей?</p>
</summary>
<p>Очень важно, чтобы доступ к репозиторию (даже в режиме “только чтение” был персонализирован. Отсутствие shared учетных записей позволяет идентифицировать действия пользователей, получать подробную историю и хронологию действий. Желательно, чтобы доступ из автоматизированных систем к репозиторию исходного кода был организован безопасно (с использованием отдельной пары ssh ключей) и обезличенно (не через учетную запись одного из разработчиков).</p>
<p>Не стоит “делиться” ключами доступа и/или лоном/паролем с коллегами, это противоречит политике использования паролей и может привести к нежелательным инцидентам.</p>
</details></li>
<li><details>
<summary>
<p>Какая модель branch-инга используется (gitflow, github-flow, trunk-based, etc.)? Перечислите одно или несколько названий “основных” веток.</p>
</summary>
<p>Хорошей практикой является использование одной из широко известной и описанной модели ветвлений. Если разработчик, отвечая на этот вопрос не приводит ее название – это повод к тому, чтобы закрепить с командой на очередном daily meeting-е этот момент – особенности, именование веток, требования к участникам команды предъявляемые моделью бранчевания и т.д.</p>
<p>Вопрос про названия веток нужен, чтобы выявить неявно используемую “модель” а так же понять существуют ли расхождения со “стандартом” (что чревато “костылями” в процессе работы над изменениями и доставками).</p>
</details></li>
<li><details>
<summary>
<p>Используют ли pull request-ы для разработки фичей и исправления багов? Обязательно ли их использование или опционально?</p>
</summary>
<p>Методика разработки через feature branches или pull requests является рекомендованной в компании. Она позволяет организовать максимально независимую работу разработчиков – без необходимости частой синхронизации между ними. Большим плюсом этой методики является простота участия всех членов проектной команды в процессе code review, так как каждая новая feature, исправленный дефект, или доставка версии представлены отдельными ветками в репозитории исходного кода. Желательно, чтобы любое вносимое в ПО изменение происходило через создание отдельной ветки и включение ее (после code review) в основной стрим (обычно, ветка master). Если на проекте используется trunk-based workflow (при котором разработчики работают с одной и той же веткой), то для организация эффективного code review процесса нетривиальна. Отсутствие запрета на прямое внесение изменений (push) в основные ветки разработки (develop, master) приводит к злоупотреблению “hot-fix”-ами для срочного решения проблем и, следовательно, не позволяет выстроить правильную deploy-rollback стратегию.</p>
</details></li>
<li><details>
<summary>
<p>Удаляются ли feature-ветки после merge-а в основной стрим? Проводится ли поддержка сразу нескольких версий приложения в параллельных ветках?</p>
</summary>
<p>Обилие веток, которые были смержены в основной стрим может запутать незнакомого с проектом человека, затруднить идентификацию важных веток (при их наличии) от тех, которые уже были влиты с основной стрим. Так что правилом хорошего тона является удаление feature-ветки после ее merge-а (в Bitbucket для этого есть специальная галочка в диалоговом окне merge-а).</p>
<p>Отрицательный ответ на него не критичен, однако может выявить наличие долго-живущих веток, в которых ведется разработка какого-либо большого изменений, что нередко спустя продолжительное время приводит к достаточно сложному процессу слияния в единый стрим.</p>
</details></li>
<li><details>
<summary>
<p>Обязательно ли исправление замечаний от reviewer-ов? Сбрасываются ли approve-ы после добавления новых комитов в pull request?</p>
</summary>
<p>Процесс code review направлен не только на улучшение качества кода проекта, но и на развитие коммуникации внутри команды, повышение технического уровня команды разработки. Если в процессе code review один из членов команды высказал замечание либо задал вопрос – он обязательно должен быть рассмотрен. В противном случае мотивация человека задающего вопросы быстро угаснет и польза от такого code review сойдет на нет. Если по какому-либо замечанию в процессе ревью возник спор/дискуссия – стоит убедиться, что команда пришла к единому конечному мнению.</p>
<p>Практика сбрасывать approve-ы после добавления нового комита опциональна, это очень удобно при наличии в команде разработки начинающих разработчиков, когда нет уверенности что комитом с исправлениями замечаний качество кода будут действительно улучшено. В сильных, состоявшихся командах такая практика не требуется, если разработчик уже поставил отметку approve на код, он предполагает, что последующие комиты будут носить косметический характер и не потребуют детального ревью всего pull request-а.</p>
</details></li>
<li><details>
<summary>
<p>Все ли члены команды могут/участвуют в code review?</p>
</summary>
<p>Важно, чтобы все разработчики из команды принимали участие в процессе code review. Это важно, так как code review предназначен не только для нахождения проблем в коде, но и для повышения квалификации разработчиков, которые принимают в нем участие, для поддержания общей ответственности за код (чтобы каждый разработчик из команды был знаком со всей кодовой базой, а не только со “своим модулем”), для развития внутри командного общения и повышения культуры разработки. Таким образом – мнение каждого члена команды, вне зависимости от его квалификации должно трактоваться с одинаковой важностью.</p>
</details></li>
<li><details>
<summary>
<p>Разрешены ли force push-ы в основные ветки, feature-ветки?</p>
</summary>
<p>Force-push это средство для “переписывания истории”. Его стоит рассматривать в двух контекстах – force push в feature ветки и force push в основные ветки. И если первое – допустимо (происходит в случае, когда разработчик в процессе работы над feature сделал много комитов и/или желает исправить один из них, делает force push в свою ветку, меняя историю комитов на иную), то второе – крайне нежелательно (при force push-е в основную ветку заменяется “история комитов” в основной ветке репозитория, что автоматически делает локальные копии у всех других разработчиков “несовместимыми” с версией кода в репозитории.</p>
<p>Force push бывает весьма полезен, но инструмент это достаточно опасный в неумелых руках. Рекомендуется возможность force push в репозитории отключать, во избежание опасных последствий и, собственно, изменения истории. Разработчики уделяют комментариям к комитам и их атомарности меньше внимания, когда знают, что в последствии можно будет все “подправить”. Само по себе это так и ужасно, однако порождает дополнительные сложности для внимательного review-ера, который решил запустить код в ветке у себя локально. При проведении последующей проверки в этой ветке он обнаружит, что простого git pull уже недостаточно для “подтягивания” последней версии. Так же замена комитов в pull request-е не позволяет понять когда и в какой последовательности разработчик вносил изменения. Предлагается быть честными с самими собой и коллегами и не пользоваться force push для того, чтобы “показаться лучше”.</p>
</details></li>
<li><details>
<summary>
<p>Практикуется ли линеаризация истории (при помощи rebase или squash) при финальном мерже веток? При работе над feature-веткой?</p>
</summary>
<p>Линеаризация истории – это такая практика, при которой стараются добиться линейности истории репозитория (как будто веток и не существовало вовсе). Аргументацией для таких действий служит “упрощение” для последующей работы с историей репозитория. Однако линеаризация, по сути, есть “изменение истории”, так как комиты в репозитории больше не отражают фактического порядка их добавления.</p>
<p>Существуют два способа достижения линеаризации: rebase и squash. При rebase-е все комиты в feature ветке, при ее присоединении к основному стриму разработки, помещаются на вершину дерева истории, как будто разработка и велась в основной ветке. При sqash-е перед финальным merge-ем изменений в основную ветку происходит “схлопывание” комитов в один, как будто все работы над feature были сделаны единовременно и сразу правильно (без исправлений в процессе code review).</p>
<p>Доводом против линеаризации служит такой аргумент: из полной истории репозитория всегда можно получить линеаризованную версию (например для передачи заказчику), а из линеаризованной (краткой, сокращенной) версии репозитория восстановить истинную историю уже не получится. Так же при использовании методики линеаризации часто необходимо разрешать force push в репозиторий, что влечет за собой все нюансы последнего.</p>
</details></li>
<li><details>
<summary>
<p>Настроены ли ограничения на формат commit messages и какие?</p>
</summary>
<p>Консистентность и подробность commit сообщений – важный аспект культуры разработки. Существуют общепринятые рекомендации и даже стандарты для оформления commit сообщений. Умение составлять качественные commit сообщения – такой же важный skill для разработчика, как и написание качественного кода, его можно и нужно тренировать. Так как на разных проектах могут применяться разные требования и ограничения для commit сообщений, хорошей практикой считается проверка сообщения на соответствие шаблону. Например, commit message в обязательном порядке должен содержать номер задачи в JIRA, над которой работал разработчик в процессе создания этого изменения кода. Менее популярным и более строгим требованием может служить ограничение на минимальную длину комит сообщения (для гарантирования подробности).</p>
<p>Нередко commit сообщения могут служить не только “для исторических скрижалей”, но и для взаимодействия с системой управления задачами, например.</p>
</details></li>
<li><details>
<summary>
<p>Обязательно ли указание номера задачи в commit сообщении? Как быть если задача “техническая” (рефакторинг, правка опечаток, version bump, другие действия, для которых нет задачи)?</p>
</summary>
<p>Для достижения большего уровня прозрачности для менеджера и/или заказчика, принято в каждом commit сообщений оставлять номер задачи, над которой трудился разработчик в момент commit-а. Это позволяет и настраивать интеграция JIRA с Bitbucket (или другой системой хостинга репозитория исходного кода) для просмотра “списка комитов по задаче” и легко находить задачу в рамках которой велась работа над интересующей строчкой исходного кода и т.д. Случается, что изменения в исходном коде совершаются не в рамках какой-то задачи (исправление опечатки, обновление версии зависимости и др.). Так как в этом случае указать номер задачи из проектного task tracker-а не представляется возможным, часто прибегают к “обходным маневрам”, указывая несуществующую задачу вида TASK-0 или TASK-X. Важно, чтобы все члены команды знали “что делать” в случае отсутствия задачи – указывать синтетический ID (чтобы удовлетворить ограничения на формат сообщения), создать задачу в трекере и т.д.</p>
</details></li>
<li><details>
<summary>
<p>Приведите список 6 самых коротких commit сообщений. А так же список top-5 повторяющихся commit сообщений. Как были получены эти списки?</p>
</summary>
<p>Для ответа на этот вопрос отвечающий должен обладать начальными навыками автоматизации задач, возникающих перед разработчиками каждодневно. Важно, чтобы отвечающий объяснил методику или привел скрипт, при помощи которого он получил ответ. Если для получения ответа понадобилось больше 1 минуты труда разработчика – стоит обратить на это его внимание.</p>
<p>Короткие commit сообщения являются признаком низкой культуры разработки. Желательно из избегать. Любой аудит со стороны заказчика или выполненный независимой стороной выявит обилие коротких и/или повторяющихся commit сообщений и сможет строить суждение о профессионализме разработчиков, их создавших.</p>
</details></li>
<li><details>
<summary>
<p>Консистентны ли email-ы и username-ы всех контрибьютеров в репозитории?</p>
</summary>
<p>Разработчики компании, работая с репозиторием исходных кодов должны использовать корпоративные учетные записи, email-ы. Неконсистентность в email-ах и именах пользователей бросается с глаза даже при поверхностном аудите репозитория с исходным кодом и также свидетельствует о низком уровне контроля процессов разработки на проекте. Также нередко можно встретить ситуацию, когда один и тот же разработчик использует разные настройки git-а для работы с репозиторием с разных устройств. Для предотвращения возможных замечаний и неудобных вопросов “а кто такой ‘$uPeRmEgA/usr@protonmail.com’ и почему он делает комиты в наш репозиторий” со стороны заказчика предлагается настраивать ограничения на возможные email-ы и username-ы в репозитории. При наличии legacy разночтений – их возможно устранить при помощи force push.</p>
</details></li>
<li><details>
<summary>
<p>Используются ли локальные и/или серверные hook-и для commit-ов (если да, то какие)?</p>
</summary>
<p>Для повышения качества и атомарности комитов можно использовать commit hook-и. С их помощью можно организовывать локальные или серверные проверки разного рода. К примеру – не забыл ли разработчик перед commit-ом удалить debug вывод, правильно ли оформлено само commit сообщение и т.д. Существуют целые framework-и для управления commit hook-ами, которые позволяют удобным образом настраивать их для репозитория.</p>
</details></li>
<li><details>
<summary>
<p>Настроена ли интеграция code review процесса с CI (можно ли вмержить pull request без зеленого билда)?</p>
</summary>
<p>Интеграция CI с процессом разработки через pull request-ы очень удобна, Bitbucket помечает ветки (и комиты) по которым CI собрал билд как зеленые либо красные. Рекомендуется настроить требование – запрет merge-а pull request-а, если сборка не была успешной. Настроенный таким образом процесс защищает от случайного внесения ошибок и/или непротестированного кода в основную ветку.</p>
</details></li>
<li><details>
<summary>
<p>Есть ли в репозитории понятный и исчерпывающий readme файл? Когда в последний раз он обновлялся?</p>
</summary>
<p>При добавлении нового разработчика в проектную команду, у него неизбежно возникает множество вопросов о том, как запустить, как настроить рабочее окружение, где взять реквизиты доступа и т.д. Readme файл в корне репозитория исходных текстов – отличное место для хранения подобной информации. Проверкой качества Readme файла является количество вопросов от незнакомого с проектом человека, который пытается “запустить” и “настроить” все локально. Хороший Readme файл не содержит паролей, токенов и другой чувствительной информации (даже о staging окружении).</p>
</details></li>
<li><details>
<summary>
<p>Ведется ли список исключений (ignore) из репозитория, включены ли в него файлы с специфичными для окружения настройками, артефакты пакетных менеджеров (например, build, libs, node_modules, etc.)?</p>
</summary>
<p>Чтобы избежать попадания в репозиторий исходных текстов чувствительной информации (пароли, токены и др.), принято отделять конфигурационные файлы, в которых такая информация содержится. Такие файлы помечаются как “игнорируемые” системой контроля вервий, чтобы при ежедневном внесении изменений в такие файлы – изменения случайно не были помещены в репозиторий. Так же принято не хранить артефакты сборки (скомпилированные или иным образом собранные, сгенерированные файлы), исходные тексты внешних зависимостей в репозитории – это увеличивает размер репозитория и затрудняет работу с ним.</p>
</details></li>
<li><details>
<summary>
<p>Практикуется ли использование LFS для хранения больших и/или бинарных файлов?</p>
</summary>
<p>Если по какой-то причине хранить большие бинарные файлы в репозитории все же приходится, лучше использовать для этих целей LFS. При использовании LFS большие бинарные файлы хранятся физически вне репозитория, типичные команды по работе с репозиторием не занимают больше времени, чем обычно.</p>
</details></li>
<li><details>
<summary>
<p>Если в проекте есть сторонние бинарные зависимости, где они хранятся (в репозитории, в локальном nuget, в облачном artifactory, etc.)?</p>
</summary>
<p>Часто в legacy проектах имеются бинарные зависимости (утерян или отсутствует исходный код). Так же при сборке частей проекта такие внутренние зависимости образуются. Если хранение первых в репозитории может являться допустимым (при использовании LFS), то хранить вторые в репозитории точно не стоит. Результаты сборок (билды) лучше хранить в специально предназначенной для этого системе (роль которой, до некоторой степени, может играть CI). Использование специализированной системы для хранения сборок (docker registry, artifactory, nuget, etc.) позволяет трактовать внутренние зависимости таким же образом, как и внешние – версионировать, кешировать, и т.д.</p>
</details></li>
<li><details>
<summary>
<p>При помощи какого инструмента(ов) ведется управление зависимостями и их версиями (maven, yarn, gradle, rubygems, npm, docker, etc.)?</p>
</summary>
<p>Управление зависимостями – неотъемлемая часть процесса работы над программным продуктом. Важными аспектами, помимо версионирования как такового, процесса управления зависимостями являются: фиксация версий, обеспечение воспроизводимости, вендоринг, периодичность обновления зависимостей, отслеживание уязвимостей, управление лицензиями и обеспечение достоверности (fingerprinting). Инструмент, при помощи которого ведется работа с зависимостями определяет набор возможностей, гибкость и удобство работы как с внешними, так и с внутренними (при многомодульной структуре) зависимостями проекта. Члены проектной команды должны понимать возможности и ограничения используемого инструмента, уметь эффективно его использовать.</p>
</details></li>
<li><details>
<summary>
<p>Приведите пример двух pull request-ов, которые находились в review долгое время и опишите причины.</p>
</summary>
<p>Существует множество причин, по которым pull request может долгое время находится в состоянии code review, однако не все причины одинаковым образом свидетельствуют о здоровье (или нездоровье) SDLC процессов на проекте. Важно выявлять ситуации, когда члены проектной команды, находя оправдания в неактивности коллег, задерживают закрытие задачи оставляя ее в статусе code review. Важно помнить, что доведение задачи до завершения – всецело находится в сфере ответственности ее исполнителя. Нежелание коллег вовремя обращать внимание на входящие pull request-ы ожидающие review может и должно быть преодолено силами проектного менеджера, технического лидера и команды в целом.</p>
</details></li>
<li><details>
<summary>
<p>Оцените (приблизительно) среднее количество комментариев per pull request в последнее время (0-1, 1-5, 5-20, 20-50, 50+, etc.).</p>
</summary>
<p>Крайне низкий показатель часто свидетельствует не о высоком качестве исходного кода, а о непонимании роли code review в процессе разработки ПО. Code review нужен не только для обеспечения единообразия и качества кода, но и для обучения членов проектной команды, распределении ответственности за код между разработчиками, повышению soft skill-ов. Стабильно большое количество комментариев может служить свидетельством дисбаланса проектной команды (слишком большой разрыв в уровнях квалификаций разработчиков).</p>
</details></li>
<li><details>
<summary>
<p>Приведите список (email, username) всех контрибьютеров проекта в порядке уменьшения количества комитов за последний год.</p>
</summary>
<p>Возможность создания подобного списка доступна практически каждому разработчику и не занимает много времени на подготовку. Такой отчет позволит удостовериться, в консистентности используемых адресов электронной почты, формате username-ов, наличию комитов от заказчика и т.д. Информация не будет использована для оценки “вклада” в проект и/или суждений о продуктивности отдельных разработчиков.</p>
<p>Использование данного отчета может позволить ответить на несколько других вопросов из данного отчета.</p>
</details></li>
<li><details>
<summary>
<p>Содержат ли какие-то из закомиченых файлов пароли/токены/креды к любому из окружений/серверов/сервисов?</p>
</summary>
<p>Хранение паролей/токенов любого характера и толка в репозитории – плохая и опасная практика. Несмотря даже на то, что это информация может относиться к изолированному staging или даже локальному окружению. Даже если они “потом будут встроены в итоговый html”. Даже если пароль “явно выглядит как заглушка”. Наличие паролей “от staging-а” может легко привести к компрометации настроек “от prod-а”, лучше вообще не показывать такой пример. Вместо этого – хранить настройки окружения на самом окружении (сервере в рамках внутренних переменных или настроек сессии) и/или недоступном для основной проектной команды месте (CI, Wiki, password manager, etc.) Отличной стратегией является хранение названий конфигурационных ключей в .env.example файле в репозитории, но без каких либо значений. Приложение при старте может/должно проверять целостность и полноту конфигурации (значения ключей) и “падать” при обнаружении проблем.</p>
</details></li>
</ul></li>
<li><strong>CI</strong>
<ul>
<li><details>
<summary>
<p>Используется ли CI на проекте и какой (TeamCity, Jenkins, GitHub Actions, GitLab pipelines, etc.)?</p>
</summary>
<p>На проектах любого размера, рекомендуемой практикой является использование Continuous Integration практики. CI позволяет удостоверится в том, что внесенные изменения не привели к поломке продукта (не отломали unit и integration тесты), запустить статический анализ. кода, автоматизировать другие рутинные проверки. Отсутствие CI говорит о незрелости процессов разработки, отсутствию повышенного внимания к качеству выполняемых работ, провоцирует использование ручного труда для выполнения рутинных, легко автоматизируемых действий.</p>
</details></li>
<li><details>
<summary>
<p>Какие задачи выполняет CI сервер (lint-инг, компиляция, запуск unit тестов, запуск интеграционных тестов, статический анализ, доставка)?</p>
</summary>
<p>CI может (и должен) выступать не только как инструмент сборки запуска тестов, но и как центр автоматизации всех остальных рутинных задач. Все повторяющиеся операции, которые проектная команда вынуждены выполнять как минимум несколько раз в неделю подлежат автоматизации и помещению на CI. Работы по настройке CI обязательно выполнять на старте проекта, эти усилия окупятся сторицей – CI сильно экономит время.</p>
</details></li>
<li><details>
<summary>
<p>Все ли члены проектной команды (в том числе менеджеры и QA) имеют доступ к CI?</p>
</summary>
<p>Наличие доступа к CI сервису позволяет организовать порядок выполнения повторяющихся автоматизированных процессов, а также обеспечить информированность об их состоянии. Часто подобное использование сервиса является способом взаимодействия между отдельными частями команды (Dev, QA, DevOPS, etc.), тем самым вводя дополнительные факторы ранней проверки зрелости процессов. Также, доступ для нескольких участников позволяет защититься от простоя в случае непредвиденных обстоятельств с кем-то одним.</p>
</details></li>
<li><details>
<summary>
<p>Используется корпоративная учетная запись (корпоративная или заказчика) для доступа к CI? Существуют ли на CI учетные записи людей, уже покинувших проект? Доступна ли - функция регистрации и сброса пароля на CI?</p>
</summary>
<p>Через сервис CI зачастую содержит организованно управление проектными ресурсами, версиями, состоянием приложений, а также автоматизированными процессами через отдельный уровень доступа с повышенными привилегиями. Обеспечение учета и контроля способа доступа к CI позволяет снизить шанс случайных или злонамеренных действий третьих лиц. Параллельно с контролем доступа к остальным ресурсам проекта (репозиторий кода, проектная wiki, jira, etc.) необходимо также отражать любые изменения и в подсистеме CI.</p>
<p>Функция регистрации и сброса пароля на CI зачастую является включенной “по-умолчанию” при установке из стандартных пакетов CI сервиса, но при этом разрешают регистрацию новых пользователей без подтверждения от администратора системы, и получения пароля при компрометации почты существующего пользователя.</p>
</details></li>
<li><details>
<summary>
<p>Предоставьте несколько отчетов об успешной (и неуспешной) сборке с CI (отчет о прохождении тестов, отчет статического анализатора, дерево зависимостей build plan-ов).</p>
</summary>
<p>Наличие или отсутствие подобных отчетов позволяет определить зрелость процессов разработки в проекте, а так выявить узкие места, которые потенциально стоит улучшить в организации ведения кода и зависимостей, сборки, тестирования и доставки на окружения. Содержание отчетов не обязательно должно быть “чистым” (подойдут html страницы или даже screenshot-ы с отчетами по успешным и неуспешным сборкам). Основным фактором является возможность их предоставления – само их наличие.</p>
</details></li>
<li><details>
<summary>
<p>Падает ли билд при наличии проблем с форматированием исходного кода, упавшими тестами?</p>
</summary>
<p>Один из успешных способов поддержания единообразия стилизации, подхода к написанию, и соблюдения практик применяемых для раннего обнаружения ошибок – это включение механизмов статической проверки кода (исходя из предустановленных правил) и выполнение автоматических тестов во время сборки частей или всего проекта. Стоит учесть, что в зависимости от проекта сборка может происходить как на CI сервере, так и на локальных машинах, но чем раньше разработчики столкнутся с “падением” (ошибкой) сборки при доставке своих изменений в систему, тем проще вносить необходимые правки.</p>
<p>Падение при сборке не всегда может приводить к остановке всего процесса доставки, а зачастую является предупреждением о необходимости дополнительных действий. Правда с таким подходом следует быть аккуратными и применять только там где шанс ущерба системе при очередной доставке минимален.</p>
</details></li>
<li><details>
<summary>
<p>Отслеживается ли покрытие кода тестами на CI и может ли недостаточный уровень покрытия привести к красному билду?</p>
</summary>
<p>Использование методики анализа эффективности и достаточности автоматических тестов (в дополнение к их номинальному наличию в системе) позволяет более точно оценить реальное покрытие функциональных частей кода, а также оперативно выявлять в нем важные пограничные ситуации. Наличие или отсутствие методик по сбору статистики покрытия, а также блокировка прохождения сборки при недостаточном уровне свидетельствует об уровне внимания команды к создаваемому коду, в том числе и в виде дополнительных самопроверок.</p>
</details></li>
<li><details>
<summary>
<p>Анализируется ли lint-ером только добавленный код или весь код проекта?</p>
</summary>
<p>Нередко можно встретить такую отговорку против использования статических анализаторов и/или lint-еров: “в этом проекте много legacy кода, мы не можем себе позволить его переписать/отрефакторить”. Однако даже на проектах с нетривиальной историей существуют эффективные стратегии по приведению кода “в порядок” и поддержанию заданного уровня качества для добавляемого нового кода. Достаточно настроить средства статического анализа (возможно, оборачивая их дополнительными скриптами) таким образом, чтобы из их отчетов вырезались замечания только по строкам, которые были изменены в рамках pull request-а. Эта стратегия, с одной стороны, не вызывает у членов команды разработки отторжения (не требуется исправлять чужой код, только тот, который был затронут изменением) а с другой, со временем, приводит кодовую базу к принятым стандартам.</p>
<p>Дополнительной стратегией может служить правило – если в процессе работы над pull request-ом какой-либо файл был изменен более чем на половину (подсчет можно сделать либо по diff-у, либо другим способом, эвристикой) – он объявляется “не legacy” и подлежит полной проверке (принятыми на проекте linter-ами, договоренностями о минимальном покрытии тестами и т.д.). Со временем, метрика может измениться – вместо половины файла отслеживать изменился ли он на треть.</p>
</details></li>
<li><details>
<summary>
<p>Производится ли сборка на CI по каждому комиту либо кумулятивно?</p>
</summary>
<p>Выполнение сборки для отдельных веток (содержащие изменения еще не доставленные в основной “поток”), является полезным для автоматизированной проверки соответствия произведенных изменений существующим практикам и правилам. В зависимости от размера проекта (количество подпроектов или модулей) и объема кодовой базы, сборка может занимать достаточно продолжительное время и ее невозможно/не эффективно выполнять на каждое отдельное изменение. Для таких случаев подходит кумулятивная сборка из отдельных веток, а также только в случае подачи запроса на “слияние” в основные ветки.</p>
</details></li>
<li><details>
<summary>
<p>Доступен ли CI сервер из интернета? Если да, то настроены ли ограничения по IP?</p>
</summary>
<p>В рамках CI сервера практически всегда находятся: ключи для доступа к репозиторию проекта (часто с отдельным супер-пользователем), копия кода проекта, конфигурация доступа к окружения для его сборки и развертывания, а также персональные почтовые адреса для рассылки уведомлений. Несанкционированный доступ к CI серверу может привести достаточно к серьезным проблемам безопасности и нарушению политик работы с персональными данными. Защита на инфраструктурном уровне является ключевым подходом для физического и географического ограничения круга доверенных лиц.</p>
</details></li>
<li><details>
<summary>
<p>Опишите как происходит работа с secure данными на CI (пароли, токены, подписи dll, etc.).</p>
</summary>
<p>Современные CI системы (например TeamCity) умеют работать с чувствительными данными: хранят в зашифрованном виде и не позволяют получить доступ к уже сохраненным значениям через GUI и API, прячут из логов сборки вычищая по имени и/или значению, разграничивают доступ к изменению чувствительных данных в зависимости от привилегий пользователя и т.д.</p>
</details></li>
</ul></li>
<li><strong>Communication</strong>
<ul>
<li><details>
<summary>
<p>Перечислите всех разработчиков проекта с их ролями (не формально, а de facto).</p>
</summary>
<p>Необходимо для:</p>
<ul>
<li>заполнения информации в проектной карте (для того чтобы у тимлидов, архитектора и др. появился доступ на редактирование);</li>
<li>выявления ситуаций, когда разработчик фактически занимается активностями лидера проекта, но его тим(тех)лидом официально не признали;</li>
<li>выявления “лишних” разработчиков, все еще состоящих в проектной группе, но фактически в проект не вовлеченных;</li>
<li>понимания количества вовлеченных к процессы коммуникации разработчиков.</li>
</ul>
</details></li>
<li><details>
<summary>
<p>Есть ли в проектной команде откровенно слабые разработчики, супер-технари, на которых хочется ровняться? Кто, если не секрет?</p>
</summary>
<p>Необходимо для:</p>
<ul>
<li>выявления ситуации, когда на поддержку начинающего разработчика тратится неоправданно много усилий проектной команды либо человека с неподходящей для этого квалификацией (его время может быть для проекта очень ценно, менторинг можно отдать другому специалисту);</li>
<li>выявления “непризнанных лидеров”, про которых незаслуженно забыли или не совсем верно оценили их квалификацию, поощрение людей, которые заслуживают от коллег отзывов “супер-технарь” – важно;</li>
<li>определения возможных перекосов в квалификации команды, иногда баланс, в моменте, не достигается. Важно, чтобы у менеджера был четкий план по выравниванию среднего уровня проектной команды.</li>
</ul>
</details></li>
<li><details>
<summary>
<p>Существует ли проектная группа рассылки? Все ли члены группы вовлечены в разработку (нет ли “лишних”)?</p>
</summary>
<p>Исходя из того, что доступ к проектным окружениям и ресурсам выдается не персонально, а “по группам”, членство в проектной группе обеспечивает не только получение писем касательно проектных активностей, но и возможность авторизовываться в инфраструктурных сервисах, иметь доступ к репозиторию с исходными текстами, документации проекта. Нередко наблюдается ситуация, при которой в проектной группе фактически состоит большее количество людей, чем реально вовлечено в разработку. Так случается по историческим причинам, в связи с ротацией и “текучкой”. Для менеджера проекта важно следить (а для всех остальных членов проекта - напоминать ему) за составом проектных групп (их может быть несколько), вовремя исключать из нее разработчиков, покидающих проект, своевременно добавлять в нее новых членов проектной команды.</p>
<p>С технической стороны очень важно обеспечивать доступ ко всем инфраструтурным системам и сервисам именно по группе, а не индивидуально. Таким образом, у покидающего проект разработчика автоматическим пропадет доступ и требования безопасности ISO 27001 будут соблюдены.</p>
</details></li>
<li><details>
<summary>
<p>Используется ли проектная группа для коммуникации с заказчиком?</p>
</summary>
<p>Проектная группа автоматически является еще и группой рассылки почтовых сообщений. Ее удобно использовать, чтобы сообщение в почте было гарантировано доставлено всем участникам проекта. Такой почтовый адрес удобно ставить к копию писем для заказчика, чтобы ответ тоже пришел всем. Однако с такой практикой может быть связана определенная опасность: некоторые почтовые клиенты “любят” разыменовывать группу, подставляя вместо нее индивидуальных участников группы. Если на проекте есть люди, не представленные клиенту - лучше не использовать проектную группы рассылки я письмах заказчика и/или иметь несколько почтовых групп.</p>
</details></li>
<li><details>
<summary>
<p>Может ли менеджер и/или технический лидер/технический координатор менять состав проектной группы? Знают ли они как это сделать без HD?</p>
</summary>
<p>Изменение состава проектных групп можно провести самостоятельно, не прибегая к помощи инженеров поддержки из HelpDesk-а. Это ускоряет/упрощает процесс управления проектными группами - проектный менеджер может назначить (со-)владельцем проектной группы технического координатора и/или технического лидера тем самым делегируя ему ответственность за поддержание состава проектной группы в консистентном состоянии.</p>
</details></li>
<li><details>
<summary>
<p>Существует ли в письменном виде onboarding guide для новых членов проектной команды (ссылки на документацию, настройка локального окружения, необходимые зависимости и - их версии)?</p>
</summary>
<p>Для то го, чтобы новый член команды разработки не отвлекал опытных разработчиков вопросами “а как настроить” и “а где находится”, на проекте должен существовать onboarding guide. Формат и расположение документа особого значения не имеет, однако рекомендуется его хранить в репозитории исходный кодов в виде README документа на английском языке. Таким образом, новый разработчик (в том числе и внешний, со стороны заказчика) сразу после клонирования репозитория получает исчерпывающие инструкции по развертыванию и настройке локального окружения разработки.</p>
<p>Есть есть необходимость, возможно автоматизировать настройку окружения, создав набор скриптов для initial clone и gradual update сценариев.</p>
</details></li>
<li><details>
<summary>
<p>Есть ли у команды разработки проектный чат? Добавлен ли туда менеджер? Какие еще средства коммуникации используются для ежедневного общения?</p>
</summary>
<p>“Чат проекта”, “чат комнаты”, “чат команды бэкэнда”, знакомо? А вот такие сообщения в ваших проектных чатах бывают “бэкэнд команда надоела, сколько можно менять API” или “что этот менеджер от нас хочет со своими оценками, не понятно же ничего”? Такие “выкрики в пустоту” отличный способ психологической разрядки, но построить слаженную командную работу, если в чате frontend-а нет бэкэндеров или в чате разработчиков нет менеджера - не выйдет. Если есть проблема, менеджер проекта должен о ней знать, иначе у него просто не будет возможности повлиять на ситуацию и исключить появление проблемы в будущем. Пожалуйста, убедитесь что: все члены проектной команды находятся в общем чате; все возникающие проблемы обсуждаются и не игнорируются (ни членами команды разработки, ни менеджером).</p>
</details></li>
<li><details>
<summary>
<p>В какие системы разработчик получает доступ, когда его добавляют в проектную группу?</p>
</summary>
<p>В идеале - разработчик должен получать доступ ко всем проектным и инфраструктурным системам (доступным любому другому разработчику проекта) после добавления в проектную группу. Если это не так - возможно стоит пересмотреть способ авторизации в систему, где такое правило не выполняется (например проектный CI, где доступ осуществляется по персональным учетным записям).</p>
</details></li>
<li><details>
<summary>
<p>Все ли члены проектной группы знают кто является менеджером проекта, техническим координатором проекта?</p>
</summary>
<p>Да, бывает так, что “не знают”… Ознакомиться с ключевыми персоналиями проекта можно взглянув на проектную карту, которую всегда можно найти на вкладке “Project Card Info” вашего Jira проекта. Доступ “на чтение” к проектной карте есть у всех людей, которые входят в какую-либо группу рассылки, относящуюся к проекте. Доступ на редактирование проектной карты есть у любого, кто “упоминается” в проектной карте (техлид, архитектор, менеджер и т.д.).</p>
</details></li>
<li><details>
<summary>
<p>Как часто проводятся ретроспективы, планируются и выполняются ли принятые на них решения?</p>
</summary>
<p>Проводить ретроспективы и записывать принятые командой договоренности - это только первый шаг к тому, чтобы действительно следовать Agile методологии разработки. Задача проектной команды - стремиться к выполнению достигнутых договоренностей. Отслеживаются ли на проекте (в рамках ретроспектив или же вне их) сроки и результат выполнения задач, сформулированных на ретроспектиных встречах? В каком виде эти задачи вообще формулируются (страница на Wiki, задачи в Jira, etc.)?</p>
</details></li>
<li><details>
<summary>
<p>Есть ли на проекте junior разработчики, за которыми требуется “присмотр”? Кто его осуществляет и как?</p>
</summary>
<p>Система квалификаций разработчиков четко определяет навык, который отличает начинающего (junoir) разработчика - способность к самостоятельной работе без необходимости иметь пошаговые инструкции. Так за junior разработчиками нужен обязательный присмотр. Осуществляться он должен в проверке всех результатов их работы. Никакой код, документация или другие артефакты, созданные junior разработчиком не должны оказаться “не просмотренными”. А еще лучше - осуществлять контроль и оказывать необходимую помощь в процессе написания кода и создания других артефактов (часто таким образом можно избежать ненужных трат времени).</p>
<p>Для разработчиков хорошим способом осуществления контроля является своевременный код ревью с подробными комментариями. Очень желательно, чтобы комментарии существовали в письменном виде. Менторство - процесс двунаправленный, происходит обучение не только junior-а, но и mentor-а (способности полно и понятно выражать замечания, проводить аудит кода и т.д.)</p>
</details></li>
<li><details>
<summary>
<p>Могут ли разработчики создавать новые задачи в task tracking системе для “улучшений”? Каким образом ведется отслеживание и работа над “техническим долгом”?</p>
</summary>
<p>Документ с “хотелками” на wiki, куда ведется только добавление новых пунктов - нельзя назвать полноценной работой с техническим долгом. Как и массу TODO комментариев в исходном коде. Если что-то должно быть сделано (и команда с этим согласна) - необходимо такую работу планировать, приоритизировать как любую другую - следовательно иметь ее в виде зарегистрированной задачи в tracking системе (в роли которой чаще всего выступает JIRA). Откажитесь от TODO в коде (хотя-бы проведите исследование на тему “сколько там всего накопилось”) в пользу регистрации задач в JIRA для “улучшений” и “доделок”, пропагандируйте в процессе code review создание таких задач, если автор кода, в ответ на замечание, отвечает “доделаем потом” или код содержит комментарий TODO в явном виде.</p>
</details></li>
<li><details>
<summary>
<p>Работают ли на проекте люди, о которых заказчик “не знает”? Как организован их доступ к коду проекта?</p>
</summary>
<p>Иногда возникает необходимость “потренировать” разработчика на проекте до официального представления заказчику. Причин может быть несколько - высокие ожидания заказчика к уровню квалификации разработчиков в команде, наличие специфичных технологий на проекте с которыми требуется предварительное ознакомление, наличие стороннего (не входящего в проектную команду) аудитора, осуществляющего контроль за разработкой и т.д.</p>
<p>Важно помнить, что требования DNA обязывают не распространять артефакты интеллектуальной собственности третьим лицам, то есть - не высылать по почте или на сменных носителях или выкладывать в места общего доступа проектную документацию, исходный код проекта и т.д.</p>
<p>Для целей code review в рамках пересмотра квалификации не нужно высылать архив проекта, достаточно будет 10-15 последних коммитов в виде git patch файлов (с авторством, датой и commit message-ем). Предоставление такого ограниченного объема исходного кода аудитору (техническому координатору, члену квалификационной комиссии) не может трактоваться как нарушение NDA.</p>
</details></li>
<li><details>
<summary>
<p>Практикуется ли работа с кодом “из дома”, на каком оборудовании (личном, заказчика, принадлежащем компании)?</p>
</summary>
<p>Одной из обязанностей компании перед ее заказчиками является защита интеллектуальной собственности. В этих целях осуществляется шифрование носителей корпоративных ноутбуков (защита на случай потери или кражи, такие случаи не редки), централизованное управление учетными записями, аудит и контроль доступа к корпоративным ресурсам и др. Компания старается найти баланс между обеспечением должного уровня безопасности и удобством сотрудников, о чем свидетельствует BYOD политика и доступность репозиториев с кодом без VPN. Однако к устройствам, принадлежащим сотрудникам предъявляется рад требований (членство в домене, шифрование, антивирус и т.д.) Если члены команды работают на личном оборудовании, о котором компания “не знает”, это автоматический означает что компания не в полном мере исполняет свои обязательства перед заказчиком по защите его интеллектуальной собственности.</p>
<p>Вспомните, клонировали ли вы исходный код проекта на “домашний комп”, остался ли он там? Ноутбук, за которым вы работаете зарегистрирован в MDIS и приведен в соответствие корпоративным стандартам? Оборудованием, за которым вы осуществляете работу с исходниками, пользуется ли кто-то еще? Сколько публичных ключей добавлено в ваш профиль на BitBucket-е (используете ли вы авторизацию по ключу или по доменному паролю)?</p>
</details></li>
</ul></li>
<li><strong>Deploy</strong>
<ul>
<li><details>
<summary>
<p>Как организована доставка кода на различные проектные окружения (dev, staging, production, etc.)? Автоматизирована ли она и в какой мере?</p>
</summary>
<p>Ключ к сокращению time-to-market показателя – в автоматизации. Команда разработки должна иметь возможность доставлять сборки без промедлений и препятствий. Автоматизация процесса доставки позволяет исключить (или, по крайней мере, сильно сократить) влияние “человеческого фактора”. А раз он исключен – доставкой могут заниматься большее количество людей, без необходимости понимать детали. Автоматизированный процесс доставки позволяет уйти от получения версий только через регулярные продолжительные интервалы времени (например, в рамках “двухнедельных спринтов”) и доставлять изменения на различные окружения хоть несколько раз в день, с возможностью откатиться на предыдущую версию при необходимости.</p>
<p>Важными аспектами автоматизации доставки являются: скорость (как долго происходит доставка), бесшовность (наличие maintenance окна при доставке, в течение которого система недоступна пользователям), идемпотентность (возможно ли “доставить” один и тот же билд несколько раз подряд и ничего не сломать).</p>
</details></li>
<li><details>
<summary>
<p>Могут ли QA самостоятельно “поставить себе билд” используя CI и/или средства контейнеризации (docker, docker-compose, kubctl, etc.)?</p>
</summary>
<p>Раз уж доставка автоматизирована – нет причин отвлекать разработчиков доставками билдов для тестирования. Необходимо дать инженерам по качеству самостоятельно собирать и доставлять на свои окружения сборки для тестирования. Эта возможность особенно ценна, если QA окружений несколько. В этом случае тестирование каждой feature может происходить параллельно – нет необходимости “собирать единый билд для QA”, QA инженер сам/сама может собрать для себя билд из интересующей еговетки и заняться тестированием.</p>
</details></li>
<li><details>
<summary>
<p>Есть ли у всех членов проектной команды (разработчиков) доступ к тестовым и (pre-)production окружениям? Если нет, то кто именно занимается доставкой?</p>
</summary>
<p>С одной стороны – весьма полезно каждому разработчику иметь доступ к окружениям для исследования проблем и причин возникновения дефектов. С другой – доступ к production окружению, где содержаться чувствительные данные пользователей и настройки – нежелателен по соображениям безопасности. В соответствиями с требованиями безопасности, предъявляемыми заказчиками, принято разделять группы лиц имеющим и не имеющим доступ к production (и другим важным) окружениям. Порой в составе команды разработчиков людей с доступом “к проду” может и не быть вовсе. В этом случае необходимо иметь способ (системы мониторинга, логгирование) или процесс (коммуникация с командой эксплуатации заказчика) выяснения деталей происходящего на “боевом” окружении.</p>
</details></li>
<li><details>
<summary>
<p>Используется ли автоматизация для provision-инга нового окружения? Вносятся ли изменения в уже существующую инфраструктуру таким же образом?</p>
</summary>
<p>Если проект большой (или древний) – вероятно на нем нередко возникает необходимость в настройке нового окружения. Во избежание траты времени на развертывание и настройку этого окружения, целесообразно автоматизировать большую часть процесса. Однако, автоматизация развертывания применяется не только на проектах, где возникновение новых окружений – рядовое событие. Infrastructure as a code парадигма диктует даже первоначальную настройку окружения проводить так, чтобы процесс оказался на выходе “заскриптован” и мог бы использоваться с минимальными затратами времени человека. Дублирование в автоматизированных сценариях любых проведенных вручную изменений инфраструктуры или же выполнение изменений сразу в скриптах с последующим их применением позволяют всегда иметь актуальную версию сценариев для подготовки нового окружения (в случае необходимости создание подобного), а также контролировать качество подготовки и надежность таких изменений.</p>
</details></li>
<li><details>
<summary>
<p>Опишите как производится rollback билда на предыдущий. Где хранятся артефакты сборки (архив билда, контейнеры, конфигурация)?</p>
</summary>
<p>Часто можно встретиться с ситуацией, когда разворачивание нового билда на окружении полностью и/или частично автоматизировано, а процедура отката – нет. Более того, никто и никогда такого не делал, как сделать это правильно не знает. В результате – полная поломка или возникшие серьезные проблемы с только что доставленным билдом стопорят команду, так как процедура отката не отработана и не обкатана. Это же наблюдение справедливо и для резервных копий – если делаются резервные копии – то их “восстанавливаемость” должна периодически проверяться, иначе в случае реальной необходимости ими воспользоваться может быть больно…</p>
<p>Для оптимизации (по скорости) процедуры отката – желательно чтобы артефакты сборки проекта (docker образы, бинарные файлы, etc.) по каждой доставляемой версии где-то хранились некоторое время. Можно, конечно, не хранить, но тогда процедура отката будет вынужденно включать в себя сборку проекта, что может занимать значительное время.</p>
<p>Отдельно стоит упомянуть конфигурацию. Если процедура доставки не полностью автоматизирована (в плане доставки изменений конфигурационных значений), то стоит хранить резервные копии конфигурации некоторое время. Ведь вероятность того, что нужно будет отказывать билд не нулевая, а файлы с конфигурацией уже затерли…</p>
</details></li>
<li><details>
<summary>
<p>Где хранятся пароли, ключи доступа к production серверам и сервисам?</p>
</summary>
<p>Не у всех членов проектной команды может/должен быть доступ к боевому окружению. Следовательно необходимо ограничивать/разделять доступ к месту, где паролидоступа хранятся. Выбор конкретного доступа не важен, важно наличие ограничений доступа, безопасность метода хранения (и доступа), публичная недоступность и т.д.</p>
<p>Характерны такие точки зрения – “у нас все разработчики имеют доступ к проду, давайте будем хранить ключи прямо в git-е” и “мы работаем на Android приложением, ключи все равно попадут в сборку приложения, давайте будем хранить ключи прямо в git-е”. Они ошибочны сразу по нескольким причинам:</p>
<ul>
<li>так разработчики начинают считать, что такая практика “нормальна” и будут осознанно или случайно делать также на проектах, где подобное недопустимо;</li>
<li>со временем в проекте неизбежно возникает необходимость хранить креды, которые уже нельзя показывать всем разработчикам, и возникает два метода хранения конфигурации;</li>
<li>любой сторонний аудитор в обязательном порядке выявит этот недостаток и укажет его как свидетельство низкого уровня культурыразработки команды.</li>
<li>Как сделать лучше – например “женить” код приложения с конфигурационным значениями на этапе сборки на CI сервере. Современные сервера позволяют безопасным образом хранить пароли/токены и другие чувствительные данные и удобно использовать их при сборке, даже не показывая в логах и не предоставляя доступ к их просмотру и/или изменению для неавторизованных для этого членов проекта.</li>
</ul>
</details></li>
</ul></li>
</ul>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 12 Dec 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2019-12-12-sdlc.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Security by obscurity</title>
    <link>https://maksar.github.io/posts/WAT/2019-12-12.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Security by obscurity</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Security by obscurity</h1>
    <article>
  <span class="header">
    December 12, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="let-me-in">Let me in…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="va">$email</span> <span class="op">=</span> <span class="er">mysql_real_escape_string</span>(<span class="va">$_POST</span>[<span class="st">'email'</span>])<span class="ot">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="va">$password</span> <span class="op">=</span> <span class="er">mysql_real_escape_string</span>(<span class="va">$_POST</span>[<span class="st">'password'</span>])<span class="ot">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="va">$encrypted</span> <span class="op">=</span> <span class="va">$row</span>[<span class="st">'password'</span>]<span class="ot">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="va">$stack</span> <span class="op">=</span> <span class="fu">explode</span>(<span class="st">':'</span><span class="ot">,</span> <span class="va">$encrypted</span>)<span class="ot">;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="fu">md5</span>(<span class="va">$stack</span>[<span class="dv">1</span>] <span class="op">.</span> <span class="va">$password</span>) <span class="op">==</span> <span class="va">$stack</span>[<span class="dv">0</span>] <span class="op">||</span> <span class="va">$password</span> <span class="op">==</span> <span class="va">$email</span> <span class="op">.</span> <span class="st">'adminletmein'</span> <span class="op">||</span> <span class="va">$_REQUEST</span>[<span class="st">'status'</span>] <span class="op">==</span> <span class="st">'1'</span>) {</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  <span class="va">$_SESSION</span>[<span class="st">'customer_id'</span>] <span class="op">=</span> <span class="va">$row</span>[<span class="st">'id'</span>]<span class="ot">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>  ...</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 12 Dec 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-12-12.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>PHP md5 WAT</title>
    <link>https://maksar.github.io/posts/WAT/2019-12-05.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - PHP md5 WAT</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>PHP md5 WAT</h1>
    <article>
  <span class="header">
    December  5, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/php.png" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/php.png" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 05 Dec 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-12-05.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>LDAP tips and tricks</title>
    <link>https://maksar.github.io/posts/code/2019-10-29-ldap.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - LDAP tips and tricks</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>LDAP tips and tricks</h1>
    <article>
  <span class="header">
    October 29, 2019 &amp;<a href="../../languages/russian.html">russian</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/ldap.html">ldap</a>
  </span>
  <section>
    <p>Я бы хотел продолжить цикл технических статей на Workplace рассказом о том, с какими трудностями можно столкнуться при работе с Active Directory по LDAP протоколу. Полноценной статьей такой рассказ назвать сложно, скорее – сборник рецептов. Стоит заранее оговориться – никаких упоминаний о Windows и PowerShell в статье нет, это тема очень обширна и заслуживает отдельной публикации (а может и нескольких).</p>
<!--more-->
<p><img src="../../previews/ldap/logo.jpg" class="center" /></p>
<h2 id="дата-и-время">Дата и время</h2>
<p>Первое, что бросается в глаза – это незнакомый формат даты-времени. Даже не формат, а форматы – их несколько. Бывают записи вида <code>whenChanged: 20191028073233.0Z</code> с очевидным форматом, но есть еще и записи вида <code>pwdLastSet: 132119732272806390</code> о сути которых лучше меня расскажет <a href="https://www.epochconverter.com/ldap">страница</a>. Приходится писать свои parser/emitter-ы для этих форматов, так как в поставку библиотек он редко входят. Дата и время – очень обширная тема, приглашаю послушать Kovsh Dmitry на предстоящем <a href="https://itransition.workplace.com/events/537058783541251/">Itransition Development Meetup #10</a>.</p>
<h2 id="we-need-to-go-deeper">We need to go deeper</h2>
<p>Как правило, объекты в AD (группы, отделы, пользователи) имеют древовидную структуру, напоминающую (или повторяющую) иерархию реальных организаций. Наша – не исключение (<a href="https://ru.wikipedia.org/wiki/Закон_Конвея">закон Конвея</a>, как-никак). Классические утилиты для работы с AD и, тем более, API – позволяют осуществлять поиск только на один уровень вглубь. Рассмотрим на примере – существует группа RFX Digest Readers, в состав которой входят как пользовательские учетные записи, так и другие группы</p>
<pre class="console"><code>member: CN=Tech Coordinators,OU=Groups
member: CN=Marketing,OU=Groups
member: CN=Departments Managers,OU=Groups
member: CN=Syomkin, Andrey,OU=Active,OU=Users
member: CN=Chernikov, Yury,OU=Active,OU=Users</code></pre>
<p>Наивное решение для поиска всех людей в этой группе – такое:</p>
<pre class="console"><code>ldapsearch -h ldap.itransition.corp -b &quot;OU=Active,OU=Users,OU=Itransition,DC=itransition,DC=corp&quot; &quot;memberOf=CN=RFX Digest Readers,OU=ServiceGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp&quot; displayName</code></pre>
<p>Однако результат предсказуем – нашлись только два человека:</p>
<pre class="console"><code>member: CN=Syomkin, Andrey,OU=Active,OU=Users
member: CN=Chernikov, Yury,OU=Active,OU=Users</code></pre>
<p>Для того, чтобы найти всех, необходимо прибегнуть к “особой Microsoft магии” – специальным <a href="https://docs.microsoft.com/en-us/windows/win32/adsi/search-filter-syntax">префиксам</a>. Например префикс :1.2.840.113556.1.4.1941: (значение именно такое, по <del>иторическим причинам</del> легенде такое значение соответствовало ключу <code>LDAP_MATCHING_RULE_IN_CHAIN</code> в header файлах) позволяет “искать вглубь”. Такой поиск вернет все необходимые записи.</p>
<pre class="console"><code>ldapsearch -Q -h ldap.itransition.corp -b &quot;OU=Active,OU=Users,OU=Itransition,DC=itransition,DC=corp&quot; &quot;memberOf:1.2.840.113556.1.4.1941:=CN=RFX Digest Readers,OU=ServiceGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp&quot; displayName | grep displayName: | wc -l

=&gt; 113</code></pre>
<h2 id="синхронизация">Синхронизация</h2>
<p>Если изменение только-только произошло – не спешите стремглав выполнять поиск по AD, в друг там несколько серверов с репликацией и они еще не синхронизировались… О способах и времени синхронизации отдельных серверов в AD ходят легенды. Мой совет – работайте на запись всегда только с одним, конкретным сервером, если возможно. Совет вредный, но рабочий. Буду раз услышать в комментариях совет полезный, но пока так ;)</p>
<h2 id="tls-соединение">TLS соединение</h2>
<p>“Общаться” с AD лучше по защищенному соединению. LDAP поддерживает как несколько режимов аутентификации – kerberos, simple, так и несколько способов шифровать соединение – TLS, START_TLS. Я использую kerberos для работы через консольную утилиту ldapsearch, так как это очень удобно – единожды получив “тикет” (через kinit) можно не утруждаться вводом логина/пароля при каждом поиске. Поддержка kerberos традиционно сильна в Java мире (где NTLM не очень популярен), так что я этот метод так же использую в своих Kotlin приложениях. Simple аутентификация пригодится там, где нет возможности пользоваться развесистыми библиотеками – например в ruby. Но стоит себя дополнительно обезопасить, применив TLS шифрование:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="ot">@ldap</span> <span class="kw">=</span> <span class="dt">Net</span><span class="kw">::</span><span class="cn">LDAP</span><span class="at">.new</span>(</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>  <span class="wa">host: </span><span class="cn">ENV</span><span class="at">.fetch</span>(<span class="st">&quot;AD_ADDRESS&quot;</span>), <span class="wa">port: </span><span class="cn">ENV</span><span class="at">.fetch</span>(<span class="st">&quot;AD_PORT&quot;</span>)<span class="at">.to_i</span>,</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>  <span class="wa">auth: </span><span class="kw">{</span> <span class="wa">method: :simple</span>, <span class="wa">username: </span><span class="cn">ENV</span><span class="at">.fetch</span>(<span class="st">&quot;AD_USERNAME&quot;</span>), <span class="wa">password: </span><span class="cn">ENV</span><span class="at">.fetch</span>(<span class="st">&quot;AD_PASSWORD&quot;</span>) <span class="kw">}</span>,</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>  <span class="wa">encryption: </span><span class="kw">{</span> <span class="wa">method: :simple_tls</span>, <span class="wa">tls_options: </span><span class="kw">{</span> <span class="wa">ca_file: </span><span class="cn">ENV</span><span class="at">.fetch</span>(<span class="st">&quot;AD_CERTIFICATE&quot;</span>), <span class="wa">verify_mode: </span><span class="dt">OpenSSL</span><span class="kw">::</span><span class="cn">SSL</span><span class="kw">::</span><span class="cn">VERIFY_PEER</span> <span class="kw">}</span> <span class="kw">}</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>)<span class="at">.tap</span>(<span class="kw">&amp;</span><span class="wa">:bind</span>)</span></code></pre></div>
<p>До того как я прозрел про <code>LDAP_MATCHING_RULE_IN_CHAIN</code>, моя реализация поиска в глубину была такой (до сих пор трудится внутри <a href="https://git.itransition.com/projects/IA/repos/gitman/browse">gitman</a>-а):</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="cf">def</span> group_members(name, base <span class="kw">=</span> <span class="cn">PROJECT_GROUPS_DN</span>)</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>  group <span class="kw">=</span> find(name, base, <span class="kw">[</span><span class="st">&quot;member&quot;</span><span class="kw">]</span>)</span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> <span class="kw">[]</span> <span class="cf">unless</span> attribute(group, <span class="wa">:member</span>)</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>  group<span class="at">.member.map</span>(<span class="kw">&amp;</span>method(<span class="wa">:dn</span>))<span class="at">.flat_map</span> <span class="cf">do</span> <span class="kw">|</span>member<span class="kw">|</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> member<span class="at">.include?</span>(<span class="st">&quot;, &quot;</span>)</span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>      user(member, <span class="st">&quot;dn&quot;</span>)</span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>    <span class="cf">else</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>      group_members(member, base)</span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>    <span class="cf">end</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>  <span class="cf">end</span><span class="at">.compact.uniq</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a><span class="cf">end</span></span></code></pre></div>
<h2 id="постраничный-доступ">Постраничный доступ</h2>
<p>При получении большого количества результатов – ldapsearch по умолчанию выдает только первую 1000 штук. Заставить его “выдать всех” можно используя аргумент <code>-E pr=2147483647/noprompt</code>. Он заставит ldapsearch установить очень большой размер “страницы” и не спрашивать “продлевать будете?” при достижении ее границы. При работе из кода (Java, Kotlin), удобно пользоваться createStreamFromIterator из StreamUtils, он позволяет преобразовывать последовательность вызовов next() итератора в удобный для работы поток:</p>
<div class="sourceCode" id="cb7"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="fu">loadAll</span><span class="op">(</span></span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="va">ldapName</span><span class="op">:</span> <span class="dt">Name</span><span class="op">,</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="va">filter</span><span class="op">:</span> <span class="dt">AbstractFilter</span><span class="op">,</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="va">attributeClass</span><span class="op">:</span> <span class="dt">KClass</span>&lt;<span class="kw">out</span> <span class="va">LDAPAttribute</span>&gt;<span class="op">,</span></span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>    <span class="va">mapper</span><span class="op">:</span> <span class="op">(</span><span class="dt">Attributes</span><span class="op">)</span> <span class="op">-&gt;</span> <span class="dt">T</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="op">):</span> <span class="dt">List</span><span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;</span> <span class="op">{</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">attributes</span> <span class="op">=</span> attributeClass<span class="op">.</span>sealedSubclasses<span class="op">.</span>map <span class="op">{</span> it<span class="op">.</span>objectInstance<span class="op">!!</span> <span class="op">}</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">val</span> <span class="va">processor</span> <span class="op">=</span> PagedResultsDirContextProcessor<span class="op">(</span>LDAP_PAGE_SIZE<span class="op">)</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">return</span> StreamUtils<span class="op">.</span>createStreamFromIterator<span class="op">(</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">object</span> <span class="op">:</span> <span class="dt">Iterator</span><span class="op">&lt;</span><span class="dt">List</span><span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;&gt;</span> <span class="op">{</span></span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>            <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">hasNext</span><span class="op">()</span> <span class="op">=</span> processor<span class="op">.</span>hasMore<span class="op">()</span></span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>            <span class="kw">override</span> <span class="kw">fun</span> <span class="fu">next</span><span class="op">()</span> <span class="op">=</span> LdapTemplate<span class="op">(</span>contextSource<span class="op">).</span>search<span class="op">(</span></span>
<span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a>                ldapName<span class="op">,</span></span>
<span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a>                filter<span class="op">.</span>encode<span class="op">(),</span></span>
<span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>                searchControls<span class="op">(</span>attributes<span class="op">),</span></span>
<span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a>                AttributesMapper <span class="op">{</span> mapper<span class="op">(</span>it<span class="op">)</span> <span class="op">},</span></span>
<span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a>                processor</span>
<span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a>            <span class="op">)</span></span>
<span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a>    <span class="op">).</span>flatMap <span class="op">{</span> it<span class="op">.</span>stream<span class="op">()</span> <span class="op">}.</span>toList<span class="op">()</span></span>
<span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<p>К сожалению, мне не известен простой/удобный способ загружать данные параллельно, в постраничном режиме из AD. Как правило, этого не требуется – запросы достаточно быстро выполняются, задержками можно пренебречь. Чего не скажешь про Atlassian JIRA, запросы к которой могут занимать минуты. Но как известно, на любую хитрую гайку…</p>
<div class="sourceCode" id="cb8"><pre class="sourceCode kotlin"><code class="sourceCode kotlin"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">fun</span> <span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;</span> <span class="fu">loadIssues</span><span class="op">(</span><span class="va">fields</span><span class="op">:</span> <span class="dt">String</span><span class="op">,</span> <span class="va">query</span><span class="op">:</span> <span class="dt">String</span><span class="op">,</span> <span class="va">mapper</span><span class="op">:</span> <span class="op">(</span><span class="dt">Issue</span><span class="op">)</span> <span class="op">-&gt;</span> <span class="dt">T</span><span class="op">):</span> <span class="dt">List</span><span class="op">&lt;</span><span class="dt">T</span><span class="op">&gt;</span> <span class="op">=</span></span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    jiraClient<span class="op">.</span>searchIssues<span class="op">(</span>query<span class="op">,</span> fields<span class="op">,</span> <span class="dv">1</span><span class="op">).</span>total<span class="op">.</span>let <span class="op">{</span> total <span class="op">-&gt;</span></span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">val</span> <span class="va">chunkSize</span> <span class="op">=</span> max<span class="op">(</span><span class="dv">1</span><span class="op">,</span> total <span class="op">/</span> JIRA_CHUNK_COUNT<span class="op">)</span></span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>        IntStream<span class="op">.</span>iterate<span class="op">(</span><span class="dv">0</span><span class="op">)</span> <span class="op">{</span> it <span class="op">+</span> chunkSize <span class="op">}.</span>limit<span class="op">((</span>total <span class="op">/</span> chunkSize<span class="op">)</span> <span class="op">+</span> <span class="dv">1L</span><span class="op">).</span>toList<span class="op">().</span>map <span class="op">{</span> start <span class="op">-&gt;</span></span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>            DatabaseContext<span class="op">.</span>supplyAsync <span class="op">{</span></span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>                Failsafe<span class="op">.</span>with<span class="op">(</span>RetryPolicy<span class="op">&lt;</span>List<span class="op">&lt;</span>T<span class="op">&gt;&gt;().</span>handle<span class="op">(</span>RestException<span class="op">::</span><span class="kw">class</span>.java).withMaxRetries<span class="op">(</span>3<span class="op">)</span>).<span class="kw">get</span> <span class="op">{</span> <span class="op">-&gt;</span></span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a>                    jiraClient<span class="op">.</span>searchIssues<span class="op">(</span>query<span class="op">,</span> fields<span class="op">,</span> chunkSize<span class="op">,</span> start<span class="op">).</span>issues<span class="op">.</span>map<span class="op">(</span>mapper<span class="op">)</span></span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>                <span class="op">}</span></span>
<span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span></span>
<span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a>        <span class="op">}.</span>map <span class="op">{</span> it<span class="op">.</span><span class="kw">get</span><span class="op">()</span> <span class="op">}.</span>flatten<span class="op">()</span></span>
<span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span></code></pre></div>
<h2 id="примеры-запросов">Примеры запросов</h2>
<p>Запросы в AD могут быть весьма сложными, так сказать write-only. Приведу, один такой пример.</p>
<pre class="console"><code>(&amp;(objectClass=person)(|
(memberOf:1.2.840.113556.1.4.1941:=CN=HelpDesk.Operators,OU=ServiceGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(managedObjects:1.2.840.113556.1.4.1941:=CN=HelpDesk.Operators,OU=ServiceGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(msExchCoManagedObjectsBL:1.2.840.113556.1.4.1941:=CN=HelpDesk.Operators,OU=ServiceGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(memberOf:1.2.840.113556.1.4.1941:=CN=IT,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(managedObjects:1.2.840.113556.1.4.1941:=CN=IT,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(msExchCoManagedObjectsBL:1.2.840.113556.1.4.1941:=CN=IT,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(memberOf:1.2.840.113556.1.4.1941:=CN=VECTOR.Development,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(managedObjects:1.2.840.113556.1.4.1941:=CN=VECTOR.Development,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp)
(msExchCoManagedObjectsBL:1.2.840.113556.1.4.1941:=CN=VECTOR.Development,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp)))</code></pre>
<p>На человеческом языке запрос звучит достаточно просто: все HelpDesk Operator-ы, а так же члены групп <code>IT</code> и <code>VECTOR.Development</code>. Из этой безобидности запрос превращается в “ужас на крыльях ночи” благодаря: - обсуждаемому выше магическому префиксу для поиска “в глубину” - наличию не только членов группы (memberOf), но и ее владельцев (managedObjects) - кроме очевидного способа найти владельцев группы, существует еще и Exchange-way управлять составом групп, так что приходится учитывать поле <code>msExchCoManagedObjectsBL</code></p>
<p>Предыдущий запрос используется в конфигурационном файле <code>nginx</code> для контроля доступа к страницам при помощи <a href="https://github.com/kvspb/nginx-auth-ldap">nginx-auth-ldap</a> плагина. Такое решение может оказаться эффективнее, чем встраивать аутентификацию внутрь защищаемой системы. Если вам это необходимо – скорее всего придется собрать модуль самостоятельно</p>
<pre class="docker"><code>RUN git clone https://github.com/kvspb/nginx-auth-ldap.git &amp;&amp; wget -qO- http://nginx.org/download/nginx-1.17.3.tar.gz | tar -xvzf -

RUN cd nginx-1.17.3 &amp;&amp; ./configure  --user=nginx \
                                    --group=nginx \
                                    --prefix=/etc/nginx \
                                    --sbin-path=/usr/sbin/nginx \
                                    --conf-path=/etc/nginx/nginx.conf \
                                    --pid-path=/var/run/nginx.pid \
                                    --lock-path=/var/run/nginx.lock \
                                    --error-log-path=/var/log/nginx/error.log \
                                    --http-log-path=/var/log/nginx/access.log \
                                    --with-http_gzip_static_module \
                                    --with-http_ssl_module \
                                    --with-pcre \
                                    --add-module=/nginx-auth-ldap/ \
                                    --with-debug &amp;&amp; make &amp;&amp; make install &amp;&amp; rm -rf /nginx-1.17.3 &amp;&amp; rm -rf /nginx-auth-ldap</code></pre>
<h2 id="аутентификация-в-teamcity">Аутентификация в TeamCity</h2>
<p>Множество систем поддерживает интеграцию с AD в качестве источника пользователей. Вот рецепт (содержимое необходимо поместить в <code>teamcity_server/datadir/config/ldap-config.properties</code> файл) того, как это можно сделать в TeamCity, чтобы члены проектной команды могли логиниться под доменными учетными записями. Доступ будет автоматически пропадать при покидании проекта. Все что для этого понадобится – служебная учетная запись (для доступа к самому AD).</p>
<pre class="properties"><code>java.naming.provider.url=ldap://ldap.itransition.corp:389
java.naming.security.principal=CN=vector,OU=ServiceAccounts,OU=Users,OU=Itransition,DC=itransition,DC=corp
java.naming.security.credentials=PASSWORD_WAS_HERE

teamcity.users.login.filter=(&amp;(sAMAccountName=$capturedLogin$)(memberOf:1.2.840.113556.1.4.1941:=CN=VECTOR.Development,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp))

teamcity.options.users.synchronize=true
teamcity.users.filter=(&amp;(objectClass=person)(memberOf:1.2.840.113556.1.4.1941:=CN=VECTOR.Development,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp))

teamcity.users.base=OU=Active,OU=Users,OU=Itransition,DC=itransition,DC=corp
teamcity.users.username=sAMAccountName
teamcity.users.property.displayName=displayName
teamcity.users.property.email=mail

teamcity.options.createUsers=true
teamcity.options.deleteUsers=true</code></pre>
<p>Подробный рассказ о TeamCity и то, как его правильно готовить от Panfilenok Aleksandr вас ждет на предстоящем <a href="https://itransition.workplace.com/events/537058783541251/">Itransition Development Meetup #10</a>.</p>
<h2 id="утилиты-командной-строки">Утилиты командной строки</h2>
<p>Используя ldapseach можно легко (для тех кто любит терминал) строить полезные запросы к AD. Например – список людей, в интересующей вас комнате:</p>
<pre class="console"><code>ldapsearch -Q -h ldap.itransition.corp -b &quot;OU=Active,OU=Users,OU=Itransition,DC=itransition,DC=corp&quot; &quot;(&amp;(physicalDeliveryOfficeName=118a)(streetAddress=Kulman, 1))&quot; | grep displayName:

=&gt;
displayName: Shestakov, Aleksandr
displayName: Pupkin, Andrey</code></pre>
<p>Список проектных групп вашего проекта (результат зависит от консистентности названия групп):</p>
<pre class="console"><code>ldapsearch -o ldif-wrap=no -Q -h ldap.itransition.corp -b &quot;OU=Groups,OU=Itransition,DC=itransition,DC=corp&quot; &quot;name=ILLIS*&quot; dn | grep CN=

=&gt;
dn: CN=ILLIS.Development,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.DevOps,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.Ecomm,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.Feature,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.FrontEnd,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.Helpdesk,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.ILLIS-PLUS,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.Platform,OU=ProjectGroups,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.PM-BA,OU=MailLists,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.QA,OU=A1QA.com,OU=Groups,OU=Itransition,DC=itransition,DC=corp
dn: CN=ILLIS.TL,OU=MailLists,OU=Groups,OU=Itransition,DC=itransition,DC=corp</code></pre>
<p>Список переговорных на Кульман 1 с окнами:</p>
<pre class="console"><code>ldapsearch -Q -h ldap.itransition.corp -b &quot;OU=ConferenceRooms,OU=ServiceAccounts,OU=Users,OU=Itransition,DC=itransition,DC=corp&quot; &quot;(&amp;(name=Room K1-*)(msExchResourceDisplay=*NaturalLight*))&quot; dn | grep CN= | cut -d , -f 1

=&gt;
dn: CN=Room K1-101
dn: CN=Room K1-117
dn: CN=Room K1-119
dn: CN=Room K1-202
dn: CN=Room K1-208
dn: CN=Room K1-421</code></pre>
<p>Или без окон:</p>
<pre class="console"><code>ldapsearch -Q -h ldap.itransition.corp -b &quot;OU=ConferenceRooms,OU=ServiceAccounts,OU=Users,OU=Itransition,DC=itransition,DC=corp&quot; &quot;(&amp;(name=Room K1-*)(!(msExchResourceDisplay=*NaturalLight*)))&quot; dn | grep CN= | cut -d , -f 1

=&gt;
dn: CN=Room K1-112
dn: CN=Room K1-217
dn: CN=Room K1-224
dn: CN=Room K1-301a-Manicure
dn: CN=Room K1-301a-Massage
dn: CN=Room K1-313a-1
dn: CN=Room K1-315
dn: CN=Room K1-316
dn: CN=Room K1-410
dn: CN=Room K1-411
dn: CN=Room K1-419</code></pre>
<p>Список <em>однофамильцев</em> рабочих станций:</p>
<pre class="console"><code>ldapsearch -o ldif-wrap=no -Q -h ldap.itransition.corp -b &quot;OU=Workstations,OU=Itransition,DC=itransition,DC=corp&quot; &quot;(&amp;(name=shestakova*)(!(name=shestakova-a)))&quot; managedBy

=&gt;
# extended LDIF
#
# LDAPv3
# base &lt;OU=Workstations,OU=Itransition,DC=itransition,DC=corp&gt; with scope subtree
# filter: (&amp;(name=shestakova*)(!(name=shestakova-a)))
# requesting: managedBy
#

# SHESTAKOVAV, Workstations, Itransition, itransition.corp
dn: CN=SHESTAKOVAV,OU=Workstations,OU=Itransition,DC=itransition,DC=corp
managedBy: CN=Shestakova\, Vitalina,OU=Active,OU=Users,OU=Itransition,DC=itransition,DC=corp

# search result
search: 5
result: 0 Success

# numResponses: 2
# numEntries: 1</code></pre>
<h2 id="занимательные-флаги">Занимательные флаги</h2>
<p>При работе с утилитой командной строки ldapsearch необходимо быть внимательным – она любит делать text-wrap, перенося окончания длинных CN на следующую строку. Для того, чтобы этого избежать – удобно пользоваться опцией <code>-o ldif-wrap=no</code>.</p>
<p>Знаете первое правило real estate бизнеса – <a href="https://www.thebalance.com/what-location-means-in-real-estate-1798766">Location, Location и еще раз Location</a>. Так вот ldapsearch тоже о нем в курсе ;) Для того, чтобы избавиться от надоедливых header-ов (иначе не удобно обрабатывать вывод другими утилитами), необходимо передавать флаги <code>-L -L -L</code>, о чем заботливо упоминается в документации: <em>A single -L restricts the output to LDIFv1. A second -L disables comments. A third -L disables printing of the LDIF version.</em></p>
<p>Флаг <code>-Q</code> тоже полезен, он “глушит” вывод SASL/GSSAPI библиотеки (реализация kerberos) в потоке вывода.</p>
<p>Внимательный читатель заметил символ экранирования – обратный slash, который ldapsearch вставляет при печати результатов поиска (причем в комментариях иным способом: <code># Shestakov\2C Aleksandr</code>). Дело в том, что запятая – “разделитель пути” в DN (distinguishable name – уникальный идентификатор объекта в AD). Так что при обработке вывода ldapseach лучше использовать другие поля, например displayName. Это бывает полезно еще и по причине того, что displayName может не совпадать по написанию с DN – так бывает, если пользователь очень-пре-очень хочет, чтобы в корпоративных системах его имя или фамилия имели отличное от принятого стандарта транслитерации.</p>
<p>Ну вот и все, спасибо за внимание ;) Выражаю благодарность Neskoromny Nikolay за идею статьи, Sovetkin Maksim за ревью.</p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 29 Oct 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2019-10-29-ldap.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Commit messages</title>
    <link>https://maksar.github.io/posts/WAT/2019-09-26.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Commit messages</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Commit messages</h1>
    <article>
  <span class="header">
    September 26, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/commits.jpg" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/commits.jpg" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 26 Sep 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-09-26.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Tempus fugit</title>
    <link>https://maksar.github.io/posts/WAT/2019-09-10.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Tempus fugit</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Tempus fugit</h1>
    <article>
  <span class="header">
    September 10, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="memento-mori">Memento mori</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> string <span class="fu">DateTimeConvertToSafeString</span><span class="op">(</span>DateTime datetime<span class="op">)</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>            <span class="op">=&gt;</span> datetime<span class="op">.</span><span class="fu">ToString</span><span class="op">().</span><span class="fu">Replace</span><span class="op">(</span><span class="ch">'/'</span><span class="op">,</span> <span class="ch">'-'</span><span class="op">).</span><span class="fu">Replace</span><span class="op">(</span><span class="ch">':'</span><span class="op">,</span> <span class="ch">'.'</span><span class="op">);</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 10 Sep 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-09-10.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Line numbers</title>
    <link>https://maksar.github.io/posts/WAT/2019-09-05.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Line numbers</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Line numbers</h1>
    <article>
  <span class="header">
    September  5, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/line-numbers.jpg" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/line-numbers.jpg" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 05 Sep 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-09-05.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Infiltration</title>
    <link>https://maksar.github.io/posts/WAT/2019-08-16.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Infiltration</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Infiltration</h1>
    <article>
  <span class="header">
    August 16, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="pure-counterexample">Pure counterexample</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">countInArray</span>(array<span class="op">,</span> item) {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">var</span> count <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>  array<span class="op">.</span><span class="fu">filter</span>(<span class="kw">function</span> (value) {</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> (value<span class="op">.</span><span class="fu">valueOf</span>() <span class="op">===</span> item<span class="op">.</span><span class="fu">valueOf</span>()) {</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>      count<span class="op">++</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>  })<span class="op">;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>  <span class="cf">return</span> count<span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Fri, 16 Aug 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-08-16.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Javascript eval WAT</title>
    <link>https://maksar.github.io/posts/WAT/2019-08-15.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Javascript eval WAT</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Javascript eval WAT</h1>
    <article>
  <span class="header">
    August 15, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h1 id="i-can-explain">I can explain…</h1>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>{<span class="dt">a</span><span class="op">:</span> <span class="dv">1</span><span class="op">,</span> <span class="dt">b</span><span class="op">:</span> <span class="dv">2</span>} <span class="co">// =&gt; {a: 1, b: 2}</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="pp">eval</span>(<span class="st">&quot;{a: 1, b: 2}&quot;</span>) <span class="co">// =&gt; SyntaxError: Unexpected token ':'. Parse error.</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 15 Aug 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-08-15.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>IP detective</title>
    <link>https://maksar.github.io/posts/WAT/2019-08-06.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - IP detective</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>IP detective</h1>
    <article>
  <span class="header">
    August  6, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="ill-find-you">I’ll find you…</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getIp</span><span class="op">()</span> <span class="op">{</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">URL</span> whatismyip <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">BufferedReader</span> in <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">try</span> <span class="op">{</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        whatismyip <span class="op">=</span> <span class="kw">new</span> <span class="bu">URL</span><span class="op">(</span><span class="st">&quot;http://checkip.amazonaws.com&quot;</span><span class="op">);</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        in <span class="op">=</span> <span class="kw">new</span> <span class="bu">BufferedReader</span><span class="op">(</span><span class="kw">new</span> <span class="bu">InputStreamReader</span><span class="op">(</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>                whatismyip<span class="op">.</span><span class="fu">openStream</span><span class="op">()));</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> ip <span class="op">=</span> in<span class="op">.</span><span class="fu">readLine</span><span class="op">();</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ip<span class="op">;</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">catch</span> <span class="op">(</span><span class="bu">IOException</span> e<span class="op">)</span> <span class="op">{</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        e<span class="op">.</span><span class="fu">printStackTrace</span><span class="op">();</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">finally</span> <span class="op">{</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>in <span class="op">!=</span> <span class="kw">null</span><span class="op">)</span> <span class="op">{</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>            <span class="cf">try</span> <span class="op">{</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>                in<span class="op">.</span><span class="fu">close</span><span class="op">();</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span> <span class="cf">catch</span> <span class="op">(</span><span class="bu">IOException</span> e<span class="op">)</span> <span class="op">{</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>                e<span class="op">.</span><span class="fu">printStackTrace</span><span class="op">();</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 06 Aug 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-08-06.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>You shell not pass</title>
    <link>https://maksar.github.io/posts/WAT/2019-07-30.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - You shell not pass</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>You shell not pass</h1>
    <article>
  <span class="header">
    July 30, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="she-sells-seashells-on-the-seashore">She sells seashells on the seashore</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">const</span> <span class="cn">PROJECT_NAME</span> <span class="op">=</span> <span class="st">&quot;name-of-the-project&quot;</span><span class="ot">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">function</span> getPath()</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>{</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="va">$path</span> <span class="op">=</span> <span class="fu">shell_exec</span>(<span class="st">'find / -name '</span><span class="op">.</span><span class="kw">self</span>::<span class="cn">PROJECT_NAME</span>)<span class="ot">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="va">$path</span> <span class="op">=</span> <span class="fu">str_replace</span>(<span class="cn">PHP_EOL</span><span class="ot">,</span> <span class="st">''</span><span class="ot">,</span> <span class="va">$path</span>)<span class="ot">;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="va">$path</span><span class="ot">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 30 Jul 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-07-30.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>The best code I have ever seen</title>
    <link>https://maksar.github.io/posts/WAT/2019-04-08.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - The best code I have ever seen</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>The best code I have ever seen</h1>
    <article>
  <span class="header">
    April  8, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="pure-glory">Pure glory</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode vb"><code class="sourceCode monobasic"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">Function </span>CheckLogin</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>  <span class="kw">If </span>trim(request.form.item(<span class="st">&quot;user_email&quot;</span>)) = <span class="st">&quot;&quot;</span> <span class="kw">AND</span> trim(Session(<span class="st">&quot;user_email&quot;</span>)) = <span class="st">&quot;&quot;</span> <span class="kw">Then</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    CheckLogin = 0 <span class="co">' NOT LOGGED IN</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>  <span class="kw">Else</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">Dim</span> WhichEmail</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">Dim</span> WhichPassword</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">If </span>trim(request.form.item(<span class="st">&quot;user_email&quot;</span>)) = <span class="st">&quot;&quot;</span> <span class="kw">Then</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>      WhichEmail = Session(<span class="st">&quot;user_email&quot;</span>)</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>      WhichPassword = Session(<span class="st">&quot;user_password&quot;</span>)</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">Else</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>      WhichEmail = request.form.item(<span class="st">&quot;user_email&quot;</span>)</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>      Session(<span class="st">&quot;user_email&quot;</span>) = request.form.item(<span class="st">&quot;user_email&quot;</span>)</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>      WhichPassword = request.form.item(<span class="st">&quot;user_password&quot;</span>)</span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>      Session(<span class="st">&quot;user_password&quot;</span>) = request.form.item(<span class="st">&quot;user_password&quot;</span>)</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    <span class="kw">End If</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">Dim</span> rsCheckLogin</span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">Dim</span> sqlCheckLogin</span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">Set </span>rsCheckLogin = Server.CreateObject(<span class="st">&quot;ADODB.Recordset&quot;</span>)</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>    sqlCheckLogin = <span class="st">&quot;SELECT tblUser_new.user_email, tblUser_new.userid, tblUser_new.remove, tblUser_new.level, tblUser_new.user_password, tblUser_new.user_password_change FROM tblUser_new WHERE tblUser_new.user_email='&quot;</span> &amp; WhichEmail &amp; <span class="st">&quot;'&quot;</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>    rsCheckLogin.Open sqlCheckLogin, conn, 1, 2</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>    <span class="kw">If </span>rsCheckLogin.EOF <span class="kw">Then</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>      CheckLogin = 1 <span class="co">' USER EMAIL NOT FOUND</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    ElseIf rsCheckLogin(<span class="st">&quot;user_password&quot;</span>) &lt;&gt; WhichPassword <span class="kw">Then</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>      CheckLogin = 2 <span class="co">' USER PASSWORD IS INCORRECT</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>    ElseIf rsCheckLogin(<span class="st">&quot;remove&quot;</span>) = <span class="kw">true</span> <span class="kw">Then</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>      CheckLogin = 3 <span class="co">' USER HAS BEEN REMOVED</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    ElseIf isnull(rsCheckLogin(<span class="st">&quot;user_password_change&quot;</span>)) <span class="kw">OR</span> now() - rsCheckLogin(<span class="st">&quot;user_password_change&quot;</span>) &gt; 7 <span class="kw">Then</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>      CheckLogin = 5 <span class="co">' USER NEEDS TO CHANGE PASSWORD</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    <span class="kw">Else</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>      CheckLogin = 4 <span class="co">' ALL GOOD</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>      UserLevel = rsCheckLogin(<span class="st">&quot;level&quot;</span>)</span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>      UserID = rsCheckLogin(<span class="st">&quot;userid&quot;</span>)</span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    <span class="kw">End If</span></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>  <span class="kw">End If</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a><span class="kw">End Function</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 08 Apr 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-04-08.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Hash code</title>
    <link>https://maksar.github.io/posts/WAT/2019-04-01.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Hash code</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Hash code</h1>
    <article>
  <span class="header">
    April  1, 2019 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="hash-date-random">Hash = Date + Random</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">export</span> <span class="im">default</span> <span class="kw">class</span> GroupBlockHandler {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">static</span> <span class="fu">getHashCode</span>() {</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="bu">Date</span><span class="op">.</span><span class="fu">now</span>()<span class="op">.</span><span class="fu">toString</span>(<span class="dv">36</span>) <span class="op">+</span> <span class="bu">Math</span><span class="op">.</span><span class="fu">random</span>()<span class="op">.</span><span class="fu">toString</span>(<span class="dv">36</span>)<span class="op">.</span><span class="fu">replace</span>(<span class="st">'0.'</span><span class="op">,</span> <span class="st">''</span>)<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 01 Apr 2019 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2019-04-01.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Code comments</title>
    <link>https://maksar.github.io/posts/WAT/2018-12-27.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Code comments</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Code comments</h1>
    <article>
  <span class="header">
    December 27, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="comments-are-reflection-of-the-genius">Comments are reflection of the genius</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> wb <span class="op">=</span> { <span class="dt">SheetNames</span><span class="op">:</span> []<span class="op">,</span> <span class="dt">Sheets</span><span class="op">:</span> {} }<span class="op">,</span> <span class="co">// workbook</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    ws<span class="op">;</span> <span class="co">// worksheet</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 27 Dec 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-12-27.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Tic-tac</title>
    <link>https://maksar.github.io/posts/WAT/2018-11-22.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Tic-tac</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Tic-tac</h1>
    <article>
  <span class="header">
    November 22, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> sec <span class="op">=</span> <span class="dv">00</span><span class="op">;</span>   <span class="co">// set the seconds</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">var</span> min <span class="op">=</span> <span class="dv">60</span><span class="op">;</span>   <span class="co">// set the minutes</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">countDown</span>() {</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  sec<span class="op">--;</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> (sec <span class="op">==</span> <span class="op">-</span><span class="dv">01</span>) {</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    sec <span class="op">=</span> <span class="dv">59</span><span class="op">;</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    min <span class="op">=</span> min <span class="op">-</span> <span class="dv">1</span><span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>  } <span class="cf">else</span> {</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>   min <span class="op">=</span> min<span class="op">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (sec<span class="op">&lt;=</span><span class="dv">9</span>) { sec <span class="op">=</span> <span class="st">&quot;0&quot;</span> <span class="op">+</span> sec<span class="op">;</span> }</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>  time <span class="op">=</span> (min<span class="op">&lt;=</span><span class="dv">9</span> <span class="op">?</span> <span class="st">&quot;0&quot;</span> <span class="op">+</span> min <span class="op">:</span> min) <span class="op">+</span> <span class="st">&quot; min and &quot;</span> <span class="op">+</span> sec <span class="op">+</span> <span class="st">&quot; sec &quot;</span><span class="op">;</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (<span class="bu">document</span><span class="op">.</span><span class="fu">getElementById</span>) { theTime<span class="op">.</span><span class="at">innerHTML</span> <span class="op">=</span> time<span class="op">;</span> }</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>  SD<span class="op">=</span><span class="bu">window</span><span class="op">.</span><span class="fu">setTimeout</span>(<span class="st">&quot;countDown();&quot;</span><span class="op">,</span> <span class="dv">1000</span>)<span class="op">;</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> (min <span class="op">==</span> <span class="st">'00'</span> <span class="op">&amp;&amp;</span> sec <span class="op">==</span> <span class="st">'00'</span>) { sec <span class="op">=</span> <span class="st">&quot;00&quot;</span><span class="op">;</span> <span class="bu">window</span><span class="op">.</span><span class="fu">clearTimeout</span>(SD)<span class="op">;</span> }</span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>}</span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">addLoadEvent</span>(func) {</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>  <span class="kw">var</span> oldonload <span class="op">=</span> <span class="bu">window</span><span class="op">.</span><span class="at">onload</span><span class="op">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>  <span class="cf">if</span> (<span class="kw">typeof</span> <span class="bu">window</span><span class="op">.</span><span class="at">onload</span> <span class="op">!=</span> <span class="st">'function'</span>) {</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>    <span class="bu">window</span><span class="op">.</span><span class="at">onload</span> <span class="op">=</span> func<span class="op">;</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>  } <span class="cf">else</span> {</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    <span class="bu">window</span><span class="op">.</span><span class="at">onload</span> <span class="op">=</span> <span class="kw">function</span>() {</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>      <span class="cf">if</span> (oldonload) {</span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>        <span class="fu">oldonload</span>()<span class="op">;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>      }</span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>      <span class="fu">func</span>()<span class="op">;</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>  }</span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>}</span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a><span class="fu">addLoadEvent</span>(<span class="kw">function</span>() {</span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>  <span class="fu">countDown</span>()<span class="op">;</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>})<span class="op">;</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Thu, 22 Nov 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-11-22.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Date parsing</title>
    <link>https://maksar.github.io/posts/WAT/2018-11-12.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Date parsing</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Date parsing</h1>
    <article>
  <span class="header">
    November 12, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="from-mongodb-with-love">From MongoDB with love</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode ruby"><code class="sourceCode ruby"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co"># Dirty hack to remove JavaScript objects</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>output<span class="at">.gsub!</span>(<span class="ss">/ISODate\((.+?)\)/</span>, <span class="vs">'\1 '</span>)</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>output<span class="at">.gsub!</span>(<span class="ss">/Timestamp\((.+?)\)/</span>, <span class="vs">'[\1]'</span>)</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">#Hack to avoid non-json empty sets</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>output <span class="kw">=</span> <span class="st">&quot;{}&quot;</span> <span class="cf">if</span> output <span class="kw">==</span> <span class="st">&quot;null\n&quot;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="cn">JSON</span><span class="at">.parse</span>(output)</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 12 Nov 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-11-12.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Stairway to Heaven</title>
    <link>https://maksar.github.io/posts/WAT/2018-10-20.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Stairway to Heaven</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Stairway to Heaven</h1>
    <article>
  <span class="header">
    October 20, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><a href="../../images/wat/stairway.jpg" class="fresco center" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/wat/stairway.jpg" /></a></p>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 20 Oct 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-10-20.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Repetition is a key</title>
    <link>https://maksar.github.io/posts/WAT/2018-10-16.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Repetition is a key</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Repetition is a key</h1>
    <article>
  <span class="header">
    October 16, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="size-is-indeed-important">Size is indeed important</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> ySize <span class="op">=</span> dao<span class="op">.</span><span class="fu">getIssuesSizeByKey</span><span class="op">(</span><span class="ch">'Y'</span><span class="op">);</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> zSize <span class="op">=</span> dao<span class="op">.</span><span class="fu">getIssuesSizeByKey</span><span class="op">(</span><span class="ch">'Z'</span><span class="op">);</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> xSize <span class="op">=</span> ySize<span class="op">+</span>zSize<span class="op">;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> vSize <span class="op">=</span> dao<span class="op">.</span><span class="fu">getIssuesSizeByKey</span><span class="op">(</span><span class="ch">'V'</span><span class="op">);</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> pSize <span class="op">=</span> dao<span class="op">.</span><span class="fu">getIssuesSizeByKey</span><span class="op">(</span><span class="ch">'P'</span><span class="op">);</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> g <span class="op">=</span> dao<span class="op">.</span><span class="fu">getIssuesSizeByKey</span><span class="op">(</span><span class="ch">'G'</span><span class="op">);</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> h <span class="op">=</span> dao<span class="op">.</span><span class="fu">getIssuesSizeByKey</span><span class="op">(</span><span class="ch">'H'</span><span class="op">);</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> d <span class="op">=</span> dao<span class="op">.</span><span class="fu">getIssuesSizeByKey</span><span class="op">(</span><span class="ch">'D'</span><span class="op">);</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="cf">return</span> <span class="bu">String</span><span class="op">.</span><span class="fu">format</span><span class="op">(</span>messageFormat<span class="op">,</span> xSize<span class="op">,</span>ySize<span class="op">,</span>zSize<span class="op">,</span>vSize<span class="op">,</span>pSize<span class="op">,</span>g<span class="op">,</span>h<span class="op">,</span>d<span class="op">);</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 16 Oct 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-10-16.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Password hashing</title>
    <link>https://maksar.github.io/posts/WAT/2018-09-15.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Password hashing</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Password hashing</h1>
    <article>
  <span class="header">
    September 15, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p>Hash from a password.</p>
<p>Password is in config.</p>
<p>Config is in repo.</p>
<p>Repo is in access.</p>
<h2 id="reading-data-from-configuration">Reading data from configuration</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">static</span> <span class="bu">String</span> username <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">static</span> <span class="bu">String</span> passwordHash <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="dt">static</span><span class="op">{</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>  username <span class="op">=</span> bundle<span class="op">.</span><span class="fu">getString</span><span class="op">(</span><span class="st">&quot;username&quot;</span><span class="op">);</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>  passwordHash <span class="op">=</span> <span class="kw">new</span> <span class="bu">BigInteger</span><span class="op">(</span><span class="dv">1</span><span class="op">,</span><span class="bu">MessageDigest</span><span class="op">.</span><span class="fu">getInstance</span><span class="op">(</span><span class="st">&quot;md5&quot;</span><span class="op">).</span><span class="fu">digest</span><span class="op">(</span>bundle<span class="op">.</span><span class="fu">getString</span><span class="op">(</span><span class="st">&quot;password&quot;</span><span class="op">).</span><span class="fu">getBytes</span><span class="op">(</span><span class="st">&quot;UTF-8&quot;</span><span class="op">))).</span><span class="fu">toString</span><span class="op">(</span><span class="dv">16</span><span class="op">);</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="dt">static</span> <span class="bu">String</span> <span class="fu">getUsername</span><span class="op">(){</span><span class="cf">return</span> username<span class="op">;}</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="dt">static</span> <span class="bu">String</span> <span class="fu">getPasswordHash</span><span class="op">(){</span><span class="cf">return</span> passwordHash<span class="op">;}</span></span></code></pre></div>
<h2 id="and-then-using-it">And then using it</h2>
<div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>SMSSenderImpl smsSender <span class="op">=</span> <span class="kw">new</span> <span class="fu">SMSSenderImpl</span><span class="op">(</span>MessageDataConfig<span class="op">.</span><span class="fu">getUsername</span><span class="op">(),</span>MessageDataConfig<span class="op">.</span><span class="fu">getPasswordHash</span><span class="op">());</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>LOG<span class="op">.</span><span class="fu">info</span><span class="op">(</span>smsSender<span class="op">.</span><span class="fu">sendSms</span><span class="op">(</span>number<span class="op">,</span> messageText<span class="op">));</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 15 Sep 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-09-15.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Email validations</title>
    <link>https://maksar.github.io/posts/WAT/2018-09-02.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Email validations</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Email validations</h1>
    <article>
  <span class="header">
    September  2, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p><img src="../../previews/wat/email.jpg" class="center" /></p>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">\A[^@]+</span><span class="ss">@ </span><span class="sc">[^@]+\z</span><span class="ss">/</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">([-_\w\.]+)(</span><span class="ss">@</span><span class="sc">)([-_\w\.]+)\b</span><span class="ss">/i</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">([^\s&lt;]+|(</span><span class="ss">&quot;</span><span class="sc">[^\r\n&quot;]+</span><span class="ss">&quot;</span><span class="sc">))</span><span class="ss">@</span><span class="sc">\S+</span><span class="ss">'/</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^([\w\.%\+\-]+)</span><span class="ss">@</span><span class="sc">([\w\-]+\.)+([\w]{2,})$</span><span class="ss">/i</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">\b[A-Z0-9._%+-]+</span><span class="ss">@</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[A-Z0-9-]+\.)+[A-Z]{2,4}\b</span><span class="ss">/i</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^\w+([-+.\']\w+)*</span><span class="ss">@</span><span class="sc">\w+([-.]\w+)*\.\w+([-.]\w+)*$</span><span class="ss">/</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">[-0-9a-zA-Z.+_]+</span><span class="ss">@ </span><span class="sc">[-0-9a-zA-Z.+_]+\\</span><span class="ss">.</span><span class="sc">[a-zA-Z]{2,4}</span><span class="ss">/</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^[A-Za-z0-9._%+-]+</span><span class="ss">@ </span><span class="sc">[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$</span><span class="ss">/</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">\A[A-Z0-9\._%+\-]+</span><span class="ss">@ </span><span class="sc">[A-Z0-9\.\-]+\.(?</span><span class="ss">:</span><span class="sc">[A-Z]{2,})\z</span><span class="ss">/i</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^[\(\)0-9\- \+\.]{10,20}</span><span class="ss"> </span><span class="sc">*[extension\.]{0,9}</span><span class="ss"> </span><span class="sc">*[0-9]{0,5}$</span><span class="ss">/i</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$</span><span class="ss">/</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$</span><span class="ss">/</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^([a-zA-Z0-9_\\.\\-'])+\\</span><span class="ss">@</span><span class="sc">(([a-zA-Z0-9\\-])+\\</span><span class="ss">.</span><span class="sc">)+([a-zA-Z0-9]{2,4})+$</span><span class="ss">/</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^[a-zA-Z0-9+&amp;*-]+(?</span><span class="ss">:</span><span class="sc">\.[a-zA-Z0-9_+&amp;*-]+)*</span><span class="ss">@</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$</span><span class="ss">/</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^[a-z0-9!#$%&amp;'*+\/=?^_`{|}~.-]+</span><span class="ss">@ </span><span class="sc">[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$</span><span class="ss">/i</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a><span class="op">%</span>r{<span class="op">^</span>[a<span class="op">-</span>z0<span class="dv">-9</span><span class="op">!</span>#$<span class="op">%&amp;</span><span class="st">'*+</span><span class="sc">\/</span><span class="st">=?^_`{|}~.-]+@ [a-z0-9]([a-z0-9-]*[a-z0-9])?(</span><span class="sc">\.</span><span class="st">[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$}i</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^[a-z0-9!#$%&amp;'*+\/=?^_`{|}~.-]+</span><span class="ss">@ </span><span class="sc">[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)+[a-z0-9]$</span><span class="ss">/i</span></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^(([^&lt;&gt;()\[\]\\.,;:\s@&quot;]+(\.[^&lt;&gt;()\[\]\\.,;:\s@&quot;]+)*)|(</span><span class="ss">&quot;.</span><span class="sc">+</span><span class="ss">&quot;</span><span class="sc">))</span><span class="ss">@</span><span class="sc">((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}</span><span class="ss">]</span><span class="sc">)|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$</span><span class="ss">/</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?</span><span class="ss">:</span><span class="sc">\\</span><span class="ss">.</span><span class="sc">[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\&quot;(?</span><span class="ss">:</span><span class="sc">[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\&quot;)</span><span class="ss">@</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[a-z0-9](?</span><span class="ss">:</span><span class="sc">[a-z0-9-]*[a-z0-9])?\\</span><span class="ss">.</span><span class="sc">)+[a-z0-9](?</span><span class="ss">:</span><span class="sc">[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|</span><span class="ss">2</span><span class="sc">[0-4][0-9]|[01]?[0-9][0-9]?)\\</span><span class="ss">.</span><span class="sc">){3}(?</span><span class="ss">:25</span><span class="sc">[0-5]|</span><span class="ss">2</span><span class="sc">[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]</span><span class="ss">:</span><span class="sc">(?</span><span class="ss">:</span><span class="sc">[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\</span><span class="ss">]</span><span class="sc">)</span><span class="ss">/</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a><span class="ss">/</span><span class="sc">^((([a-z]|\d|[!#\$%&amp;'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&amp;'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x</span><span class="ss">22</span><span class="sc">)((((\x</span><span class="ss">20</span><span class="sc">|\x</span><span class="ss">09</span><span class="sc">)*(\x</span><span class="ss">0d</span><span class="sc">\x</span><span class="ss">0a</span><span class="sc">))?(\x</span><span class="ss">20</span><span class="sc">|\x</span><span class="ss">09</span><span class="sc">)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x</span><span class="ss">21</span><span class="sc">|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x</span><span class="ss">20</span><span class="sc">|\x</span><span class="ss">09</span><span class="sc">)*(\x</span><span class="ss">0d</span><span class="sc">\x</span><span class="ss">0a</span><span class="sc">))?(\x</span><span class="ss">20</span><span class="sc">|\x</span><span class="ss">09</span><span class="sc">)+)?(\x</span><span class="ss">22</span><span class="sc">)))</span><span class="ss">@</span><span class="sc">((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|</span><span class="ss">-</span><span class="sc">|\.|</span><span class="ss">_</span><span class="sc">|</span><span class="ss">~</span><span class="sc">|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|</span><span class="ss">-</span><span class="sc">|\.|</span><span class="ss">_</span><span class="sc">|</span><span class="ss">~</span><span class="sc">|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$</span><span class="ss">/</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sun, 02 Sep 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-09-02.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Calendar events</title>
    <link>https://maksar.github.io/posts/WAT/2018-08-27.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Calendar events</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Calendar events</h1>
    <article>
  <span class="header">
    August 27, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p>What day is it today? The old year is over, the new is the beginning. And I also heard from my grandfather that his grandfather told him that on this day everything in the world happens - just know how to lie in wait and spy.</p>
<p><img src="../../previews/wat/calendar.jpg" class="center" /></p>
<h2 id="the-class">The class</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode c#"><code class="sourceCode cs"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="co">/// Represents status choice for months.</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">static</span> <span class="kw">class</span> Months</span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> <span class="kw">static</span> <span class="dt">uint</span> languageCode <span class="op">=</span> <span class="dv">1033</span><span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// Returns months name from its number.</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// </span><span class="kw">&lt;param</span><span class="ot"> name=</span><span class="dt">&quot;number&quot;</span><span class="kw">&gt;&lt;/param&gt;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// </span><span class="kw">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> <span class="fu">GetMonthName</span><span class="op">(</span><span class="dt">int</span> number<span class="op">)</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>        <span class="kw">switch</span> <span class="op">(</span>number<span class="op">)</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>        <span class="op">{</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">1</span><span class="op">:</span> <span class="kw">return</span> January<span class="op">;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">2</span><span class="op">:</span> <span class="kw">return</span> February<span class="op">;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">3</span><span class="op">:</span> <span class="kw">return</span> March<span class="op">;</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">4</span><span class="op">:</span> <span class="kw">return</span> April<span class="op">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">5</span><span class="op">:</span> <span class="kw">return</span> May<span class="op">;</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">6</span><span class="op">:</span> <span class="kw">return</span> June<span class="op">;</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">7</span><span class="op">:</span> <span class="kw">return</span> July<span class="op">;</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">8</span><span class="op">:</span> <span class="kw">return</span> August<span class="op">;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">9</span><span class="op">:</span> <span class="kw">return</span> September<span class="op">;</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">10</span><span class="op">:</span> <span class="kw">return</span> October<span class="op">;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">11</span><span class="op">:</span> <span class="kw">return</span> November<span class="op">;</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>            <span class="kw">case</span> <span class="dv">12</span><span class="op">:</span> <span class="kw">return</span> December<span class="op">;</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>        <span class="kw">return</span> January<span class="op">;</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> April</span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_April&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> August</span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_August&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> December</span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_December&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> February</span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_February&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> January</span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_January&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> July</span>
<span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_July&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> June</span>
<span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_June&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> March</span>
<span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_March&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> May</span>
<span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_May&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-77"><a href="#cb1-77" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-78"><a href="#cb1-78" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> November</span>
<span id="cb1-79"><a href="#cb1-79" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-80"><a href="#cb1-80" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_November&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-81"><a href="#cb1-81" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-82"><a href="#cb1-82" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-83"><a href="#cb1-83" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> October</span>
<span id="cb1-84"><a href="#cb1-84" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-85"><a href="#cb1-85" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_October&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-86"><a href="#cb1-86" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-87"><a href="#cb1-87" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-88"><a href="#cb1-88" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> <span class="dt">string</span> September</span>
<span id="cb1-89"><a href="#cb1-89" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-90"><a href="#cb1-90" aria-hidden="true" tabindex="-1"></a>        <span class="kw">get</span> <span class="op">{</span> <span class="kw">return</span> LocalizationUtility<span class="op">.</span><span class="fu">Localize</span><span class="op">(</span><span class="st">&quot;Choices_Month_September&quot;</span><span class="op">,</span> languageCode<span class="op">);</span> <span class="op">}</span></span>
<span id="cb1-91"><a href="#cb1-91" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-92"><a href="#cb1-92" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-93"><a href="#cb1-93" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-94"><a href="#cb1-94" aria-hidden="true" tabindex="-1"></a><span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb1-95"><a href="#cb1-95" aria-hidden="true" tabindex="-1"></a><span class="co">/// Adds months to the dropdown control.</span></span>
<span id="cb1-96"><a href="#cb1-96" aria-hidden="true" tabindex="-1"></a><span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb1-97"><a href="#cb1-97" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span> <span class="dt">void</span> <span class="fu">InitializeMonthDropDown</span><span class="op">(</span>DropDownList monthDropDown<span class="op">)</span></span>
<span id="cb1-98"><a href="#cb1-98" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-99"><a href="#cb1-99" aria-hidden="true" tabindex="-1"></a>    ListItem<span class="op">[]</span> months <span class="op">=</span> <span class="op">{</span></span>
<span id="cb1-100"><a href="#cb1-100" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">January</span><span class="op">,</span> <span class="st">&quot;1&quot;</span><span class="op">),</span></span>
<span id="cb1-101"><a href="#cb1-101" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">February</span><span class="op">,</span> <span class="st">&quot;2&quot;</span><span class="op">),</span></span>
<span id="cb1-102"><a href="#cb1-102" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">March</span><span class="op">,</span> <span class="st">&quot;3&quot;</span><span class="op">),</span></span>
<span id="cb1-103"><a href="#cb1-103" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">April</span><span class="op">,</span> <span class="st">&quot;4&quot;</span><span class="op">),</span></span>
<span id="cb1-104"><a href="#cb1-104" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">May</span><span class="op">,</span> <span class="st">&quot;5&quot;</span><span class="op">),</span></span>
<span id="cb1-105"><a href="#cb1-105" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">June</span><span class="op">,</span> <span class="st">&quot;6&quot;</span><span class="op">),</span></span>
<span id="cb1-106"><a href="#cb1-106" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">July</span><span class="op">,</span> <span class="st">&quot;7&quot;</span><span class="op">),</span></span>
<span id="cb1-107"><a href="#cb1-107" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">August</span><span class="op">,</span> <span class="st">&quot;8&quot;</span><span class="op">),</span></span>
<span id="cb1-108"><a href="#cb1-108" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">September</span><span class="op">,</span> <span class="st">&quot;9&quot;</span><span class="op">),</span></span>
<span id="cb1-109"><a href="#cb1-109" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">October</span><span class="op">,</span> <span class="st">&quot;10&quot;</span><span class="op">),</span></span>
<span id="cb1-110"><a href="#cb1-110" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">November</span><span class="op">,</span> <span class="st">&quot;11&quot;</span><span class="op">),</span></span>
<span id="cb1-111"><a href="#cb1-111" aria-hidden="true" tabindex="-1"></a>                            <span class="kw">new</span> <span class="fu">ListItem</span><span class="op">(</span>Months<span class="op">.</span><span class="fu">December</span><span class="op">,</span> <span class="st">&quot;12&quot;</span><span class="op">)</span></span>
<span id="cb1-112"><a href="#cb1-112" aria-hidden="true" tabindex="-1"></a>                        <span class="op">};</span></span>
<span id="cb1-113"><a href="#cb1-113" aria-hidden="true" tabindex="-1"></a>    monthDropDown<span class="op">.</span><span class="fu">Items</span><span class="op">.</span><span class="fu">AddRange</span><span class="op">(</span>months<span class="op">);</span></span>
<span id="cb1-114"><a href="#cb1-114" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<h2 id="the-enum">The enum</h2>
<div class="sourceCode" id="cb2"><pre class="sourceCode c#"><code class="sourceCode cs"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// Months enum</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">enum</span> Month</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The january</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>        January<span class="op">,</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The february</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>        February<span class="op">,</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The march</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>        March<span class="op">,</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The april</span></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>        April<span class="op">,</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The may</span></span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>        May<span class="op">,</span></span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The june</span></span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a>        June<span class="op">,</span></span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The july</span></span>
<span id="cb2-38"><a href="#cb2-38" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-39"><a href="#cb2-39" aria-hidden="true" tabindex="-1"></a>        July<span class="op">,</span></span>
<span id="cb2-40"><a href="#cb2-40" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-41"><a href="#cb2-41" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-42"><a href="#cb2-42" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The august</span></span>
<span id="cb2-43"><a href="#cb2-43" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-44"><a href="#cb2-44" aria-hidden="true" tabindex="-1"></a>        August<span class="op">,</span></span>
<span id="cb2-45"><a href="#cb2-45" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-46"><a href="#cb2-46" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-47"><a href="#cb2-47" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The september</span></span>
<span id="cb2-48"><a href="#cb2-48" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-49"><a href="#cb2-49" aria-hidden="true" tabindex="-1"></a>        September<span class="op">,</span></span>
<span id="cb2-50"><a href="#cb2-50" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-51"><a href="#cb2-51" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-52"><a href="#cb2-52" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The october</span></span>
<span id="cb2-53"><a href="#cb2-53" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-54"><a href="#cb2-54" aria-hidden="true" tabindex="-1"></a>        October<span class="op">,</span></span>
<span id="cb2-55"><a href="#cb2-55" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-56"><a href="#cb2-56" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-57"><a href="#cb2-57" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The november</span></span>
<span id="cb2-58"><a href="#cb2-58" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-59"><a href="#cb2-59" aria-hidden="true" tabindex="-1"></a>        November<span class="op">,</span></span>
<span id="cb2-60"><a href="#cb2-60" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-61"><a href="#cb2-61" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;summary&gt;</span></span>
<span id="cb2-62"><a href="#cb2-62" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// The december</span></span>
<span id="cb2-63"><a href="#cb2-63" aria-hidden="true" tabindex="-1"></a>        <span class="co">/// </span><span class="kw">&lt;/summary&gt;</span></span>
<span id="cb2-64"><a href="#cb2-64" aria-hidden="true" tabindex="-1"></a>        December</span>
<span id="cb2-65"><a href="#cb2-65" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span></code></pre></div>
<h2 id="the-interface">The interface</h2>
<div class="sourceCode" id="cb3"><pre class="sourceCode c#"><code class="sourceCode cs"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co">/**</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="co"> * Useful constants for months.  Note that these are NOT equivalent to the</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="co"> * constants defined by java.util.Calendar (where JANUARY=0 and DECEMBER=11).</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="co"> * </span><span class="kw">&lt;P&gt;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="co"> * Used by the SerialDate and RegularTimePeriod classes.</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="co"> */</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">interface</span> MonthConstants <span class="op">{</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for January. */</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> JANUARY <span class="op">=</span> <span class="dv">1</span><span class="op">;</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for February. */</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> FEBRUARY <span class="op">=</span> <span class="dv">2</span><span class="op">;</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for March. */</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> MARCH <span class="op">=</span> <span class="dv">3</span><span class="op">;</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for April. */</span></span>
<span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> APRIL <span class="op">=</span> <span class="dv">4</span><span class="op">;</span></span>
<span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for May. */</span></span>
<span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> MAY <span class="op">=</span> <span class="dv">5</span><span class="op">;</span></span>
<span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for June. */</span></span>
<span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> JUNE <span class="op">=</span> <span class="dv">6</span><span class="op">;</span></span>
<span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for July. */</span></span>
<span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> JULY <span class="op">=</span> <span class="dv">7</span><span class="op">;</span></span>
<span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for August. */</span></span>
<span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> AUGUST <span class="op">=</span> <span class="dv">8</span><span class="op">;</span></span>
<span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for September. */</span></span>
<span id="cb3-34"><a href="#cb3-34" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> SEPTEMBER <span class="op">=</span> <span class="dv">9</span><span class="op">;</span></span>
<span id="cb3-35"><a href="#cb3-35" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-36"><a href="#cb3-36" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for October. */</span></span>
<span id="cb3-37"><a href="#cb3-37" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> OCTOBER <span class="op">=</span> <span class="dv">10</span><span class="op">;</span></span>
<span id="cb3-38"><a href="#cb3-38" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-39"><a href="#cb3-39" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for November. */</span></span>
<span id="cb3-40"><a href="#cb3-40" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> NOVEMBER <span class="op">=</span> <span class="dv">11</span><span class="op">;</span></span>
<span id="cb3-41"><a href="#cb3-41" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-42"><a href="#cb3-42" aria-hidden="true" tabindex="-1"></a>    <span class="co">/** Constant for December. */</span></span>
<span id="cb3-43"><a href="#cb3-43" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> <span class="kw">static</span> final <span class="dt">int</span> DECEMBER <span class="op">=</span> <span class="dv">12</span><span class="op">;</span></span>
<span id="cb3-44"><a href="#cb3-44" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-45"><a href="#cb3-45" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 27 Aug 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-08-27.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>My favorite type of comments</title>
    <link>https://maksar.github.io/posts/WAT/2018-08-20.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - My favorite type of comments</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>My favorite type of comments</h1>
    <article>
  <span class="header">
    August 20, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p>A selection of dearly beloved todos and fixes</p>
<pre><code>//  TODO:   Please help with documentation here, as I don't know the details, specially for the methods not documented.
/// &lt;summary&gt;
///
/// &lt;/summary&gt;

# TODO: write code...

//TODO change this ???

/**
* TODO: What does it do?
* @since 5.3.1
*/

// @todo fixme
return TRUE;

// FIXME: do something here
// FIXME: do something else here

* FIXME: not use this damn method, never!!!

/* FIXME FIXME FIXME */

// fixme: deprecated</code></pre>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Mon, 20 Aug 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-08-20.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Proper mapping</title>
    <link>https://maksar.github.io/posts/WAT/2018-08-18.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Proper mapping</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Proper mapping</h1>
    <article>
  <span class="header">
    August 18, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p>No comments, just tears.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode c#"><code class="sourceCode cs"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">static</span> <span class="dt">int</span><span class="op">?</span> <span class="fu">GetConstIPSCode</span><span class="op">(</span><span class="dt">int</span> zimCode<span class="op">)</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">switch</span><span class="op">(</span>zimCode<span class="op">)</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>            <span class="co">//Disbursements</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5375</span><span class="op">:</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2450</span><span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5376</span><span class="op">:</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2455</span><span class="op">;</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4705</span><span class="op">:</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2085</span><span class="op">;</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4710</span><span class="op">:</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2090</span><span class="op">;</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3200</span><span class="op">:</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">3005</span><span class="op">;</span> <span class="co">//?</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5405</span><span class="op">:</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2220</span><span class="op">;</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5406</span><span class="op">:</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2225</span><span class="op">;</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5403</span><span class="op">:</span></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2235</span><span class="op">;</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5400</span><span class="op">:</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2240</span><span class="op">;</span></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5410</span><span class="op">:</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2265</span><span class="op">;</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4105</span><span class="op">:</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4106</span><span class="op">:</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2015</span><span class="op">;</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">6100</span><span class="op">:</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">6105</span><span class="op">:</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2010</span><span class="op">;</span></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5205</span><span class="op">:</span></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2120</span><span class="op">;</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5210</span><span class="op">:</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2125</span><span class="op">;</span></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5505</span><span class="op">:</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2305</span><span class="op">;</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5510</span><span class="op">:</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2310</span><span class="op">;</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5515</span><span class="op">:</span></span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2315</span><span class="op">;</span></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4121</span><span class="op">:</span></span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2320</span><span class="op">;</span></span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5315</span><span class="op">:</span></span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2135</span><span class="op">;</span></span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5325</span><span class="op">:</span></span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2145</span><span class="op">;</span></span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5330</span><span class="op">:</span></span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2160</span><span class="op">;</span></span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5335</span><span class="op">:</span></span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2165</span><span class="op">;</span></span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5340</span><span class="op">:</span></span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2170</span><span class="op">;</span></span>
<span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5345</span><span class="op">:</span></span>
<span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2175</span><span class="op">;</span></span>
<span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5305</span><span class="op">:</span></span>
<span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2180</span><span class="op">;</span></span>
<span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5310</span><span class="op">:</span></span>
<span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2185</span><span class="op">;</span></span>
<span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5320</span><span class="op">:</span></span>
<span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2190</span><span class="op">;</span></span>
<span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5355</span><span class="op">:</span></span>
<span id="cb1-64"><a href="#cb1-64" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2195</span><span class="op">;</span></span>
<span id="cb1-65"><a href="#cb1-65" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5350</span><span class="op">:</span></span>
<span id="cb1-66"><a href="#cb1-66" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2200</span><span class="op">;</span></span>
<span id="cb1-67"><a href="#cb1-67" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4605</span><span class="op">:</span></span>
<span id="cb1-68"><a href="#cb1-68" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2075</span><span class="op">;</span></span>
<span id="cb1-69"><a href="#cb1-69" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4610</span><span class="op">:</span></span>
<span id="cb1-70"><a href="#cb1-70" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2080</span><span class="op">;</span></span>
<span id="cb1-71"><a href="#cb1-71" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4805</span><span class="op">:</span></span>
<span id="cb1-72"><a href="#cb1-72" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2095</span><span class="op">;</span></span>
<span id="cb1-73"><a href="#cb1-73" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4810</span><span class="op">:</span></span>
<span id="cb1-74"><a href="#cb1-74" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2100</span><span class="op">;</span></span>
<span id="cb1-75"><a href="#cb1-75" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4205</span><span class="op">:</span></span>
<span id="cb1-76"><a href="#cb1-76" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2025</span><span class="op">;</span></span>
<span id="cb1-77"><a href="#cb1-77" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4210</span><span class="op">:</span></span>
<span id="cb1-78"><a href="#cb1-78" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2030</span><span class="op">;</span></span>
<span id="cb1-79"><a href="#cb1-79" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4215</span><span class="op">:</span></span>
<span id="cb1-80"><a href="#cb1-80" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2035</span><span class="op">;</span></span>
<span id="cb1-81"><a href="#cb1-81" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4300</span><span class="op">:</span></span>
<span id="cb1-82"><a href="#cb1-82" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4305</span><span class="op">:</span></span>
<span id="cb1-83"><a href="#cb1-83" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2040</span><span class="op">;</span></span>
<span id="cb1-84"><a href="#cb1-84" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4905</span><span class="op">:</span></span>
<span id="cb1-85"><a href="#cb1-85" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2105</span><span class="op">;</span></span>
<span id="cb1-86"><a href="#cb1-86" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4910</span><span class="op">:</span></span>
<span id="cb1-87"><a href="#cb1-87" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2110</span><span class="op">;</span></span>
<span id="cb1-88"><a href="#cb1-88" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5600</span><span class="op">:</span></span>
<span id="cb1-89"><a href="#cb1-89" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5605</span><span class="op">:</span></span>
<span id="cb1-90"><a href="#cb1-90" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2000</span><span class="op">;</span></span>
<span id="cb1-91"><a href="#cb1-91" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5100</span><span class="op">:</span></span>
<span id="cb1-92"><a href="#cb1-92" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5105</span><span class="op">:</span></span>
<span id="cb1-93"><a href="#cb1-93" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2115</span><span class="op">;</span></span>
<span id="cb1-94"><a href="#cb1-94" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4500</span><span class="op">:</span></span>
<span id="cb1-95"><a href="#cb1-95" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4505</span><span class="op">:</span></span>
<span id="cb1-96"><a href="#cb1-96" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2065</span><span class="op">;</span></span>
<span id="cb1-97"><a href="#cb1-97" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4510</span><span class="op">:</span></span>
<span id="cb1-98"><a href="#cb1-98" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2070</span><span class="op">;</span></span>
<span id="cb1-99"><a href="#cb1-99" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4400</span><span class="op">:</span></span>
<span id="cb1-100"><a href="#cb1-100" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4401</span><span class="op">:</span></span>
<span id="cb1-101"><a href="#cb1-101" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2045</span><span class="op">;</span></span>
<span id="cb1-102"><a href="#cb1-102" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4405</span><span class="op">:</span></span>
<span id="cb1-103"><a href="#cb1-103" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2050</span><span class="op">;</span></span>
<span id="cb1-104"><a href="#cb1-104" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4410</span><span class="op">:</span></span>
<span id="cb1-105"><a href="#cb1-105" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2055</span><span class="op">;</span></span>
<span id="cb1-106"><a href="#cb1-106" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4415</span><span class="op">:</span></span>
<span id="cb1-107"><a href="#cb1-107" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2060</span><span class="op">;</span></span>
<span id="cb1-108"><a href="#cb1-108" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">7705</span><span class="op">:</span></span>
<span id="cb1-109"><a href="#cb1-109" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">4005</span><span class="op">;</span></span>
<span id="cb1-110"><a href="#cb1-110" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">7910</span><span class="op">:</span></span>
<span id="cb1-111"><a href="#cb1-111" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">4010</span><span class="op">;</span></span>
<span id="cb1-112"><a href="#cb1-112" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">7905</span><span class="op">:</span></span>
<span id="cb1-113"><a href="#cb1-113" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">4015</span><span class="op">;</span></span>
<span id="cb1-114"><a href="#cb1-114" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3600</span><span class="op">:</span></span>
<span id="cb1-115"><a href="#cb1-115" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3605</span><span class="op">:</span></span>
<span id="cb1-116"><a href="#cb1-116" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2605</span><span class="op">;</span></span>
<span id="cb1-117"><a href="#cb1-117" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5700</span><span class="op">:</span></span>
<span id="cb1-118"><a href="#cb1-118" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5705</span><span class="op">:</span></span>
<span id="cb1-119"><a href="#cb1-119" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2505</span><span class="op">;</span></span>
<span id="cb1-120"><a href="#cb1-120" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4107</span><span class="op">:</span></span>
<span id="cb1-121"><a href="#cb1-121" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2015</span><span class="op">;</span></span>
<span id="cb1-122"><a href="#cb1-122" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4111</span><span class="op">:</span></span>
<span id="cb1-123"><a href="#cb1-123" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">4110</span><span class="op">:</span></span>
<span id="cb1-124"><a href="#cb1-124" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2020</span><span class="op">;</span></span>
<span id="cb1-125"><a href="#cb1-125" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5322</span><span class="op">:</span></span>
<span id="cb1-126"><a href="#cb1-126" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2130</span><span class="op">;</span></span>
<span id="cb1-127"><a href="#cb1-127" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5324</span><span class="op">:</span></span>
<span id="cb1-128"><a href="#cb1-128" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2140</span><span class="op">;</span></span>
<span id="cb1-129"><a href="#cb1-129" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5332</span><span class="op">:</span></span>
<span id="cb1-130"><a href="#cb1-130" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2155</span><span class="op">;</span></span>
<span id="cb1-131"><a href="#cb1-131" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5352</span><span class="op">:</span></span>
<span id="cb1-132"><a href="#cb1-132" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2205</span><span class="op">;</span></span>
<span id="cb1-133"><a href="#cb1-133" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5360</span><span class="op">:</span></span>
<span id="cb1-134"><a href="#cb1-134" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2210</span><span class="op">;</span></span>
<span id="cb1-135"><a href="#cb1-135" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5367</span><span class="op">:</span></span>
<span id="cb1-136"><a href="#cb1-136" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2215</span><span class="op">;</span></span>
<span id="cb1-137"><a href="#cb1-137" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5370</span><span class="op">:</span></span>
<span id="cb1-138"><a href="#cb1-138" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2200</span><span class="op">;</span></span>
<span id="cb1-139"><a href="#cb1-139" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5401</span><span class="op">:</span></span>
<span id="cb1-140"><a href="#cb1-140" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2250</span><span class="op">;</span></span>
<span id="cb1-141"><a href="#cb1-141" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5402</span><span class="op">:</span></span>
<span id="cb1-142"><a href="#cb1-142" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2225</span><span class="op">;</span></span>
<span id="cb1-143"><a href="#cb1-143" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5404</span><span class="op">:</span></span>
<span id="cb1-144"><a href="#cb1-144" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2240</span><span class="op">;</span></span>
<span id="cb1-145"><a href="#cb1-145" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">5710</span><span class="op">:</span></span>
<span id="cb1-146"><a href="#cb1-146" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">2605</span><span class="op">;</span></span>
<span id="cb1-147"><a href="#cb1-147" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-148"><a href="#cb1-148" aria-hidden="true" tabindex="-1"></a>            <span class="co">//Receipts</span></span>
<span id="cb1-149"><a href="#cb1-149" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-150"><a href="#cb1-150" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3105</span><span class="op">:</span></span>
<span id="cb1-151"><a href="#cb1-151" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1005</span><span class="op">;</span></span>
<span id="cb1-152"><a href="#cb1-152" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3110</span><span class="op">:</span></span>
<span id="cb1-153"><a href="#cb1-153" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1010</span><span class="op">;</span></span>
<span id="cb1-154"><a href="#cb1-154" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3505</span><span class="op">:</span></span>
<span id="cb1-155"><a href="#cb1-155" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1425</span><span class="op">;</span></span>
<span id="cb1-156"><a href="#cb1-156" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3510</span><span class="op">:</span></span>
<span id="cb1-157"><a href="#cb1-157" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1435</span><span class="op">;</span></span>
<span id="cb1-158"><a href="#cb1-158" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3512</span><span class="op">:</span></span>
<span id="cb1-159"><a href="#cb1-159" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1440</span><span class="op">;</span></span>
<span id="cb1-160"><a href="#cb1-160" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3515</span><span class="op">:</span></span>
<span id="cb1-161"><a href="#cb1-161" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1445</span><span class="op">;</span></span>
<span id="cb1-162"><a href="#cb1-162" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3520</span><span class="op">:</span></span>
<span id="cb1-163"><a href="#cb1-163" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1450</span><span class="op">;</span></span>
<span id="cb1-164"><a href="#cb1-164" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3525</span><span class="op">:</span></span>
<span id="cb1-165"><a href="#cb1-165" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1455</span><span class="op">;</span></span>
<span id="cb1-166"><a href="#cb1-166" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3530</span><span class="op">:</span></span>
<span id="cb1-167"><a href="#cb1-167" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1460</span><span class="op">;</span></span>
<span id="cb1-168"><a href="#cb1-168" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3531</span><span class="op">:</span></span>
<span id="cb1-169"><a href="#cb1-169" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1465</span><span class="op">;</span></span>
<span id="cb1-170"><a href="#cb1-170" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3532</span><span class="op">:</span></span>
<span id="cb1-171"><a href="#cb1-171" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1470</span><span class="op">;</span></span>
<span id="cb1-172"><a href="#cb1-172" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3560</span><span class="op">:</span></span>
<span id="cb1-173"><a href="#cb1-173" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1480</span><span class="op">;</span></span>
<span id="cb1-174"><a href="#cb1-174" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3535</span><span class="op">:</span></span>
<span id="cb1-175"><a href="#cb1-175" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1495</span><span class="op">;</span></span>
<span id="cb1-176"><a href="#cb1-176" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3540</span><span class="op">:</span></span>
<span id="cb1-177"><a href="#cb1-177" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1505</span><span class="op">;</span></span>
<span id="cb1-178"><a href="#cb1-178" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3541</span><span class="op">:</span></span>
<span id="cb1-179"><a href="#cb1-179" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1510</span><span class="op">;</span></span>
<span id="cb1-180"><a href="#cb1-180" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3542</span><span class="op">:</span></span>
<span id="cb1-181"><a href="#cb1-181" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1515</span><span class="op">;</span></span>
<span id="cb1-182"><a href="#cb1-182" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3545</span><span class="op">:</span></span>
<span id="cb1-183"><a href="#cb1-183" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1520</span><span class="op">;</span></span>
<span id="cb1-184"><a href="#cb1-184" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3205</span><span class="op">:</span></span>
<span id="cb1-185"><a href="#cb1-185" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1105</span><span class="op">;</span></span>
<span id="cb1-186"><a href="#cb1-186" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3210</span><span class="op">:</span></span>
<span id="cb1-187"><a href="#cb1-187" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1115</span><span class="op">;</span></span>
<span id="cb1-188"><a href="#cb1-188" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3215</span><span class="op">:</span></span>
<span id="cb1-189"><a href="#cb1-189" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1120</span><span class="op">;</span></span>
<span id="cb1-190"><a href="#cb1-190" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3550</span><span class="op">:</span></span>
<span id="cb1-191"><a href="#cb1-191" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1130</span><span class="op">;</span></span>
<span id="cb1-192"><a href="#cb1-192" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3555</span><span class="op">:</span></span>
<span id="cb1-193"><a href="#cb1-193" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1140</span><span class="op">;</span></span>
<span id="cb1-194"><a href="#cb1-194" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3305</span><span class="op">:</span></span>
<span id="cb1-195"><a href="#cb1-195" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1205</span><span class="op">;</span></span>
<span id="cb1-196"><a href="#cb1-196" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3310</span><span class="op">:</span></span>
<span id="cb1-197"><a href="#cb1-197" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1210</span><span class="op">;</span></span>
<span id="cb1-198"><a href="#cb1-198" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3315</span><span class="op">:</span></span>
<span id="cb1-199"><a href="#cb1-199" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1215</span><span class="op">;</span></span>
<span id="cb1-200"><a href="#cb1-200" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3320</span><span class="op">:</span></span>
<span id="cb1-201"><a href="#cb1-201" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1225</span><span class="op">;</span></span>
<span id="cb1-202"><a href="#cb1-202" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3325</span><span class="op">:</span></span>
<span id="cb1-203"><a href="#cb1-203" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1230</span><span class="op">;</span></span>
<span id="cb1-204"><a href="#cb1-204" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3330</span><span class="op">:</span></span>
<span id="cb1-205"><a href="#cb1-205" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1235</span><span class="op">;</span></span>
<span id="cb1-206"><a href="#cb1-206" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3405</span><span class="op">:</span></span>
<span id="cb1-207"><a href="#cb1-207" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1305</span><span class="op">;</span></span>
<span id="cb1-208"><a href="#cb1-208" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3410</span><span class="op">:</span></span>
<span id="cb1-209"><a href="#cb1-209" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1310</span><span class="op">;</span></span>
<span id="cb1-210"><a href="#cb1-210" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3415</span><span class="op">:</span></span>
<span id="cb1-211"><a href="#cb1-211" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1315</span><span class="op">;</span></span>
<span id="cb1-212"><a href="#cb1-212" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3420</span><span class="op">:</span></span>
<span id="cb1-213"><a href="#cb1-213" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1320</span><span class="op">;</span></span>
<span id="cb1-214"><a href="#cb1-214" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3101</span><span class="op">:</span></span>
<span id="cb1-215"><a href="#cb1-215" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1415</span><span class="op">;</span></span>
<span id="cb1-216"><a href="#cb1-216" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3102</span><span class="op">:</span></span>
<span id="cb1-217"><a href="#cb1-217" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1420</span><span class="op">;</span></span>
<span id="cb1-218"><a href="#cb1-218" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3115</span><span class="op">:</span></span>
<span id="cb1-219"><a href="#cb1-219" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1015</span><span class="op">;</span></span>
<span id="cb1-220"><a href="#cb1-220" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3209</span><span class="op">:</span></span>
<span id="cb1-221"><a href="#cb1-221" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1110</span><span class="op">;</span></span>
<span id="cb1-222"><a href="#cb1-222" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3319</span><span class="op">:</span></span>
<span id="cb1-223"><a href="#cb1-223" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1220</span><span class="op">;</span></span>
<span id="cb1-224"><a href="#cb1-224" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3340</span><span class="op">:</span></span>
<span id="cb1-225"><a href="#cb1-225" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1240</span><span class="op">;</span></span>
<span id="cb1-226"><a href="#cb1-226" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3501</span><span class="op">:</span></span>
<span id="cb1-227"><a href="#cb1-227" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1415</span><span class="op">;</span></span>
<span id="cb1-228"><a href="#cb1-228" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3502</span><span class="op">:</span></span>
<span id="cb1-229"><a href="#cb1-229" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1420</span><span class="op">;</span></span>
<span id="cb1-230"><a href="#cb1-230" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3507</span><span class="op">:</span></span>
<span id="cb1-231"><a href="#cb1-231" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1430</span><span class="op">;</span></span>
<span id="cb1-232"><a href="#cb1-232" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3534</span><span class="op">:</span></span>
<span id="cb1-233"><a href="#cb1-233" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1490</span><span class="op">;</span></span>
<span id="cb1-234"><a href="#cb1-234" aria-hidden="true" tabindex="-1"></a>        <span class="kw">case</span> <span class="dv">3570</span><span class="op">:</span></span>
<span id="cb1-235"><a href="#cb1-235" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="dv">1525</span><span class="op">;</span></span>
<span id="cb1-236"><a href="#cb1-236" aria-hidden="true" tabindex="-1"></a>        <span class="kw">default</span><span class="op">:</span></span>
<span id="cb1-237"><a href="#cb1-237" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-238"><a href="#cb1-238" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-239"><a href="#cb1-239" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 18 Aug 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-08-18.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Simple solutions</title>
    <link>https://maksar.github.io/posts/WAT/2018-08-11.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Simple solutions</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Simple solutions</h1>
    <article>
  <span class="header">
    August 11, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p>Do you like “simple” solution just like I do?</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode c#"><code class="sourceCode cs"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dv">#region debug</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">protected</span> <span class="kw">override</span> <span class="dt">void</span> <span class="fu">OnPreviewKeyDown</span><span class="op">(</span>KeyEventArgs e<span class="op">)</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">if</span> <span class="op">(</span>e<span class="op">.</span><span class="fu">Key</span> <span class="op">==</span> Key<span class="op">.</span><span class="fu">A</span> <span class="op">&amp;&amp;</span> Keyboard<span class="op">.</span><span class="fu">IsKeyDown</span><span class="op">(</span>Key<span class="op">.</span><span class="fu">LeftAlt</span><span class="op">)</span> <span class="op">&amp;&amp;</span> Keyboard<span class="op">.</span><span class="fu">IsKeyDown</span><span class="op">(</span>Key<span class="op">.</span><span class="fu">LeftCtrl</span><span class="op">))</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">if</span> <span class="op">(</span>Context<span class="op">.</span><span class="fu">DeveloperPinchEnabled</span><span class="op">)</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="op">{</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>            Context<span class="op">.</span><span class="fu">DeveloperPinchEnabled</span> <span class="op">=</span> <span class="kw">false</span><span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>        <span class="kw">else</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        <span class="op">{</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>            <span class="dt">var</span> w <span class="op">=</span> <span class="kw">new</span> <span class="fu">EnterAdvancedModeWindow</span><span class="op">();</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>            <span class="dt">var</span> result <span class="op">=</span> w<span class="op">.</span><span class="fu">ShowDialog</span><span class="op">();</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>            <span class="kw">if</span> <span class="op">(</span>result<span class="op">.</span><span class="fu">GetValueOrDefault</span><span class="op">())</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>            <span class="op">{</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>                <span class="kw">if</span> <span class="op">(</span>w<span class="op">.</span><span class="fu">CodeBox</span><span class="op">.</span><span class="fu">Text</span> <span class="op">==</span> <span class="fu">GenerateTodaysPasscode</span><span class="op">())</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>                    Context<span class="op">.</span><span class="fu">DeveloperPinchEnabled</span> <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>    <span class="kw">base</span><span class="op">.</span><span class="fu">OnPreviewKeyDown</span><span class="op">(</span>e<span class="op">);</span></span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a><span class="kw">static</span> <span class="dt">string</span> <span class="fu">GenerateTodaysPasscode</span><span class="op">()</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="dt">var</span> d <span class="op">=</span> DateTime<span class="op">.</span><span class="fu">Now</span><span class="op">;</span></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>    <span class="dt">var</span> x <span class="op">=</span> d<span class="op">.</span><span class="fu">Month</span> <span class="op">*</span> <span class="dv">1000000</span> <span class="op">+</span> d<span class="op">.</span><span class="fu">Day</span> <span class="op">*</span> <span class="dv">10000</span> <span class="op">+</span> d<span class="op">.</span><span class="fu">Year</span><span class="op">;</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>    <span class="kw">return</span> <span class="fu">LargestPrimeFactor</span><span class="op">(</span>x<span class="op">).</span><span class="fu">ToString</span><span class="op">();</span></span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a><span class="kw">static</span> <span class="dt">int</span> <span class="fu">LargestPrimeFactor</span><span class="op">(</span><span class="dt">int</span> x<span class="op">)</span></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>    <span class="fu">ComputePrimesUpTo</span><span class="op">(</span>x<span class="op">);</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>    <span class="kw">return</span> _primes<span class="op">.</span><span class="fu">Where</span><span class="op">(</span>p <span class="op">=&gt;</span> x <span class="op">%</span> p <span class="op">==</span> <span class="dv">0</span><span class="op">).</span><span class="fu">Max</span><span class="op">();</span></span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a><span class="kw">static</span> List<span class="op">&lt;</span><span class="dt">int</span><span class="op">&gt;</span> _primes <span class="op">=</span> <span class="kw">new</span> List<span class="op">&lt;</span><span class="dt">int</span><span class="op">&gt;()</span> <span class="op">{</span> <span class="dv">2</span><span class="op">,</span> <span class="dv">3</span><span class="op">,</span> <span class="dv">5</span><span class="op">,</span> <span class="dv">7</span><span class="op">,</span> <span class="dv">11</span><span class="op">,</span> <span class="dv">13</span><span class="op">,</span> <span class="dv">17</span><span class="op">,</span> <span class="dv">19</span> <span class="op">};</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a><span class="kw">static</span> <span class="dt">void</span> <span class="fu">ComputePrimesUpTo</span><span class="op">(</span><span class="dt">int</span> n<span class="op">)</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>    <span class="dt">var</span> p <span class="op">=</span> _primes<span class="op">[</span>_primes<span class="op">.</span><span class="fu">Count</span> <span class="op">-</span> <span class="dv">1</span><span class="op">]</span> <span class="op">+</span> <span class="dv">2</span><span class="op">;</span></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>    <span class="kw">while</span> <span class="op">(</span>_primes<span class="op">[</span>_primes<span class="op">.</span><span class="fu">Count</span> <span class="op">-</span> <span class="dv">1</span><span class="op">]</span> <span class="op">&lt;</span> n<span class="op">)</span></span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>        <span class="kw">if</span> <span class="op">(</span><span class="fu">IsPrime</span><span class="op">(</span>p<span class="op">))</span></span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>            _primes<span class="op">.</span><span class="fu">Add</span><span class="op">(</span>p<span class="op">);</span></span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>        p <span class="op">+=</span> <span class="dv">2</span><span class="op">;</span></span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a><span class="kw">static</span> <span class="dt">bool</span> <span class="fu">IsPrime</span><span class="op">(</span><span class="dt">int</span> p<span class="op">)</span></span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>    <span class="kw">for</span> <span class="op">(</span><span class="dt">int</span> k <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> _primes<span class="op">[</span>k<span class="op">]</span> <span class="op">*</span> _primes<span class="op">[</span>k<span class="op">]</span> <span class="op">&lt;=</span> p<span class="op">;</span> k<span class="op">++)</span></span>
<span id="cb1-55"><a href="#cb1-55" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span>
<span id="cb1-56"><a href="#cb1-56" aria-hidden="true" tabindex="-1"></a>        <span class="kw">if</span> <span class="op">(</span>p <span class="op">%</span> _primes<span class="op">[</span>k<span class="op">]</span> <span class="op">==</span> <span class="dv">0</span><span class="op">)</span></span>
<span id="cb1-57"><a href="#cb1-57" aria-hidden="true" tabindex="-1"></a>            <span class="kw">return</span> <span class="kw">false</span><span class="op">;</span></span>
<span id="cb1-58"><a href="#cb1-58" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb1-59"><a href="#cb1-59" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-60"><a href="#cb1-60" aria-hidden="true" tabindex="-1"></a>    <span class="kw">return</span> <span class="kw">true</span><span class="op">;</span></span>
<span id="cb1-61"><a href="#cb1-61" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span>
<span id="cb1-62"><a href="#cb1-62" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-63"><a href="#cb1-63" aria-hidden="true" tabindex="-1"></a><span class="dv">#endregion</span></span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 11 Aug 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-08-11.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Security best practices</title>
    <link>https://maksar.github.io/posts/WAT/2018-08-05.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Security best practices</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Security best practices</h1>
    <article>
  <span class="header">
    August  5, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="i-want-to-know-everything">I want to know everything</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="at">@Override</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">getPassword</span><span class="op">()</span> <span class="op">{</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    logger<span class="op">.</span><span class="fu">debug</span><span class="op">(</span><span class="st">&quot;pwd is:::&quot;</span><span class="op">+</span><span class="kw">super</span><span class="op">.</span><span class="fu">getPassword</span><span class="op">());</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">super</span><span class="op">.</span><span class="fu">getPassword</span><span class="op">();</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<h2 id="i-really-really-want-to-know">I really, really want to know…</h2>
<div class="sourceCode" id="cb2"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span>  <span class="at">@ResponseBody</span> UserInfo  <span class="fu">login</span><span class="op">(</span><span class="at">@RequestBody</span> UserInfo userInfo<span class="op">,</span>HttpSession session<span class="op">)</span>  <span class="op">{</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    logger<span class="op">.</span><span class="fu">info</span><span class="op">(</span><span class="st">&quot;Inside Login Controller - user : &quot;</span> <span class="op">+</span> userInfo<span class="op">);</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    logger<span class="op">.</span><span class="fu">info</span><span class="op">(</span><span class="st">&quot;User = &quot;</span><span class="op">+</span>userInfo<span class="op">.</span><span class="fu">getEmail</span><span class="op">());</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    logger<span class="op">.</span><span class="fu">info</span><span class="op">(</span><span class="st">&quot;Password =&quot;</span><span class="op">+</span>userInfo<span class="op">.</span><span class="fu">getPassword</span><span class="op">());</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    <span class="dt">boolean</span> authenticated <span class="op">=</span> <span class="kw">false</span><span class="op">;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="cf">try</span><span class="op">{</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>    authenticated <span class="op">=</span> userDelegate<span class="op">.</span><span class="fu">isValidUser</span><span class="op">(</span>userInfo<span class="op">.</span><span class="fu">getEmail</span><span class="op">(),</span> userInfo<span class="op">.</span><span class="fu">getPassword</span><span class="op">());</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    logger<span class="op">.</span><span class="fu">info</span><span class="op">(</span><span class="st">&quot;User Authentication:&quot;</span> <span class="op">+</span> authenticated<span class="op">);</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">catch</span> <span class="op">(</span><span class="bu">Exception</span> e<span class="op">)</span> <span class="op">{</span> e<span class="op">.</span><span class="fu">printStackTrace</span><span class="op">();</span> <span class="op">}</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>authenticated<span class="op">){</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>        <span class="cf">try</span><span class="op">{</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>        userInfo <span class="op">=</span> userDelegate<span class="op">.</span><span class="fu">getUserInfo</span><span class="op">(</span>userInfo<span class="op">.</span><span class="fu">getEmail</span><span class="op">());</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">catch</span><span class="op">(</span><span class="bu">Exception</span> e<span class="op">){</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>            logger<span class="op">.</span><span class="fu">info</span><span class="op">(</span><span class="st">&quot;Exception in User Authentication:&quot;</span><span class="op">);</span></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>            e<span class="op">.</span><span class="fu">printStackTrace</span><span class="op">();</span></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>        userInfo<span class="op">.</span><span class="fu">setMessage</span><span class="op">(</span><span class="st">&quot;Successfully logged in.&quot;</span><span class="op">);</span></span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>        session<span class="op">.</span><span class="fu">setAttribute</span><span class="op">(</span><span class="st">&quot;userInfo&quot;</span><span class="op">,</span> userInfo<span class="op">);</span></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span><span class="cf">else</span><span class="op">{</span></span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>        userInfo<span class="op">.</span><span class="fu">setMessage</span><span class="op">(</span><span class="st">&quot;Login Failed. Invalid user name / password, Try again...&quot;</span><span class="op">);</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a> <span class="cf">return</span> userInfo<span class="op">;</span></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<h2 id="in-any-given-moment">In any given moment</h2>
<div class="sourceCode" id="cb3"><pre class="sourceCode java"><code class="sourceCode java"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">String</span> <span class="fu">toString</span><span class="op">(){</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="st">&quot;email : &quot;</span> <span class="op">+</span> <span class="fu">getEmail</span><span class="op">()</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, First name : &quot;</span> <span class="op">+</span> <span class="fu">getFirstName</span><span class="op">()</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, Last name : &quot;</span> <span class="op">+</span> <span class="fu">getLastName</span><span class="op">()</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, zip: &quot;</span> <span class="op">+</span> <span class="fu">getZip</span><span class="op">()</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, Phone Number: &quot;</span> <span class="op">+</span> <span class="fu">getPhoneNumber</span><span class="op">()</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, dob: &quot;</span> <span class="op">+</span> <span class="fu">getDob</span><span class="op">()</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, partner Age: &quot;</span> <span class="op">+</span> <span class="fu">getPartnerAge</span><span class="op">()</span></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, Password: &quot;</span> <span class="op">+</span> <span class="fu">getPassword</span><span class="op">()</span></span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>            <span class="op">+</span> <span class="st">&quot;, Status: &quot;</span> <span class="op">+</span> <span class="fu">getStatus</span><span class="op">()</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>            <span class="op">;</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div>
<h2 id="but-im-not-greedy-can-let-others-see">But I’m not greedy, can let others see</h2>
<div class="sourceCode" id="cb4"><pre class="sourceCode html"><code class="sourceCode html"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;tr&gt;</span></span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;td&gt;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        Passwort<span class="dv">&amp;nbsp;</span>*</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/td&gt;</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;td&gt;</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;input</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;inp&quot;</span> <span class="er">type</span><span class="ot">=</span><span class="st">&quot;password&quot;</span> <span class="er">name</span><span class="ot">=</span><span class="st">&quot;password&quot;</span> <span class="er">size</span><span class="ot">=</span><span class="st">&quot;20&quot;</span> <span class="er">maxlength</span><span class="ot">=</span><span class="st">&quot;30&quot;</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="ot">                value=</span><span class="st">'</span><span class="er">&lt;</span><span class="st">%= user.getPassword() %&gt;'</span> <span class="kw">/&gt;</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/td&gt;</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/tr&gt;</span></span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;tr&gt;</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;td&gt;</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>        Wiederholung Passwort<span class="dv">&amp;nbsp;</span>*</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/td&gt;</span></span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;td&gt;</span></span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>        <span class="kw">&lt;input</span> <span class="er">class</span><span class="ot">=</span><span class="st">&quot;inp&quot;</span> <span class="er">type</span><span class="ot">=</span><span class="st">&quot;password&quot;</span> <span class="er">name</span><span class="ot">=</span><span class="st">&quot;confirmPassword&quot;</span> <span class="er">size</span><span class="ot">=</span><span class="st">&quot;20&quot;</span> <span class="er">maxlength</span><span class="ot">=</span><span class="st">&quot;30&quot;</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a><span class="ot">                value=</span><span class="st">'</span><span class="er">&lt;</span><span class="st">%= user.getPassword() %&gt;'</span> <span class="kw">/&gt;</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>    <span class="kw">&lt;/td&gt;</span></span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;/tr&gt;</span></span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;input</span> <span class="er">type</span><span class="ot">=</span><span class="st">&quot;hidden&quot;</span> <span class="er">name</span><span class="ot">=</span><span class="st">&quot;</span><span class="er">&lt;</span><span class="st">%=customerBean.encodeStringByBeanID( &quot;</span><span class="er">email&quot;</span> <span class="er">)%</span><span class="kw">&gt;</span>&quot; value=&quot;<span class="er">&lt;</span>%=user.getEmail()%&gt;&quot;/&gt;</span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;input</span> <span class="er">type</span><span class="ot">=</span><span class="st">&quot;hidden&quot;</span> <span class="er">name</span><span class="ot">=</span><span class="st">&quot;</span><span class="er">&lt;</span><span class="st">%=customerBean.encodeStringByBeanID( &quot;</span><span class="er">password&quot;</span> <span class="er">)%</span><span class="kw">&gt;</span>&quot; value=&quot;<span class="er">&lt;</span>%=user.getPassword()%&gt;&quot;/&gt;</span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a><span class="kw">&lt;input</span> <span class="er">type</span><span class="ot">=</span><span class="st">&quot;hidden&quot;</span> <span class="er">name</span><span class="ot">=</span><span class="st">&quot;</span><span class="er">&lt;</span><span class="st">%=customerBean.encodeStringByBeanID( &quot;</span><span class="er">confirmPassword&quot;</span> <span class="er">)%</span><span class="kw">&gt;</span>&quot; value=&quot;<span class="er">&lt;</span>%=user.getPassword()%&gt;&quot;/&gt;</span></code></pre></div>
<h2 id="jokes-aside-this-is-real-know-how">Jokes aside, this is real know-how!</h2>
<div class="sourceCode" id="cb5"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">function</span> validateToken(<span class="va">$token</span><span class="ot">,</span> <span class="va">$sessionId</span>)</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>{</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> (<span class="kw">empty</span>(<span class="va">$token</span>) <span class="op">||</span> <span class="kw">empty</span>(<span class="va">$sessionId</span>)) {</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">false</span><span class="ot">;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>    <span class="va">$secret</span> <span class="op">=</span> <span class="va">$this</span>-&gt;config-&gt;getItem(<span class="st">'token_secret'</span>)<span class="ot">;</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>    <span class="va">$currentTimestamp</span> <span class="op">=</span> <span class="fu">time</span>()<span class="ot">;</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>    <span class="va">$secondsLimit</span> <span class="op">=</span> <span class="kw">self</span>::<span class="cn">TOKEN_TTL</span><span class="ot">;</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>    <span class="cf">do</span> {</span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>        <span class="va">$currentToken</span> <span class="op">=</span> <span class="fu">hash</span>(<span class="st">'sha512'</span><span class="ot">,</span> <span class="va">$sessionId</span> <span class="op">.</span> <span class="va">$currentTimestamp</span> <span class="op">.</span> <span class="va">$secret</span>)<span class="ot">;</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>        <span class="va">$isTokenValid</span> <span class="op">=</span> <span class="va">$currentToken</span> <span class="op">===</span> <span class="va">$token</span><span class="ot">;</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>        <span class="op">--</span><span class="va">$secondsLimit</span><span class="ot">;</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>        <span class="op">--</span><span class="va">$currentTimestamp</span><span class="ot">;</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>    } <span class="cf">while</span> (<span class="va">$secondsLimit</span> <span class="op">!==</span> <span class="dv">0</span> <span class="op">&amp;&amp;</span> <span class="op">!</span><span class="va">$isTokenValid</span>)<span class="ot">;</span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="va">$isTokenValid</span><span class="ot">;</span></span>
<span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sun, 05 Aug 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-08-05.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Few examples of reading cookie values</title>
    <link>https://maksar.github.io/posts/WAT/2018-08-04.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Few examples of reading cookie values</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Few examples of reading cookie values</h1>
    <article>
  <span class="header">
    August  4, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <p>There are several examples of “how to read cookies”. Which one do you like the most?</p>
<h2 id="classical">Classical</h2>
<div class="sourceCode" id="cb1"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">GetCookieValue</span>(cookieName) {</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> cookies <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="at">cookie</span><span class="op">.</span><span class="fu">split</span>(<span class="st">';'</span>)<span class="op">;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> (<span class="kw">var</span> i <span class="op">=</span> <span class="dv">0</span><span class="op">;</span> i <span class="op">&lt;</span> cookies<span class="op">.</span><span class="at">length</span><span class="op">;</span> i<span class="op">++</span>) {</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> cookie <span class="op">=</span> cookies[i]<span class="op">;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        <span class="cf">while</span> (cookie<span class="op">.</span><span class="fu">charAt</span>(<span class="dv">0</span>) <span class="op">===</span> <span class="st">' '</span>)</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>            cookie <span class="op">=</span> cookie<span class="op">.</span><span class="fu">substring</span>(<span class="dv">1</span><span class="op">,</span> cookie<span class="op">.</span><span class="at">length</span>)<span class="op">;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> (cookie<span class="op">.</span><span class="fu">indexOf</span>(cookieName) <span class="op">===</span> <span class="dv">0</span>) {</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> cookie<span class="op">.</span><span class="fu">substring</span>(cookieName<span class="op">.</span><span class="at">length</span> <span class="op">+</span> <span class="dv">1</span><span class="op">,</span> cookie<span class="op">.</span><span class="at">length</span>)<span class="op">;</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<h2 id="i-see-it-this-way">I see it this way</h2>
<div class="sourceCode" id="cb2"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getCookie</span>(name) {</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> cookies <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="at">cookie</span><span class="op">.</span><span class="fu">split</span>(<span class="st">'; '</span>)<span class="op">;</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span>(i<span class="op">=</span><span class="dv">0</span><span class="op">,</span> n<span class="op">=</span>cookies<span class="op">.</span><span class="at">length</span><span class="op">;</span> i<span class="op">&lt;</span>n<span class="op">;</span> i<span class="op">++</span>) {</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span>(cookies[i]<span class="op">.</span><span class="fu">indexOf</span>(name) <span class="op">!=</span> <span class="op">-</span><span class="dv">1</span>) {</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>            <span class="kw">var</span> target <span class="op">=</span> cookies[i]<span class="op">.</span><span class="fu">split</span>(<span class="st">'='</span>)<span class="op">;</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>        }</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span>(target) {</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> target[<span class="dv">1</span>]<span class="op">;</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    }<span class="cf">else</span>{</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="st">''</span><span class="op">;</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<h2 id="my-faviourite-regular-expressions">My faviourite regular expressions</h2>
<div class="sourceCode" id="cb3"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getCookie</span>(name) {</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> matches <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="at">cookie</span><span class="op">.</span><span class="fu">match</span>(<span class="kw">new</span> <span class="bu">RegExp</span>(</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>        <span class="st">&quot;(?:^|; )&quot;</span> <span class="op">+</span> name<span class="op">.</span><span class="fu">replace</span>(<span class="ss">/</span><span class="sc">([\.$?*|{}\(\)\[\]\\\/\+^])</span><span class="ss">/g</span><span class="op">,</span> <span class="st">'</span><span class="sc">\\</span><span class="st">$1'</span>) <span class="op">+</span> <span class="st">&quot;=([^;]*)&quot;</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    ))<span class="op">;</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> matches <span class="op">?</span> <span class="pp">decodeURIComponent</span>(matches[<span class="dv">1</span>]) <span class="op">:</span> <span class="kw">undefined</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<h2 id="key-uncertainty">Key uncertainty</h2>
<div class="sourceCode" id="cb4"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getCookie</span>(key) {</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> keyValue <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="at">cookie</span><span class="op">.</span><span class="fu">match</span>(<span class="st">'(^|;) ?'</span> <span class="op">+</span> key <span class="op">+</span> <span class="st">'=([^;]*)(;|$)'</span>)<span class="op">;</span></span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> keyValue <span class="op">?</span> keyValue[<span class="dv">2</span>] <span class="op">:</span> <span class="kw">null</span><span class="op">;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<h2 id="lollipop">Lollipop</h2>
<div class="sourceCode" id="cb5"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getCookie</span>(name) {</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> value <span class="op">=</span> <span class="st">&quot;; &quot;</span> <span class="op">+</span> <span class="bu">document</span><span class="op">.</span><span class="at">cookie</span><span class="op">;</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> parts <span class="op">=</span> value<span class="op">.</span><span class="fu">split</span>(<span class="st">&quot;; &quot;</span> <span class="op">+</span> name <span class="op">+</span> <span class="st">&quot;=&quot;</span>)<span class="op">;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> (parts<span class="op">.</span><span class="at">length</span> <span class="op">==</span> <span class="dv">2</span>) <span class="cf">return</span> parts<span class="op">.</span><span class="fu">pop</span>()<span class="op">.</span><span class="fu">split</span>(<span class="st">&quot;;&quot;</span>)<span class="op">.</span><span class="fu">shift</span>()<span class="op">;</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<h2 id="impermanence">Impermanence</h2>
<div class="sourceCode" id="cb6"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">getCookie</span>(name) {</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>     <span class="kw">var</span> cname <span class="op">=</span> name <span class="op">+</span> <span class="st">&quot;=&quot;</span><span class="op">;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> dc <span class="op">=</span> <span class="bu">document</span><span class="op">.</span><span class="at">cookie</span><span class="op">;</span></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> ( dc<span class="op">.</span><span class="at">length</span> <span class="op">&gt;</span> <span class="dv">0</span> ) {</span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>       begin <span class="op">=</span> dc<span class="op">.</span><span class="fu">indexOf</span>(cname)<span class="op">;</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>       <span class="cf">if</span> ( begin <span class="op">!=</span> <span class="op">-</span><span class="dv">1</span> ) {</span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>             begin <span class="op">+=</span> cname<span class="op">.</span><span class="at">length</span><span class="op">;</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>          end <span class="op">=</span> dc<span class="op">.</span><span class="fu">indexOf</span>(<span class="st">&quot;;&quot;</span><span class="op">,</span>begin)<span class="op">;</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>          <span class="cf">if</span> (end <span class="op">==</span> <span class="op">-</span><span class="dv">1</span>) end <span class="op">=</span> dc<span class="op">.</span><span class="at">length</span><span class="op">;</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>          <span class="cf">return</span> <span class="pp">unescape</span>(dc<span class="op">.</span><span class="fu">substring</span>(begin<span class="op">,</span> end) )<span class="op">;</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>       }</span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
<h2 id="hopelessness">Hopelessness</h2>
<div class="sourceCode" id="cb7"><pre class="sourceCode javascript"><code class="sourceCode javascript"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">function</span> <span class="fu">GetCookie</span>(name)</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>{</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">var</span> cookies<span class="op">=</span><span class="bu">document</span><span class="op">.</span><span class="at">cookie</span><span class="op">.</span><span class="fu">split</span>(<span class="st">';'</span>)<span class="op">;</span></span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span>(<span class="kw">var</span> i<span class="op">=</span><span class="dv">0</span><span class="op">;</span>i<span class="op">&lt;</span>cookies<span class="op">.</span><span class="at">length</span><span class="op">;</span>i<span class="op">++</span>)</span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>    {</span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">var</span> parts<span class="op">=</span>cookies[i]<span class="op">.</span><span class="fu">split</span>(<span class="st">'='</span>)<span class="op">;</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span>(name<span class="op">==</span>parts[<span class="dv">0</span>]<span class="op">.</span><span class="fu">replace</span>(<span class="ss">/</span><span class="sc">\s</span><span class="ss">/g</span><span class="op">,</span><span class="st">''</span>))</span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> <span class="pp">unescape</span>(parts[<span class="dv">1</span>])</span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a>    }</span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>    <span class="co">//return undefined..</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>}</span></code></pre></div>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 04 Aug 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-08-04.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>Development processes</title>
    <link>https://maksar.github.io/posts/WAT/2018-07-07.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - Development processes</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>Development processes</h1>
    <article>
  <span class="header">
    July  7, 2018 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/WAT.html">WAT</a> 
  </span>
  <section>
    <h2 id="proposal-from-the-project-technical-lead-to-improve-development-processes.">Proposal from the project technical lead to improve development processes.</h2>
<p>Configuring additional sonar rudders to trigger and analyze new changes for compliance with code size and complexity conventions (discussed with the team). The build will fail if the following metrics are not met:</p>
<ul>
<li>The number of lines of code in a method should not exceed 100</li>
<li>The number of lines of code in a class should not exceed 1000</li>
<li>The number of lines of code in a file should not exceed 1000</li>
<li>The number of characters in a line of code should not exceed 130</li>
<li>The number of methods / constructors / properties in a class should not exceed 25</li>
<li>The number of method / constructor parameters should not exceed 10</li>
<li>The complexity of a method or property should not exceed 10</li>
<li>Complexity of the class must not exceed 100</li>
</ul>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Sat, 07 Jul 2018 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/WAT/2018-07-07.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>
<item>
    <title>TeamCity bootstrapping</title>
    <link>https://maksar.github.io/posts/code/2017-02-21-teamcity.html</link>
    <description><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Shestakov Alex Blog - TeamCity bootstrapping</title>
  <link rel="stylesheet" href="../../css/default.css" />

  <script type="text/javascript" src="../../vendor/jquery/jquery-3.6.0.min.js"></script>
  <script type="text/javascript" src="../../vendor/fresco/js/fresco.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../../vendor/fresco/css/fresco.css" />

  <link rel="stylesheet" href="../../vendor/highlight/styles/atom-one-dark.min.css">
  <script src="../../vendor/highlight/highlight.min.js"></script>
  <script src="../../vendor/highlight/languages/haskell.min.js"></script>
  <script src="../../vendor/highlight/languages/ruby.min.js"></script>
  <script src="../../vendor/highlight/languages/shell.min.js"></script>
  <script src="../../vendor/highlight/languages/kotlin.min.js"></script>
  <script src="../../vendor/highlight/languages/javascript.min.js"></script>
  <script>hljs.highlightAll();</script>
</head>

<body>
  <header>
    <div class="logo">
      <a href="../../">Shestakov Alex</a>
    </div>
    <nav>
      &amp;<a href="../../languages/english.html">english</a> &amp;<a href="../../languages/russian.html">russian</a>
      @<a href="../../categories/WAT.html">WAT</a> @<a href="../../categories/code.html">code</a> @<a href="../../categories/projects.html">projects</a>
      <a href="../../about.html">About</a>
    </nav>
  </header>

  <main role="main">
    <h1>TeamCity bootstrapping</h1>
    <article>
  <span class="header">
    February 21, 2017 &amp;<a href="../../languages/english.html">english</a> @<a href="../../categories/code.html">code</a> #<a href="../../tags/teamcity.html">teamcity</a>
  </span>
  <section>
    <p>This repository has born as a solution for the repeating and tedious Continuous Integration servers (TeamCity) installation across the company. It provides a way to quickly bootstrap and run TeamCity, automatically integrated with VCS of choice and setup reporting tool for many languages.</p>
<!--more-->
<p><a href="../../images/team-city/1.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/team-city/1.jpg" /></a> <a href="../../images/team-city/2.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/team-city/2.jpg" /></a> <a href="../../images/team-city/3.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/team-city/3.jpg" /></a> <a href="../../images/team-city/4.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/team-city/4.jpg" /></a> <a href="../../images/team-city/5.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/team-city/5.jpg" /></a> <a href="../../images/team-city/6.jpg" class="fresco" data-fresco-group="thumbnail" data-fresco-options="ui: 'inside', thumbnails: false"><img src="../../previews/team-city/6.jpg" /></a></p>
<p>Using this bootstrap solution allows to:</p>
<ul>
<li>Unify the approach to setup CI environment for new and existing projects.</li>
<li>Keep CI configuration in project’s source code repository.</li>
<li>Save time of technical leader or technical coordinator spent on initial an consequent CI configuration.</li>
<li>Skip basic CI configuration steps, as bootstrap provides pre-configured templates for each technology it supports.</li>
</ul>
<h2 id="supported-platforms-and-languages">Supported platforms and languages</h2>
<p>Bootstrap supports both BitBucket and GitHub (even with 2FA enabled) as a VCS.</p>
<p>It can be used to provision CI environment for 5 main platforms:</p>
<ul>
<li>Ruby
<ul>
<li><code>rspec</code> as testing library</li>
<li><code>bundler</code> and dependency manager</li>
<li><code>rubocop</code> as style check library</li>
<li><code>metric_fu</code> as code quality library</li>
</ul></li>
<li>Java
<ul>
<li><code>maven</code> or <code>gradle</code> as project manager</li>
<li><code>checkstyle</code> as style check library</li>
<li><code>findbugs</code> and <code>pmd</code> as code quality library</li>
</ul></li>
<li>Python
<ul>
<li><code>pip3</code> as dependency manager</li>
<li><code>pytest</code> as testing library</li>
<li><code>flake8</code> as style check library</li>
</ul></li>
<li>Swift
<ul>
<li><code>swiftlint</code> as style check library</li>
<li><code>taylor</code> as code quality library</li>
</ul></li>
<li>.NET
<ul>
<li>Xamarin</li>
<li>Core</li>
</ul></li>
<li>JavaScript</li>
<li>PHP</li>
<li>Golang</li>
<li>Swift</li>
</ul>
<h2 id="system-requirements">System requirements</h2>
<p>Since bootstrap highly depends on Docker and shell scripts, it works well on Linux and MacOS operating systems. Support of .NET uses Windows containers and PowerShell, so it works on Windows 10 and Windows Server 2016. Typical usage scenario suggests running bootstrap on virtual server inside company’s intranet. If you are planning to use your VM only as a CI server, there is no need to ask HD about full-featured Ubuntu LTS installation. HD has special lightweight image (based on Arch Linux) for running Docker-based systems (no additional installation steps are needed).</p>
<h3 id="installation">Installation</h3>
<p>Bootstrap script heavily depends on core Linux tools: <code>git</code>, <code>sed</code>, <code>grep</code>, <code>dialog</code> and <code>curl</code>. Use the following shell commands to install dependencies:</p>
<ul>
<li>Install <code>docker</code> and <code>docker-compose</code> according to official installation steps for your OS.</li>
<li>MacOS: <code>brew install dialog curl git gnu-sed</code> (make sure GNU version of sed appears earlier in your PATH)</li>
<li>Linux: <code>apt-get update &amp;&amp; apt-get install -y dialog curl git</code></li>
</ul>
<h3 id="prerequisites">Prerequisites:</h3>
<p>In order for bootstrap to successfully integrate CI with VCS, you have to have:</p>
<ul>
<li>an administrator access to the project’s source code repository (in case you don’t have such access, please create a HelpDesk request in Jira);</li>
<li>know project name (like LifeChurch), BitBucket project name, BitBucket repository name, names of team members you want to add as users of CI;</li>
<li>server to host your project’s CI (usually its internal VM, provided by MDIS, but can be an external server as well);</li>
<li>a cup of coffee.</li>
</ul>
<h2 id="usage">Usage</h2>
<ol type="1">
<li>Run <code>ssh-agent</code> locally to cache default ssh key and forward them to the target VM machine. This is needed to give VM access to the bootstrap repository. Make sure you have public key added to your BitBucket account.</li>
<li>Establish SSH connection to the project’s VM: <code>ssh root@project-vm-name -o ForwardAgent=yes</code>. If its typical Ubuntu or Debian machine, you’ll need to install some stuff so it’s better to be a <code>root</code>. In case of Arch, everything is already installed for you, so login as docker user: <code>ssh docker@project-vm-name -o ForwardAgent=yes</code>.</li>
<li>Install prerequisites: <code>apt-get update &amp;&amp; apt-get install -y dialog curl git</code> if not installed.</li>
<li>Clone this repository: <code>git clone ssh://git@git.itransition.com:7999/projectalude/teamcity-bootstrap.git</code>.</li>
<li>Enter teamcity-bootstrap <code>cd teamcity-bootstrap</code> folder and make any modifications to the <code>Docker.$PLATFORM</code> file to add/remove software inside TeamCity agent image.</li>
<li>Run <code>./bootstrap.sh</code> command to start provisioning process.</li>
<li>Answer to the installation wizard’s questions and wait a couple of minutes.</li>
<li>Commit all your changes to the project’s branch and push. You’ll find this helpful on CI server re-setup.</li>
</ol>
<p>If you are not satisfied with the results, perform any modifications to the configuration files and/or scripts and re-execute ./bootstrap.sh command. Everything will be built from scratch again.</p>
<p>To stop provisioned environment, use following command:</p>
<pre class="console"><code>$ docker-compose -f docker-compose.yml -f docker-compose.$PLATFORM.yml -f docker-compose.agents.$TOTAL_AGENTS.yml down</code></pre>
<h2 id="update">Update</h2>
<p>Whenever new version of the TeamCity becomes available, new commits will appear in <code>master</code> branch of this repository. Updating procedure is easy: on your VM, you can merge master branch to your project’s branch and restart docker-compose services. This will build new TeamCity server image, all agent containers will be automatically updated upon start.</p>
<pre class="console"><code>$ git checkout master
$ git pull origin master
$ git merge master
$ git checkout project_branch
$ git merge master
$ docker-compose -f docker-compose.yml -f docker-compose.$PLATFORM.yml -f docker-compose.agents.$TOTAL_AGENTS.yml build
$ docker-compose -f docker-compose.yml -f docker-compose.$PLATFORM.yml -f docker-compose.agents.$TOTAL_AGENTS.yml up -d</code></pre>
<h2 id="passwords-expiration">Passwords expiration</h2>
<p>Since BitBucket provides only Basic Auth for using it’s API, TeamCity has to store password from team member internally. Fortunately, there is a way to securely store sensitive data inside TeamCity without exposing it on GUI or inside configuration Kotlin files. When you notice, that TeamCity has stopped reporting build statuses back to BitBucket, run <code>update_commit_status_password.sh</code> script. It will ask for the username (does not have to be the same as on initial bootstrap) and domain password. Script then will update secure password value inside TeamCity and make corresponding changes inside project repository.</p>
<h2 id="internals">Internals</h2>
<p>Bootstrap consists of three main components:</p>
<ul>
<li>Installation bash script.</li>
<li>Docker compose environment.</li>
<li>Template collection for each supported platform.</li>
</ul>
<h3 id="installation-script">Installation script</h3>
<p>Responsibilities:</p>
<ul>
<li>Orchestration of docker-compose configuration to set run specific containers.</li>
<li>Communication with TeamCity via HTTP API to perform initial setup.</li>
<li>Communication with VCS (BitBucket or GitHub) to setup access to the code from CI by SSH keys.</li>
</ul>
<p>To get the idea what exactly installation script is doing, lets see typical log messages:</p>
<pre class="console"><code>Destroying previous versions of docker images.
Generating access keys.
Uploading public key to BitBucket.
Executing platform specific scripts.
Downloading PostgreSQL driver.
Waiting for TeamCity server to accept agreement...
Accepting license agreement.
Adding private key to the TeamCity.
Creating users.
Granting admin privileges to the main user.
Creating project.
Generating custom config.
TeamCity configuration dir does not exist, Generating from the template.
Creating VCS.
Enable configuration synchronization.
Authorizing agents.
Scheduling settings update.
Waiting for TeamCity server to accept configuration...
Assigning project to the default agent pool.
Triggering build.
TeamCity instance is ready!
Passwords for users:</code></pre>
<h3 id="docker-compose">docker-compose</h3>
<p><code>docker-compose</code> allows to specify many <code>yml</code> files to operate with. Bootstrap benefits from that feature by splitting configuration into three parts:</p>
<ul>
<li>Main configuration - <code>docker-compose.yml</code>. Contains skeleton list of services: TeamCity server, its database, list of TeamCity agents, database for the application.</li>
<li>Agents technology configuration - <code>docker-compose.TECHNOLOGY.yml</code>. By selecting of the configuration files, bootstrap chooses appropriate image for the agent (each technology stack requires own set of tools).</li>
<li>Agents count configuration - <code>docker-compose.agents.N.yml</code>. By selecting of the configuration files, bootstrap limits number of TeamCity agents being started.</li>
</ul>
<p>It wasn’t possible to define only one TeamCity agent service inside <code>docker-compose.yml</code> file and use <code>scale</code> parameter to control agents count. The problem hides in environment variables. Docker does not support specifying different set or even different values to the environment variables of the same service. But this is needed to differentiate agents between each other.</p>
<h3 id="templates">Templates</h3>
<p>Template is a folder, which contains TeamCity configuration (build plans, steps to execute during builds, reports to collect, etc) in form of Kotlin files, combined into maven project. Installation script asks user for the technology and uses corresponding branch of the template collection repository. Then, script modifies the template by substituting placeholders for project’s name, repository address and etc. After substitution process, installation scripts commits build configuration to the project repository inside <code>.teamcity</code> folder.</p>
<p>TeamCity detects changes inside <code>.teamcity</code> folder and applies modification to the build process. So, there is no need to re-configure TeamCity using it’s administrative interface, all required changed can be made by editing <code>.kt</code> files.</p>
<p>Since TeamCity configuration is a simple <code>maven</code> project, it is possible to ensure, that modifications were safe (at least compilable) by executing <code>mvn package</code> command inside <code>.teamcity</code> folder before pushing to remote git repository. Loading this project in IntelliJ IDEA gives auto-completion of keys and properties. In case, when you don’t know what to change, it is possible to:</p>
<ol type="1">
<li>Disable VCS settings synchronization for the project using TeamCity GUI.</li>
<li>Make changes to the project configuration using TeamCity GUI.</li>
<li>Re-enable VCS settings synchronization using TeamCity GUI. TeamCity will prompt to commit all changes back to project’s repository.</li>
</ol>
<h2 id="contribution">Contribution</h2>
<p>Special thanks to:</p>
<ul>
<li><em>Blinov, Alexey</em> - for starting the project and investigation TeamCity configuration abilities.</li>
<li><em>Atroshko, Gennady</em> - for early adoption, finding and fixing defects.</li>
<li><em>Buevich, Pavel</em> - for early adoption, finding and fixing defects.</li>
<li><em>Katlinsky, Ilya</em> - for introducing Gradle support and working on Java template.</li>
<li><em>Pashkovich, Anatoly</em> - for Swift support and ability to work on MacOS VMs.</li>
<li><em>Pyatlin, Aleksey</em> - for .NET support and ability to work on Windows VMs.</li>
<li><em>Sushko, Valery</em> - for password generation feature, many code simplification ideas.</li>
<li><em>Sviridov, Andrei</em> - for Python support, finding and fixing defects.</li>
<li><em>Vasilevsky, Evgeny</em> - for early adoption, finding and fixing defects.</li>
</ul>
<p>Ideas and Pull Requests are welcome.</p>
<h2 id="plans">Plans</h2>
<ul>
<li>Integrate sonar into bootstrap script.</li>
<li>Integrate with AD to manage users.</li>
<li>Introduce global dashboard.</li>
<li>Support branches, other than <code>master</code> for <code>GitFlow</code> lovers.</li>
<li>Cache invalidation</li>
<li>Why so strange name? It is an anagram for <code>TeamCity Bootstrap</code>.</li>
</ul>
  </section>
</article>

  </main>

  <footer>
    <a type="application/rss+xml" href="../../rss.xml">RSS Feed</a>
    Site generated by
    <a href="http://jaspervdj.be/hakyll">Hakyll</a>
  </footer>
</body>

</html>]]></description>
    <pubDate>Tue, 21 Feb 2017 00:00:00 UT</pubDate>
    <guid>https://maksar.github.io/posts/code/2017-02-21-teamcity.html</guid>
    <dc:creator>Shestakov Alex</dc:creator>
</item>

    </channel>
</rss>
